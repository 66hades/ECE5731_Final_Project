
out.elf:     file format elf32-tradlittlemips


Disassembly of section .reset:

bd001970 <_reset>:
bd001970:	0f40065e 	jal	bd001978 <_startup>
bd001974:	00000000 	nop

bd001978 <_startup>:
bd001978:	401a6000 	mfc0	k0,c0_status
bd00197c:	7f5a04c0 	ext	k0,k0,0x13,0x1
bd001980:	13400005 	beqz	k0,bd001998 <_no_nmi>
bd001984:	00000000 	nop
bd001988:	3c1a9d00 	lui	k0,0x9d00
bd00198c:	275a6200 	addiu	k0,k0,25088
bd001990:	03400008 	jr	k0
bd001994:	00000000 	nop

bd001998 <_no_nmi>:
bd001998:	3c1da002 	lui	sp,0xa002
bd00199c:	27bdfff0 	addiu	sp,sp,-16
bd0019a0:	3c1ca000 	lui	gp,0xa000
bd0019a4:	279c7ff0 	addiu	gp,gp,32752
bd0019a8:	40096002 	mfc0	t1,c0_srsctl
bd0019ac:	01205820 	add	t3,t1,zero
bd0019b0:	7d2a1e80 	ext	t2,t1,0x1a,0x4
bd0019b4:	7d494984 	ins	t1,t2,0x6,0x4
bd0019b8:	40896002 	mtc0	t1,c0_srsctl
bd0019bc:	000000c0 	ehb
bd0019c0:	41dce000 	wrpgpr	gp,gp
bd0019c4:	408b6002 	mtc0	t3,c0_srsctl
bd0019c8:	000000c0 	ehb
bd0019cc:	3c089d00 	lui	t0,0x9d00
bd0019d0:	25086280 	addiu	t0,t0,25216
bd0019d4:	0100f809 	jalr	t0
bd0019d8:	00000000 	nop

bd0019dc <_start_bss_init>:
bd0019dc:	3c08a000 	lui	t0,0xa000
bd0019e0:	2508000c 	addiu	t0,t0,12
bd0019e4:	3c09a000 	lui	t1,0xa000
bd0019e8:	2529003c 	addiu	t1,t1,60
bd0019ec:	10000003 	b	bd0019fc <_bss_check>
bd0019f0:	00000000 	nop

bd0019f4 <_bss_init>:
bd0019f4:	ad000000 	sw	zero,0(t0)
bd0019f8:	25080004 	addiu	t0,t0,4

bd0019fc <_bss_check>:
bd0019fc:	0109082b 	sltu	at,t0,t1
bd001a00:	1420fffc 	bnez	at,bd0019f4 <_bss_init>
bd001a04:	00000000 	nop
bd001a08:	3c089d00 	lui	t0,0x9d00
bd001a0c:	25085b60 	addiu	t0,t0,23392
bd001a10:	0100f809 	jalr	t0
bd001a14:	00000000 	nop
bd001a18:	3c090000 	lui	t1,0x0
bd001a1c:	25290000 	addiu	t1,t1,0
bd001a20:	11200010 	beqz	t1,bd001a64 <_ramfunc_done>
bd001a24:	00000000 	nop
bd001a28:	3c090002 	lui	t1,0x2
bd001a2c:	25290000 	addiu	t1,t1,0
bd001a30:	3c0abf88 	lui	t2,0xbf88
bd001a34:	254a2010 	addiu	t2,t2,8208
bd001a38:	ad490000 	sw	t1,0(t2)
bd001a3c:	3c090002 	lui	t1,0x2
bd001a40:	25290000 	addiu	t1,t1,0
bd001a44:	3c0abf88 	lui	t2,0xbf88
bd001a48:	254a2020 	addiu	t2,t2,8224
bd001a4c:	ad490000 	sw	t1,0(t2)
bd001a50:	3c090002 	lui	t1,0x2
bd001a54:	25290000 	addiu	t1,t1,0
bd001a58:	3c0abf88 	lui	t2,0xbf88
bd001a5c:	254a2030 	addiu	t2,t2,8240
bd001a60:	ad490000 	sw	t1,0(t2)

bd001a64 <_ramfunc_done>:
bd001a64:	40804800 	mtc0	zero,c0_count
bd001a68:	240affff 	li	t2,-1
bd001a6c:	408a5800 	mtc0	t2,c0_compare
bd001a70:	3c080040 	lui	t0,0x40
bd001a74:	400a6000 	mfc0	t2,c0_status
bd001a78:	010a5025 	or	t2,t0,t2
bd001a7c:	408a6000 	mtc0	t2,c0_status
bd001a80:	3c099d00 	lui	t1,0x9d00
bd001a84:	25290000 	addiu	t1,t1,0
bd001a88:	000000c0 	ehb
bd001a8c:	40897801 	mtc0	t1,c0_ebase
bd001a90:	3c090000 	lui	t1,0x0
bd001a94:	25290001 	addiu	t1,t1,1
bd001a98:	240a0000 	li	t2,0
bd001a9c:	7d2a4944 	ins	t2,t1,0x5,0x5
bd001aa0:	408a6001 	mtc0	t2,c0_intctl
bd001aa4:	3c090080 	lui	t1,0x80
bd001aa8:	40896800 	mtc0	t1,c0_cause
bd001aac:	40088000 	mfc0	t0,c0_config
bd001ab0:	7d090580 	ext	t1,t0,0x16,0x1
bd001ab4:	00094c40 	sll	t1,t1,0x11
bd001ab8:	40086000 	mfc0	t0,c0_status
bd001abc:	3c010058 	lui	at,0x58
bd001ac0:	01014024 	and	t0,t0,at
bd001ac4:	01284025 	or	t0,t1,t0
bd001ac8:	40886000 	mtc0	t0,c0_status
bd001acc:	000000c0 	ehb
bd001ad0:	3c089d00 	lui	t0,0x9d00
bd001ad4:	25086288 	addiu	t0,t0,25224
bd001ad8:	0100f809 	jalr	t0
bd001adc:	00000000 	nop
bd001ae0:	40086000 	mfc0	t0,c0_status
bd001ae4:	3c01ffbf 	lui	at,0xffbf
bd001ae8:	3421ffff 	ori	at,at,0xffff
bd001aec:	01014024 	and	t0,t0,at
bd001af0:	40886000 	mtc0	t0,c0_status
bd001af4:	30840000 	andi	a0,a0,0x0
bd001af8:	30a50000 	andi	a1,a1,0x0
bd001afc:	3c089d00 	lui	t0,0x9d00
bd001b00:	25085f00 	addiu	t0,t0,24320
bd001b04:	01000008 	jr	t0
bd001b08:	00000000 	nop

Disassembly of section .bev_excpt:

bd001cf0 <_bev_exception>:
bd001cf0:	3c1a9d00 	lui	k0,0x9d00
bd001cf4:	275a5fa0 	addiu	k0,k0,24480
bd001cf8:	03400008 	jr	k0
bd001cfc:	00000000 	nop

Disassembly of section .app_excpt:

9d000180 <_gen_exception>:
9d000180:	3c1a9d00 	lui	k0,0x9d00
9d000184:	275a569c 	addiu	k0,k0,22172
9d000188:	03400008 	jr	k0
9d00018c:	00000000 	nop

Disassembly of section .vector_0:

9d000200 <__vector_dispatch_0>:
9d000200:	0b40180c 	j	9d006030 <.LFE0>
9d000204:	00000000 	nop

Disassembly of section .vector_1:

9d000220 <__vector_dispatch_1>:
9d000220:	0b40180c 	j	9d006030 <.LFE0>
9d000224:	00000000 	nop

Disassembly of section .vector_2:

9d000240 <__vector_dispatch_2>:
9d000240:	0b40180c 	j	9d006030 <.LFE0>
9d000244:	00000000 	nop

Disassembly of section .vector_3:

9d000260 <__vector_dispatch_3>:
9d000260:	0b40180c 	j	9d006030 <.LFE0>
9d000264:	00000000 	nop

Disassembly of section .vector_4:

9d000280 <__vector_dispatch_4>:
9d000280:	0b401209 	j	9d004824 <Timer_ISR>
9d000284:	00000000 	nop

Disassembly of section .vector_5:

9d0002a0 <__vector_dispatch_5>:
9d0002a0:	0b40180c 	j	9d006030 <.LFE0>
9d0002a4:	00000000 	nop

Disassembly of section .vector_6:

9d0002c0 <__vector_dispatch_6>:
9d0002c0:	0b40180c 	j	9d006030 <.LFE0>
9d0002c4:	00000000 	nop

Disassembly of section .vector_7:

9d0002e0 <__vector_dispatch_7>:
9d0002e0:	0b40180c 	j	9d006030 <.LFE0>
9d0002e4:	00000000 	nop

Disassembly of section .vector_8:

9d000300 <__vector_dispatch_8>:
9d000300:	0b40102b 	j	9d0040ac <Timer2ISR>
9d000304:	00000000 	nop

Disassembly of section .vector_9:

9d000320 <__vector_dispatch_9>:
9d000320:	0b40180c 	j	9d006030 <.LFE0>
9d000324:	00000000 	nop

Disassembly of section .vector_10:

9d000340 <__vector_dispatch_10>:
9d000340:	0b40180c 	j	9d006030 <.LFE0>
9d000344:	00000000 	nop

Disassembly of section .vector_11:

9d000360 <__vector_dispatch_11>:
9d000360:	0b4013b6 	j	9d004ed8 <BUTTon_manual_ISR>
9d000364:	00000000 	nop

Disassembly of section .vector_12:

9d000380 <__vector_dispatch_12>:
9d000380:	0b40180c 	j	9d006030 <.LFE0>
9d000384:	00000000 	nop

Disassembly of section .vector_13:

9d0003a0 <__vector_dispatch_13>:
9d0003a0:	0b40180c 	j	9d006030 <.LFE0>
9d0003a4:	00000000 	nop

Disassembly of section .vector_14:

9d0003c0 <__vector_dispatch_14>:
9d0003c0:	0b40180c 	j	9d006030 <.LFE0>
9d0003c4:	00000000 	nop

Disassembly of section .vector_15:

9d0003e0 <__vector_dispatch_15>:
9d0003e0:	0b40180c 	j	9d006030 <.LFE0>
9d0003e4:	00000000 	nop

Disassembly of section .vector_16:

9d000400 <__vector_dispatch_16>:
9d000400:	0b40180c 	j	9d006030 <.LFE0>
9d000404:	00000000 	nop

Disassembly of section .vector_17:

9d000420 <__vector_dispatch_17>:
9d000420:	0b40180c 	j	9d006030 <.LFE0>
9d000424:	00000000 	nop

Disassembly of section .vector_18:

9d000440 <__vector_dispatch_18>:
9d000440:	0b40180c 	j	9d006030 <.LFE0>
9d000444:	00000000 	nop

Disassembly of section .vector_19:

9d000460 <__vector_dispatch_19>:
9d000460:	0b40180c 	j	9d006030 <.LFE0>
9d000464:	00000000 	nop

Disassembly of section .vector_20:

9d000480 <__vector_dispatch_20>:
9d000480:	0b400aa7 	j	9d002a9c <Timer5ISR>
9d000484:	00000000 	nop

Disassembly of section .vector_21:

9d0004a0 <__vector_dispatch_21>:
9d0004a0:	0b40180c 	j	9d006030 <.LFE0>
9d0004a4:	00000000 	nop

Disassembly of section .vector_22:

9d0004c0 <__vector_dispatch_22>:
9d0004c0:	0b40180c 	j	9d006030 <.LFE0>
9d0004c4:	00000000 	nop

Disassembly of section .vector_23:

9d0004e0 <__vector_dispatch_23>:
9d0004e0:	0b40180c 	j	9d006030 <.LFE0>
9d0004e4:	00000000 	nop

Disassembly of section .vector_24:

9d000500 <__vector_dispatch_24>:
9d000500:	0b4012ef 	j	9d004bbc <IntUart1Handler>
9d000504:	00000000 	nop

Disassembly of section .vector_25:

9d000520 <__vector_dispatch_25>:
9d000520:	0b40180c 	j	9d006030 <.LFE0>
9d000524:	00000000 	nop

Disassembly of section .vector_26:

9d000540 <__vector_dispatch_26>:
9d000540:	0b40180c 	j	9d006030 <.LFE0>
9d000544:	00000000 	nop

Disassembly of section .vector_27:

9d000560 <__vector_dispatch_27>:
9d000560:	0b40180c 	j	9d006030 <.LFE0>
9d000564:	00000000 	nop

Disassembly of section .vector_28:

9d000580 <__vector_dispatch_28>:
9d000580:	0b40180c 	j	9d006030 <.LFE0>
9d000584:	00000000 	nop

Disassembly of section .vector_29:

9d0005a0 <__vector_dispatch_29>:
9d0005a0:	0b40180c 	j	9d006030 <.LFE0>
9d0005a4:	00000000 	nop

Disassembly of section .vector_30:

9d0005c0 <__vector_dispatch_30>:
9d0005c0:	0b40180c 	j	9d006030 <.LFE0>
9d0005c4:	00000000 	nop

Disassembly of section .vector_31:

9d0005e0 <__vector_dispatch_31>:
9d0005e0:	0b40180c 	j	9d006030 <.LFE0>
9d0005e4:	00000000 	nop

Disassembly of section .vector_32:

9d000600 <__vector_dispatch_32>:
9d000600:	0b40180c 	j	9d006030 <.LFE0>
9d000604:	00000000 	nop

Disassembly of section .vector_33:

9d000620 <__vector_dispatch_33>:
9d000620:	0b40180c 	j	9d006030 <.LFE0>
9d000624:	00000000 	nop

Disassembly of section .vector_34:

9d000640 <__vector_dispatch_34>:
9d000640:	0b40180c 	j	9d006030 <.LFE0>
9d000644:	00000000 	nop

Disassembly of section .vector_35:

9d000660 <__vector_dispatch_35>:
9d000660:	0b40114e 	j	9d004538 <__RTCCInterrupt>
9d000664:	00000000 	nop

Disassembly of section .vector_36:

9d000680 <__vector_dispatch_36>:
9d000680:	0b40180c 	j	9d006030 <.LFE0>
9d000684:	00000000 	nop

Disassembly of section .vector_37:

9d0006a0 <__vector_dispatch_37>:
9d0006a0:	0b40180c 	j	9d006030 <.LFE0>
9d0006a4:	00000000 	nop

Disassembly of section .vector_38:

9d0006c0 <__vector_dispatch_38>:
9d0006c0:	0b40180c 	j	9d006030 <.LFE0>
9d0006c4:	00000000 	nop

Disassembly of section .vector_39:

9d0006e0 <__vector_dispatch_39>:
9d0006e0:	0b40180c 	j	9d006030 <.LFE0>
9d0006e4:	00000000 	nop

Disassembly of section .vector_40:

9d000700 <__vector_dispatch_40>:
9d000700:	0b40180c 	j	9d006030 <.LFE0>
9d000704:	00000000 	nop

Disassembly of section .vector_41:

9d000720 <__vector_dispatch_41>:
9d000720:	0b40180c 	j	9d006030 <.LFE0>
9d000724:	00000000 	nop

Disassembly of section .vector_42:

9d000740 <__vector_dispatch_42>:
9d000740:	0b40180c 	j	9d006030 <.LFE0>
9d000744:	00000000 	nop

Disassembly of section .vector_43:

9d000760 <__vector_dispatch_43>:
9d000760:	0b40180c 	j	9d006030 <.LFE0>
9d000764:	00000000 	nop

Disassembly of section .vector_44:

9d000780 <__vector_dispatch_44>:
9d000780:	0b40180c 	j	9d006030 <.LFE0>
9d000784:	00000000 	nop

Disassembly of section .vector_45:

9d0007a0 <__vector_dispatch_45>:
9d0007a0:	0b40180c 	j	9d006030 <.LFE0>
9d0007a4:	00000000 	nop

Disassembly of section .vector_46:

9d0007c0 <__vector_dispatch_46>:
9d0007c0:	0b40180c 	j	9d006030 <.LFE0>
9d0007c4:	00000000 	nop

Disassembly of section .vector_47:

9d0007e0 <__vector_dispatch_47>:
9d0007e0:	0b40180c 	j	9d006030 <.LFE0>
9d0007e4:	00000000 	nop

Disassembly of section .vector_48:

9d000800 <__vector_dispatch_48>:
9d000800:	0b40180c 	j	9d006030 <.LFE0>
9d000804:	00000000 	nop

Disassembly of section .vector_49:

9d000820 <__vector_dispatch_49>:
9d000820:	0b40180c 	j	9d006030 <.LFE0>
9d000824:	00000000 	nop

Disassembly of section .vector_50:

9d000840 <__vector_dispatch_50>:
9d000840:	0b40180c 	j	9d006030 <.LFE0>
9d000844:	00000000 	nop

Disassembly of section .vector_51:

9d000860 <__vector_dispatch_51>:
9d000860:	0b40180c 	j	9d006030 <.LFE0>
9d000864:	00000000 	nop

Disassembly of section ._debug_exception:

bfc00480 <__DbgExecReturn>:
bfc00480:	409bf800 	mtc0	k1,c0_desave
bfc00484:	000000c0 	ehb
bfc00488:	3c1b9d00 	lui	k1,0x9d00
bfc0048c:	277b6078 	addiu	k1,k1,24696
bfc00490:	13600002 	beqz	k1,bfc0049c <__DbgExecReturn+0x1c>
bfc00494:	00000000 	nop
bfc00498:	409bc000 	mtc0	k1,c0_depc
bfc0049c:	401bf800 	mfc0	k1,c0_desave
bfc004a0:	000000c0 	ehb
bfc004a4:	4200001f 	deret
bfc004a8:	00000000 	nop

Disassembly of section .text._do_print_cdnopuxX:

9d001e00 <_do_print_cdnopuxX>:
9d001e00:	27bdff68 	addiu	sp,sp,-152
9d001e04:	afbf0094 	sw	ra,148(sp)
9d001e08:	afbe0090 	sw	s8,144(sp)
9d001e0c:	afb7008c 	sw	s7,140(sp)
9d001e10:	afb60088 	sw	s6,136(sp)
9d001e14:	afb50084 	sw	s5,132(sp)
9d001e18:	afb40080 	sw	s4,128(sp)
9d001e1c:	afb3007c 	sw	s3,124(sp)
9d001e20:	afb20078 	sw	s2,120(sp)
9d001e24:	afb10074 	sw	s1,116(sp)
9d001e28:	afb00070 	sw	s0,112(sp)
9d001e2c:	afa40098 	sw	a0,152(sp)
9d001e30:	8c820018 	lw	v0,24(a0)
9d001e34:	00a09021 	move	s2,a1
9d001e38:	24050001 	li	a1,1
9d001e3c:	8c420010 	lw	v0,16(v0)
9d001e40:	0040f809 	jalr	v0
9d001e44:	afa600a0 	sw	a2,160(sp)
9d001e48:	104001bd 	beqz	v0,9d002540 <_do_print_cdnopuxX+0x740>
9d001e4c:	27a20058 	addiu	v0,sp,88
9d001e50:	afa00060 	sw	zero,96(sp)
9d001e54:	afa20058 	sw	v0,88(sp)
9d001e58:	82440000 	lb	a0,0(s2)
9d001e5c:	1080000d 	beqz	a0,9d001e94 <_do_print_cdnopuxX+0x94>
9d001e60:	26500001 	addiu	s0,s2,1
9d001e64:	24020025 	li	v0,37
9d001e68:	5082001c 	beql	a0,v0,9d001edc <_do_print_cdnopuxX+0xdc>
9d001e6c:	82420001 	lb	v0,1(s2)
9d001e70:	0f40163f 	jal	9d0058fc <fputc>
9d001e74:	8fa50098 	lw	a1,152(sp)
9d001e78:	8fa30060 	lw	v1,96(sp)
9d001e7c:	24630001 	addiu	v1,v1,1
9d001e80:	afa30060 	sw	v1,96(sp)
9d001e84:	02009021 	move	s2,s0
9d001e88:	82440000 	lb	a0,0(s2)
9d001e8c:	1480fff5 	bnez	a0,9d001e64 <_do_print_cdnopuxX+0x64>
9d001e90:	26500001 	addiu	s0,s2,1
9d001e94:	8fa40098 	lw	a0,152(sp)
9d001e98:	94820010 	lhu	v0,16(a0)
9d001e9c:	30420040 	andi	v0,v0,0x40
9d001ea0:	144001a8 	bnez	v0,9d002544 <_do_print_cdnopuxX+0x744>
9d001ea4:	2402ffff 	li	v0,-1
9d001ea8:	8fa20060 	lw	v0,96(sp)
9d001eac:	8fbf0094 	lw	ra,148(sp)
9d001eb0:	8fbe0090 	lw	s8,144(sp)
9d001eb4:	8fb7008c 	lw	s7,140(sp)
9d001eb8:	8fb60088 	lw	s6,136(sp)
9d001ebc:	8fb50084 	lw	s5,132(sp)
9d001ec0:	8fb40080 	lw	s4,128(sp)
9d001ec4:	8fb3007c 	lw	s3,124(sp)
9d001ec8:	8fb20078 	lw	s2,120(sp)
9d001ecc:	8fb10074 	lw	s1,116(sp)
9d001ed0:	8fb00070 	lw	s0,112(sp)
9d001ed4:	03e00008 	jr	ra
9d001ed8:	27bd0098 	addiu	sp,sp,152
9d001edc:	10440177 	beq	v0,a0,9d0024bc <_do_print_cdnopuxX+0x6bc>
9d001ee0:	0000b821 	move	s7,zero
9d001ee4:	2403002d 	li	v1,45
9d001ee8:	2404002b 	li	a0,43
9d001eec:	24050020 	li	a1,32
9d001ef0:	24060023 	li	a2,35
9d001ef4:	1043000e 	beq	v0,v1,9d001f30 <_do_print_cdnopuxX+0x130>
9d001ef8:	24070030 	li	a3,48
9d001efc:	50440010 	beql	v0,a0,9d001f40 <_do_print_cdnopuxX+0x140>
9d001f00:	36f70002 	ori	s7,s7,0x2
9d001f04:	50450011 	beql	v0,a1,9d001f4c <_do_print_cdnopuxX+0x14c>
9d001f08:	36f70001 	ori	s7,s7,0x1
9d001f0c:	50460012 	beql	v0,a2,9d001f58 <_do_print_cdnopuxX+0x158>
9d001f10:	36f70800 	ori	s7,s7,0x800
9d001f14:	54470013 	bnel	v0,a3,9d001f64 <_do_print_cdnopuxX+0x164>
9d001f18:	2403002a 	li	v1,42
9d001f1c:	36f70004 	ori	s7,s7,0x4
9d001f20:	26100001 	addiu	s0,s0,1
9d001f24:	82020000 	lb	v0,0(s0)
9d001f28:	1443fff4 	bne	v0,v1,9d001efc <_do_print_cdnopuxX+0xfc>
9d001f2c:	00000000 	nop
9d001f30:	36f70008 	ori	s7,s7,0x8
9d001f34:	26100001 	addiu	s0,s0,1
9d001f38:	0b4007ca 	j	9d001f28 <_do_print_cdnopuxX+0x128>
9d001f3c:	82020000 	lb	v0,0(s0)
9d001f40:	26100001 	addiu	s0,s0,1
9d001f44:	0b4007ca 	j	9d001f28 <_do_print_cdnopuxX+0x128>
9d001f48:	82020000 	lb	v0,0(s0)
9d001f4c:	26100001 	addiu	s0,s0,1
9d001f50:	0b4007ca 	j	9d001f28 <_do_print_cdnopuxX+0x128>
9d001f54:	82020000 	lb	v0,0(s0)
9d001f58:	26100001 	addiu	s0,s0,1
9d001f5c:	0b4007ca 	j	9d001f28 <_do_print_cdnopuxX+0x128>
9d001f60:	82020000 	lb	v0,0(s0)
9d001f64:	104300fe 	beq	v0,v1,9d002360 <_do_print_cdnopuxX+0x560>
9d001f68:	02002021 	move	a0,s0
9d001f6c:	2443ffd0 	addiu	v1,v0,-48
9d001f70:	2c63000a 	sltiu	v1,v1,10
9d001f74:	1060000b 	beqz	v1,9d001fa4 <_do_print_cdnopuxX+0x1a4>
9d001f78:	0000b021 	move	s6,zero
9d001f7c:	00161840 	sll	v1,s6,0x1
9d001f80:	001650c0 	sll	t2,s6,0x3
9d001f84:	006a5021 	addu	t2,v1,t2
9d001f88:	26100001 	addiu	s0,s0,1
9d001f8c:	01425021 	addu	t2,t2,v0
9d001f90:	82020000 	lb	v0,0(s0)
9d001f94:	2443ffd0 	addiu	v1,v0,-48
9d001f98:	2c63000a 	sltiu	v1,v1,10
9d001f9c:	1460fff7 	bnez	v1,9d001f7c <_do_print_cdnopuxX+0x17c>
9d001fa0:	2556ffd0 	addiu	s6,t2,-48
9d001fa4:	2403002e 	li	v1,46
9d001fa8:	104300f9 	beq	v0,v1,9d002390 <_do_print_cdnopuxX+0x590>
9d001fac:	241effff 	li	s8,-1
9d001fb0:	24030068 	li	v1,104
9d001fb4:	5043010c 	beql	v0,v1,9d0023e8 <_do_print_cdnopuxX+0x5e8>
9d001fb8:	82030001 	lb	v1,1(s0)
9d001fbc:	2403006c 	li	v1,108
9d001fc0:	1043011a 	beq	v0,v1,9d00242c <_do_print_cdnopuxX+0x62c>
9d001fc4:	24030071 	li	v1,113
9d001fc8:	10430144 	beq	v0,v1,9d0024dc <_do_print_cdnopuxX+0x6dc>
9d001fcc:	32e40002 	andi	a0,s7,0x2
9d001fd0:	32e3fffe 	andi	v1,s7,0xfffe
9d001fd4:	0064b80b 	movn	s7,v1,a0
9d001fd8:	2442ffbc 	addiu	v0,v0,-68
9d001fdc:	32e50008 	andi	a1,s7,0x8
9d001fe0:	32e4fffb 	andi	a0,s7,0xfffb
9d001fe4:	2c430035 	sltiu	v1,v0,53
9d001fe8:	26120001 	addiu	s2,s0,1
9d001fec:	1060010d 	beqz	v1,9d002424 <_do_print_cdnopuxX+0x624>
9d001ff0:	0085b80b 	movn	s7,a0,a1
9d001ff4:	00021080 	sll	v0,v0,0x2
9d001ff8:	3c049d00 	lui	a0,0x9d00
9d001ffc:	24842010 	addiu	a0,a0,8208
9d002000:	00821021 	addu	v0,a0,v0
9d002004:	8c420000 	lw	v0,0(v0)
9d002008:	00400008 	jr	v0
9d00200c:	00000000 	nop
9d002010:	9d0022d8 	0x9d0022d8
9d002014:	9d002424 	0x9d002424
9d002018:	9d002424 	0x9d002424
9d00201c:	9d002424 	0x9d002424
9d002020:	9d002424 	0x9d002424
9d002024:	9d002424 	0x9d002424
9d002028:	9d002424 	0x9d002424
9d00202c:	9d002424 	0x9d002424
9d002030:	9d002424 	0x9d002424
9d002034:	9d002424 	0x9d002424
9d002038:	9d002424 	0x9d002424
9d00203c:	9d00269c 	0x9d00269c
9d002040:	9d00227c 	0x9d00227c
9d002044:	9d002424 	0x9d002424
9d002048:	9d002424 	0x9d002424
9d00204c:	9d002424 	0x9d002424
9d002050:	9d002424 	0x9d002424
9d002054:	9d0020e4 	0x9d0020e4
9d002058:	9d002424 	0x9d002424
9d00205c:	9d002424 	0x9d002424
9d002060:	9d0022ec 	0x9d0022ec
9d002064:	9d002424 	0x9d002424
9d002068:	9d002424 	0x9d002424
9d00206c:	9d002424 	0x9d002424
9d002070:	9d002424 	0x9d002424
9d002074:	9d002424 	0x9d002424
9d002078:	9d002424 	0x9d002424
9d00207c:	9d002424 	0x9d002424
9d002080:	9d002424 	0x9d002424
9d002084:	9d002424 	0x9d002424
9d002088:	9d002424 	0x9d002424
9d00208c:	9d002668 	0x9d002668
9d002090:	9d0022dc 	0x9d0022dc
9d002094:	9d002424 	0x9d002424
9d002098:	9d002424 	0x9d002424
9d00209c:	9d002424 	0x9d002424
9d0020a0:	9d002424 	0x9d002424
9d0020a4:	9d0022dc 	0x9d0022dc
9d0020a8:	9d002424 	0x9d002424
9d0020ac:	9d002424 	0x9d002424
9d0020b0:	9d002424 	0x9d002424
9d0020b4:	9d002424 	0x9d002424
9d0020b8:	9d0025ac 	0x9d0025ac
9d0020bc:	9d0025a4 	0x9d0025a4
9d0020c0:	9d002280 	0x9d002280
9d0020c4:	9d002424 	0x9d002424
9d0020c8:	9d002424 	0x9d002424
9d0020cc:	9d0025f4 	0x9d0025f4
9d0020d0:	9d002424 	0x9d002424
9d0020d4:	9d0020e8 	0x9d0020e8
9d0020d8:	9d002424 	0x9d002424
9d0020dc:	9d002424 	0x9d002424
9d0020e0:	9d0022f0 	0x9d0022f0
9d0020e4:	36f70010 	ori	s7,s7,0x10
9d0020e8:	32f7f7ff 	andi	s7,s7,0xf7ff
9d0020ec:	2410000a 	li	s0,10
9d0020f0:	2402ffff 	li	v0,-1
9d0020f4:	13c20067 	beq	s8,v0,9d002294 <_do_print_cdnopuxX+0x494>
9d0020f8:	00002821 	move	a1,zero
9d0020fc:	32f7fffb 	andi	s7,s7,0xfffb
9d002100:	27c5ffff 	addiu	a1,s8,-1
9d002104:	32e200c0 	andi	v0,s7,0xc0
9d002108:	10400066 	beqz	v0,9d0022a4 <_do_print_cdnopuxX+0x4a4>
9d00210c:	afa20064 	sw	v0,100(sp)
9d002110:	7c171620 	seh	v0,s7
9d002114:	04400182 	bltz	v0,9d002720 <_do_print_cdnopuxX+0x920>
9d002118:	32e20010 	andi	v0,s7,0x10
9d00211c:	104000f3 	beqz	v0,9d0024ec <_do_print_cdnopuxX+0x6ec>
9d002120:	32e20041 	andi	v0,s7,0x41
9d002124:	8fa400a0 	lw	a0,160(sp)
9d002128:	8c950000 	lw	s5,0(a0)
9d00212c:	24840004 	addiu	a0,a0,4
9d002130:	afa400a0 	sw	a0,160(sp)
9d002134:	0015a7c3 	sra	s4,s5,0x1f
9d002138:	02801021 	move	v0,s4
9d00213c:	0440010d 	bltz	v0,9d002574 <_do_print_cdnopuxX+0x774>
9d002140:	02a01821 	move	v1,s5
9d002144:	afa0006c 	sw	zero,108(sp)
9d002148:	128000bf 	beqz	s4,9d002448 <_do_print_cdnopuxX+0x648>
9d00214c:	02b41025 	or	v0,s5,s4
9d002150:	10400195 	beqz	v0,9d0027a8 <_do_print_cdnopuxX+0x9a8>
9d002154:	27a20057 	addiu	v0,sp,87
9d002158:	afa20068 	sw	v0,104(sp)
9d00215c:	32e30020 	andi	v1,s7,0x20
9d002160:	24040037 	li	a0,55
9d002164:	00108fc3 	sra	s1,s0,0x1f
9d002168:	00409821 	move	s3,v0
9d00216c:	24020057 	li	v0,87
9d002170:	0043200a 	movz	a0,v0,v1
9d002174:	afa4005c 	sw	a0,92(sp)
9d002178:	02a02021 	move	a0,s5
9d00217c:	02802821 	move	a1,s4
9d002180:	02003021 	move	a2,s0
9d002184:	0f400b3d 	jal	9d002cf4 <__umoddi3>
9d002188:	02203821 	move	a3,s1
9d00218c:	2843000a 	slti	v1,v0,10
9d002190:	24460030 	addiu	a2,v0,48
9d002194:	8fa4005c 	lw	a0,92(sp)
9d002198:	00441021 	addu	v0,v0,a0
9d00219c:	0043300a 	movz	a2,v0,v1
9d0021a0:	2673ffff 	addiu	s3,s3,-1
9d0021a4:	02a02021 	move	a0,s5
9d0021a8:	02802821 	move	a1,s4
9d0021ac:	a2660001 	sb	a2,1(s3)
9d0021b0:	02003021 	move	a2,s0
9d0021b4:	0f400c56 	jal	9d003158 <.LFE1>
9d0021b8:	02203821 	move	a3,s1
9d0021bc:	00622025 	or	a0,v1,v0
9d0021c0:	0040a821 	move	s5,v0
9d0021c4:	0060a021 	move	s4,v1
9d0021c8:	1480ffeb 	bnez	a0,9d002178 <_do_print_cdnopuxX+0x378>
9d0021cc:	27deffff 	addiu	s8,s8,-1
9d0021d0:	27c5ffff 	addiu	a1,s8,-1
9d0021d4:	04a0000a 	bltz	a1,9d002200 <_do_print_cdnopuxX+0x400>
9d0021d8:	02601021 	move	v0,s3
9d0021dc:	2664ffff 	addiu	a0,s3,-1
9d0021e0:	00852023 	subu	a0,a0,a1
9d0021e4:	24030030 	li	v1,48
9d0021e8:	a0430000 	sb	v1,0(v0)
9d0021ec:	2442ffff 	addiu	v0,v0,-1
9d0021f0:	5444fffe 	bnel	v0,a0,9d0021ec <_do_print_cdnopuxX+0x3ec>
9d0021f4:	a0430000 	sb	v1,0(v0)
9d0021f8:	00052827 	nor	a1,zero,a1
9d0021fc:	02659821 	addu	s3,s3,a1
9d002200:	32e20004 	andi	v0,s7,0x4
9d002204:	1440003c 	bnez	v0,9d0022f8 <_do_print_cdnopuxX+0x4f8>
9d002208:	32e40800 	andi	a0,s7,0x800
9d00220c:	3084ffff 	andi	a0,a0,0xffff
9d002210:	50800007 	beqzl	a0,9d002230 <_do_print_cdnopuxX+0x430>
9d002214:	8fa30064 	lw	v1,100(sp)
9d002218:	24020008 	li	v0,8
9d00221c:	12020131 	beq	s0,v0,9d0026e4 <_do_print_cdnopuxX+0x8e4>
9d002220:	24020010 	li	v0,16
9d002224:	12020158 	beq	s0,v0,9d002788 <_do_print_cdnopuxX+0x988>
9d002228:	32e40020 	andi	a0,s7,0x20
9d00222c:	8fa30064 	lw	v1,100(sp)
9d002230:	10600007 	beqz	v1,9d002250 <_do_print_cdnopuxX+0x450>
9d002234:	8fa4006c 	lw	a0,108(sp)
9d002238:	1480009c 	bnez	a0,9d0024ac <_do_print_cdnopuxX+0x6ac>
9d00223c:	32e20002 	andi	v0,s7,0x2
9d002240:	10400003 	beqz	v0,9d002250 <_do_print_cdnopuxX+0x450>
9d002244:	2402002b 	li	v0,43
9d002248:	a2620000 	sb	v0,0(s3)
9d00224c:	2673ffff 	addiu	s3,s3,-1
9d002250:	26650001 	addiu	a1,s3,1
9d002254:	afb70010 	sw	s7,16(sp)
9d002258:	8fa40098 	lw	a0,152(sp)
9d00225c:	8fa20058 	lw	v0,88(sp)
9d002260:	00453023 	subu	a2,v0,a1
9d002264:	0f40145f 	jal	9d00517c <.LFE9>
9d002268:	02c03821 	move	a3,s6
9d00226c:	8fa30060 	lw	v1,96(sp)
9d002270:	00621821 	addu	v1,v1,v0
9d002274:	0b400796 	j	9d001e58 <_do_print_cdnopuxX+0x58>
9d002278:	afa30060 	sw	v1,96(sp)
9d00227c:	36f70020 	ori	s7,s7,0x20
9d002280:	36f70810 	ori	s7,s7,0x810
9d002284:	2402ffff 	li	v0,-1
9d002288:	17c2ff9c 	bne	s8,v0,9d0020fc <_do_print_cdnopuxX+0x2fc>
9d00228c:	24100010 	li	s0,16
9d002290:	00002821 	move	a1,zero
9d002294:	241e0001 	li	s8,1
9d002298:	32e200c0 	andi	v0,s7,0xc0
9d00229c:	1440ff9c 	bnez	v0,9d002110 <_do_print_cdnopuxX+0x310>
9d0022a0:	afa20064 	sw	v0,100(sp)
9d0022a4:	7c171620 	seh	v0,s7
9d0022a8:	04400115 	bltz	v0,9d002700 <_do_print_cdnopuxX+0x900>
9d0022ac:	8fa400a0 	lw	a0,160(sp)
9d0022b0:	32e20010 	andi	v0,s7,0x10
9d0022b4:	50400099 	beqzl	v0,9d00251c <_do_print_cdnopuxX+0x71c>
9d0022b8:	32e20041 	andi	v0,s7,0x41
9d0022bc:	8fa400a0 	lw	a0,160(sp)
9d0022c0:	8c950000 	lw	s5,0(a0)
9d0022c4:	0000a021 	move	s4,zero
9d0022c8:	24840004 	addiu	a0,a0,4
9d0022cc:	afa400a0 	sw	a0,160(sp)
9d0022d0:	0b400852 	j	9d002148 <_do_print_cdnopuxX+0x348>
9d0022d4:	afa0006c 	sw	zero,108(sp)
9d0022d8:	36f70010 	ori	s7,s7,0x10
9d0022dc:	32e8f7ff 	andi	t0,s7,0xf7ff
9d0022e0:	351700c0 	ori	s7,t0,0xc0
9d0022e4:	0b40083c 	j	9d0020f0 <_do_print_cdnopuxX+0x2f0>
9d0022e8:	2410000a 	li	s0,10
9d0022ec:	36f70020 	ori	s7,s7,0x20
9d0022f0:	0b40083c 	j	9d0020f0 <_do_print_cdnopuxX+0x2f0>
9d0022f4:	24100010 	li	s0,16
9d0022f8:	8fa20068 	lw	v0,104(sp)
9d0022fc:	02621823 	subu	v1,s3,v0
9d002300:	3084ffff 	andi	a0,a0,0xffff
9d002304:	10800006 	beqz	a0,9d002320 <_do_print_cdnopuxX+0x520>
9d002308:	02c31821 	addu	v1,s6,v1
9d00230c:	24020008 	li	v0,8
9d002310:	1202012d 	beq	s0,v0,9d0027c8 <_do_print_cdnopuxX+0x9c8>
9d002314:	2462fffe 	addiu	v0,v1,-2
9d002318:	3a050010 	xori	a1,s0,0x10
9d00231c:	0045180a 	movz	v1,v0,a1
9d002320:	8fa20064 	lw	v0,100(sp)
9d002324:	10400004 	beqz	v0,9d002338 <_do_print_cdnopuxX+0x538>
9d002328:	8fa2006c 	lw	v0,108(sp)
9d00232c:	10400099 	beqz	v0,9d002594 <_do_print_cdnopuxX+0x794>
9d002330:	32e20003 	andi	v0,s7,0x3
9d002334:	2463ffff 	addiu	v1,v1,-1
9d002338:	1860ffb5 	blez	v1,9d002210 <_do_print_cdnopuxX+0x410>
9d00233c:	02601021 	move	v0,s3
9d002340:	02634823 	subu	t1,s3,v1
9d002344:	24030030 	li	v1,48
9d002348:	a0430000 	sb	v1,0(v0)
9d00234c:	2442ffff 	addiu	v0,v0,-1
9d002350:	5522fffe 	bnel	t1,v0,9d00234c <_do_print_cdnopuxX+0x54c>
9d002354:	a0430000 	sb	v1,0(v0)
9d002358:	0b400884 	j	9d002210 <_do_print_cdnopuxX+0x410>
9d00235c:	01209821 	move	s3,t1
9d002360:	8fa200a0 	lw	v0,160(sp)
9d002364:	8c560000 	lw	s6,0(v0)
9d002368:	24550004 	addiu	s5,v0,4
9d00236c:	26100001 	addiu	s0,s0,1
9d002370:	06c10003 	bgez	s6,9d002380 <_do_print_cdnopuxX+0x580>
9d002374:	80820001 	lb	v0,1(a0)
9d002378:	36f70008 	ori	s7,s7,0x8
9d00237c:	0016b023 	negu	s6,s6
9d002380:	afb500a0 	sw	s5,160(sp)
9d002384:	2403002e 	li	v1,46
9d002388:	1443ff09 	bne	v0,v1,9d001fb0 <_do_print_cdnopuxX+0x1b0>
9d00238c:	241effff 	li	s8,-1
9d002390:	82020001 	lb	v0,1(s0)
9d002394:	2403002a 	li	v1,42
9d002398:	104300ed 	beq	v0,v1,9d002750 <_do_print_cdnopuxX+0x950>
9d00239c:	2443ffd0 	addiu	v1,v0,-48
9d0023a0:	2c63000a 	sltiu	v1,v1,10
9d0023a4:	26100001 	addiu	s0,s0,1
9d0023a8:	1060ff01 	beqz	v1,9d001fb0 <_do_print_cdnopuxX+0x1b0>
9d0023ac:	0000f021 	move	s8,zero
9d0023b0:	001e1840 	sll	v1,s8,0x1
9d0023b4:	001e58c0 	sll	t3,s8,0x3
9d0023b8:	006b5821 	addu	t3,v1,t3
9d0023bc:	26100001 	addiu	s0,s0,1
9d0023c0:	01625821 	addu	t3,t3,v0
9d0023c4:	82020000 	lb	v0,0(s0)
9d0023c8:	2443ffd0 	addiu	v1,v0,-48
9d0023cc:	2c63000a 	sltiu	v1,v1,10
9d0023d0:	1460fff7 	bnez	v1,9d0023b0 <_do_print_cdnopuxX+0x5b0>
9d0023d4:	257effd0 	addiu	s8,t3,-48
9d0023d8:	24030068 	li	v1,104
9d0023dc:	1443fef8 	bne	v0,v1,9d001fc0 <_do_print_cdnopuxX+0x1c0>
9d0023e0:	2403006c 	li	v1,108
9d0023e4:	82030001 	lb	v1,1(s0)
9d0023e8:	506200e3 	beql	v1,v0,9d002778 <_do_print_cdnopuxX+0x978>
9d0023ec:	82020002 	lb	v0,2(s0)
9d0023f0:	36f70040 	ori	s7,s7,0x40
9d0023f4:	00601021 	move	v0,v1
9d0023f8:	26100001 	addiu	s0,s0,1
9d0023fc:	32e40002 	andi	a0,s7,0x2
9d002400:	32e3fffe 	andi	v1,s7,0xfffe
9d002404:	0064b80b 	movn	s7,v1,a0
9d002408:	2442ffbc 	addiu	v0,v0,-68
9d00240c:	32e50008 	andi	a1,s7,0x8
9d002410:	32e4fffb 	andi	a0,s7,0xfffb
9d002414:	2c430035 	sltiu	v1,v0,53
9d002418:	26120001 	addiu	s2,s0,1
9d00241c:	1460fef5 	bnez	v1,9d001ff4 <_do_print_cdnopuxX+0x1f4>
9d002420:	0085b80b 	movn	s7,a0,a1
9d002424:	0b40089b 	j	9d00226c <_do_print_cdnopuxX+0x46c>
9d002428:	00001021 	move	v0,zero
9d00242c:	82030001 	lb	v1,1(s0)
9d002430:	506200e1 	beql	v1,v0,9d0027b8 <_do_print_cdnopuxX+0x9b8>
9d002434:	82020002 	lb	v0,2(s0)
9d002438:	36f70010 	ori	s7,s7,0x10
9d00243c:	00601021 	move	v0,v1
9d002440:	0b4008ff 	j	9d0023fc <_do_print_cdnopuxX+0x5fc>
9d002444:	26100001 	addiu	s0,s0,1
9d002448:	12a000d7 	beqz	s5,9d0027a8 <_do_print_cdnopuxX+0x9a8>
9d00244c:	02a06821 	move	t5,s5
9d002450:	27a30057 	addiu	v1,sp,87
9d002454:	afa30068 	sw	v1,104(sp)
9d002458:	32e30020 	andi	v1,s7,0x20
9d00245c:	24050037 	li	a1,55
9d002460:	8fb30068 	lw	s3,104(sp)
9d002464:	24020057 	li	v0,87
9d002468:	0043280a 	movz	a1,v0,v1
9d00246c:	01b0001b 	divu	zero,t5,s0
9d002470:	020001f4 	teq	s0,zero,0x7
9d002474:	00001810 	mfhi	v1
9d002478:	2673ffff 	addiu	s3,s3,-1
9d00247c:	27deffff 	addiu	s8,s8,-1
9d002480:	01b0001b 	divu	zero,t5,s0
9d002484:	020001f4 	teq	s0,zero,0x7
9d002488:	00006812 	mflo	t5
9d00248c:	2864000a 	slti	a0,v1,10
9d002490:	24620030 	addiu	v0,v1,48
9d002494:	00651821 	addu	v1,v1,a1
9d002498:	0064100a 	movz	v0,v1,a0
9d00249c:	15a0fff3 	bnez	t5,9d00246c <_do_print_cdnopuxX+0x66c>
9d0024a0:	a2620001 	sb	v0,1(s3)
9d0024a4:	0b400875 	j	9d0021d4 <_do_print_cdnopuxX+0x3d4>
9d0024a8:	27c5ffff 	addiu	a1,s8,-1
9d0024ac:	2402002d 	li	v0,45
9d0024b0:	a2620000 	sb	v0,0(s3)
9d0024b4:	0b400894 	j	9d002250 <_do_print_cdnopuxX+0x450>
9d0024b8:	2673ffff 	addiu	s3,s3,-1
9d0024bc:	24040025 	li	a0,37
9d0024c0:	0f40163f 	jal	9d0058fc <fputc>
9d0024c4:	8fa50098 	lw	a1,152(sp)
9d0024c8:	26520002 	addiu	s2,s2,2
9d0024cc:	8fa40060 	lw	a0,96(sp)
9d0024d0:	24840001 	addiu	a0,a0,1
9d0024d4:	0b400796 	j	9d001e58 <_do_print_cdnopuxX+0x58>
9d0024d8:	afa40060 	sw	a0,96(sp)
9d0024dc:	82020001 	lb	v0,1(s0)
9d0024e0:	36f78000 	ori	s7,s7,0x8000
9d0024e4:	0b4008ff 	j	9d0023fc <_do_print_cdnopuxX+0x5fc>
9d0024e8:	26100001 	addiu	s0,s0,1
9d0024ec:	50400074 	beqzl	v0,9d0026c0 <_do_print_cdnopuxX+0x8c0>
9d0024f0:	8fa300a0 	lw	v1,160(sp)
9d0024f4:	8fa200a0 	lw	v0,160(sp)
9d0024f8:	8c550000 	lw	s5,0(v0)
9d0024fc:	24420004 	addiu	v0,v0,4
9d002500:	afa200a0 	sw	v0,160(sp)
9d002504:	0015a7c3 	sra	s4,s5,0x1f
9d002508:	02801021 	move	v0,s4
9d00250c:	0441ff0d 	bgez	v0,9d002144 <_do_print_cdnopuxX+0x344>
9d002510:	02a01821 	move	v1,s5
9d002514:	0b40095e 	j	9d002578 <_do_print_cdnopuxX+0x778>
9d002518:	00036823 	negu	t5,v1
9d00251c:	50400062 	beqzl	v0,9d0026a8 <_do_print_cdnopuxX+0x8a8>
9d002520:	8fa300a0 	lw	v1,160(sp)
9d002524:	8fa200a0 	lw	v0,160(sp)
9d002528:	8c550000 	lw	s5,0(v0)
9d00252c:	0000a021 	move	s4,zero
9d002530:	24420004 	addiu	v0,v0,4
9d002534:	afa200a0 	sw	v0,160(sp)
9d002538:	0b400852 	j	9d002148 <_do_print_cdnopuxX+0x348>
9d00253c:	afa0006c 	sw	zero,108(sp)
9d002540:	2402ffff 	li	v0,-1
9d002544:	8fbf0094 	lw	ra,148(sp)
9d002548:	8fbe0090 	lw	s8,144(sp)
9d00254c:	8fb7008c 	lw	s7,140(sp)
9d002550:	8fb60088 	lw	s6,136(sp)
9d002554:	8fb50084 	lw	s5,132(sp)
9d002558:	8fb40080 	lw	s4,128(sp)
9d00255c:	8fb3007c 	lw	s3,124(sp)
9d002560:	8fb20078 	lw	s2,120(sp)
9d002564:	8fb10074 	lw	s1,116(sp)
9d002568:	8fb00070 	lw	s0,112(sp)
9d00256c:	03e00008 	jr	ra
9d002570:	27bd0098 	addiu	sp,sp,152
9d002574:	00036823 	negu	t5,v1
9d002578:	000d182b 	sltu	v1,zero,t5
9d00257c:	00021023 	negu	v0,v0
9d002580:	01a0a821 	move	s5,t5
9d002584:	0043a023 	subu	s4,v0,v1
9d002588:	24040001 	li	a0,1
9d00258c:	0b400852 	j	9d002148 <_do_print_cdnopuxX+0x348>
9d002590:	afa4006c 	sw	a0,108(sp)
9d002594:	5440ff68 	bnezl	v0,9d002338 <_do_print_cdnopuxX+0x538>
9d002598:	2463ffff 	addiu	v1,v1,-1
9d00259c:	0b4008ce 	j	9d002338 <_do_print_cdnopuxX+0x538>
9d0025a0:	00000000 	nop
9d0025a4:	0b40083c 	j	9d0020f0 <_do_print_cdnopuxX+0x2f0>
9d0025a8:	24100008 	li	s0,8
9d0025ac:	7c171620 	seh	v0,s7
9d0025b0:	04400096 	bltz	v0,9d00280c <_do_print_cdnopuxX+0xa0c>
9d0025b4:	8fa400a0 	lw	a0,160(sp)
9d0025b8:	32e20010 	andi	v0,s7,0x10
9d0025bc:	14400087 	bnez	v0,9d0027dc <_do_print_cdnopuxX+0x9dc>
9d0025c0:	8fa200a0 	lw	v0,160(sp)
9d0025c4:	32e20040 	andi	v0,s7,0x40
9d0025c8:	1040009b 	beqz	v0,9d002838 <_do_print_cdnopuxX+0xa38>
9d0025cc:	32e80001 	andi	t0,s7,0x1
9d0025d0:	8fa200a0 	lw	v0,160(sp)
9d0025d4:	8c430000 	lw	v1,0(v0)
9d0025d8:	00001021 	move	v0,zero
9d0025dc:	8fa400a0 	lw	a0,160(sp)
9d0025e0:	24840004 	addiu	a0,a0,4
9d0025e4:	afa400a0 	sw	a0,160(sp)
9d0025e8:	8fa40060 	lw	a0,96(sp)
9d0025ec:	0b40089b 	j	9d00226c <_do_print_cdnopuxX+0x46c>
9d0025f0:	a4640000 	sh	a0,0(v1)
9d0025f4:	8fa400a0 	lw	a0,160(sp)
9d0025f8:	8c900000 	lw	s0,0(a0)
9d0025fc:	3c039d00 	lui	v1,0x9d00
9d002600:	24626164 	addiu	v0,v1,24932
9d002604:	0050800a 	movz	s0,v0,s0
9d002608:	2402ffff 	li	v0,-1
9d00260c:	13c2007b 	beq	s8,v0,9d0027fc <_do_print_cdnopuxX+0x9fc>
9d002610:	24950004 	addiu	s5,a0,4
9d002614:	1bc00094 	blez	s8,9d002868 <_do_print_cdnopuxX+0xa68>
9d002618:	021e5821 	addu	t3,s0,s8
9d00261c:	82030000 	lb	v1,0(s0)
9d002620:	14600005 	bnez	v1,9d002638 <_do_print_cdnopuxX+0x838>
9d002624:	02001021 	move	v0,s0
9d002628:	0b400992 	j	9d002648 <_do_print_cdnopuxX+0x848>
9d00262c:	00001021 	move	v0,zero
9d002630:	50600005 	beqzl	v1,9d002648 <_do_print_cdnopuxX+0x848>
9d002634:	00501023 	subu	v0,v0,s0
9d002638:	24420001 	addiu	v0,v0,1
9d00263c:	544bfffc 	bnel	v0,t3,9d002630 <_do_print_cdnopuxX+0x830>
9d002640:	80430000 	lb	v1,0(v0)
9d002644:	00501023 	subu	v0,v0,s0
9d002648:	afb70010 	sw	s7,16(sp)
9d00264c:	8fa40098 	lw	a0,152(sp)
9d002650:	02002821 	move	a1,s0
9d002654:	00403021 	move	a2,v0
9d002658:	0f40145f 	jal	9d00517c <.LFE9>
9d00265c:	02c03821 	move	a3,s6
9d002660:	0b40089b 	j	9d00226c <_do_print_cdnopuxX+0x46c>
9d002664:	afb500a0 	sw	s5,160(sp)
9d002668:	8fa300a0 	lw	v1,160(sp)
9d00266c:	8c620000 	lw	v0,0(v1)
9d002670:	24750004 	addiu	s5,v1,4
9d002674:	afb70010 	sw	s7,16(sp)
9d002678:	8fa40098 	lw	a0,152(sp)
9d00267c:	27a50018 	addiu	a1,sp,24
9d002680:	24060001 	li	a2,1
9d002684:	02c03821 	move	a3,s6
9d002688:	a3a20018 	sb	v0,24(sp)
9d00268c:	0f40145f 	jal	9d00517c <.LFE9>
9d002690:	afb500a0 	sw	s5,160(sp)
9d002694:	0b40089c 	j	9d002270 <_do_print_cdnopuxX+0x470>
9d002698:	8fa30060 	lw	v1,96(sp)
9d00269c:	36f70010 	ori	s7,s7,0x10
9d0026a0:	0b40083c 	j	9d0020f0 <_do_print_cdnopuxX+0x2f0>
9d0026a4:	24100008 	li	s0,8
9d0026a8:	8c750000 	lw	s5,0(v1)
9d0026ac:	0000a021 	move	s4,zero
9d0026b0:	24630004 	addiu	v1,v1,4
9d0026b4:	afa300a0 	sw	v1,160(sp)
9d0026b8:	0b400852 	j	9d002148 <_do_print_cdnopuxX+0x348>
9d0026bc:	afa0006c 	sw	zero,108(sp)
9d0026c0:	8c750000 	lw	s5,0(v1)
9d0026c4:	24630004 	addiu	v1,v1,4
9d0026c8:	afa300a0 	sw	v1,160(sp)
9d0026cc:	0015a7c3 	sra	s4,s5,0x1f
9d0026d0:	02801021 	move	v0,s4
9d0026d4:	0441fe9b 	bgez	v0,9d002144 <_do_print_cdnopuxX+0x344>
9d0026d8:	02a01821 	move	v1,s5
9d0026dc:	0b40095e 	j	9d002578 <_do_print_cdnopuxX+0x778>
9d0026e0:	00036823 	negu	t5,v1
9d0026e4:	82630001 	lb	v1,1(s3)
9d0026e8:	24020030 	li	v0,48
9d0026ec:	1062fed0 	beq	v1,v0,9d002230 <_do_print_cdnopuxX+0x430>
9d0026f0:	8fa30064 	lw	v1,100(sp)
9d0026f4:	a2620000 	sb	v0,0(s3)
9d0026f8:	0b40088b 	j	9d00222c <_do_print_cdnopuxX+0x42c>
9d0026fc:	2673ffff 	addiu	s3,s3,-1
9d002700:	24820007 	addiu	v0,a0,7
9d002704:	7c021004 	ins	v0,zero,0x0,0x3
9d002708:	24430008 	addiu	v1,v0,8
9d00270c:	afa300a0 	sw	v1,160(sp)
9d002710:	8c550000 	lw	s5,0(v0)
9d002714:	8c540004 	lw	s4,4(v0)
9d002718:	0b400852 	j	9d002148 <_do_print_cdnopuxX+0x348>
9d00271c:	afa0006c 	sw	zero,108(sp)
9d002720:	8fa300a0 	lw	v1,160(sp)
9d002724:	24750007 	addiu	s5,v1,7
9d002728:	7c151004 	ins	s5,zero,0x0,0x3
9d00272c:	8ea30000 	lw	v1,0(s5)
9d002730:	8ea20004 	lw	v0,4(s5)
9d002734:	26b50008 	addiu	s5,s5,8
9d002738:	afb500a0 	sw	s5,160(sp)
9d00273c:	0060a821 	move	s5,v1
9d002740:	0441fe80 	bgez	v0,9d002144 <_do_print_cdnopuxX+0x344>
9d002744:	0040a021 	move	s4,v0
9d002748:	0b40095e 	j	9d002578 <_do_print_cdnopuxX+0x778>
9d00274c:	00036823 	negu	t5,v1
9d002750:	8fa300a0 	lw	v1,160(sp)
9d002754:	8c7e0000 	lw	s8,0(v1)
9d002758:	24750004 	addiu	s5,v1,4
9d00275c:	26030002 	addiu	v1,s0,2
9d002760:	82020002 	lb	v0,2(s0)
9d002764:	afb500a0 	sw	s5,160(sp)
9d002768:	07c1fe11 	bgez	s8,9d001fb0 <_do_print_cdnopuxX+0x1b0>
9d00276c:	00608021 	move	s0,v1
9d002770:	0b4007ec 	j	9d001fb0 <_do_print_cdnopuxX+0x1b0>
9d002774:	241effff 	li	s8,-1
9d002778:	36f70001 	ori	s7,s7,0x1
9d00277c:	26100001 	addiu	s0,s0,1
9d002780:	0b4008ff 	j	9d0023fc <_do_print_cdnopuxX+0x5fc>
9d002784:	26100001 	addiu	s0,s0,1
9d002788:	24020058 	li	v0,88
9d00278c:	24030078 	li	v1,120
9d002790:	0064100a 	movz	v0,v1,a0
9d002794:	a2620000 	sb	v0,0(s3)
9d002798:	24020030 	li	v0,48
9d00279c:	a262ffff 	sb	v0,-1(s3)
9d0027a0:	0b40088b 	j	9d00222c <_do_print_cdnopuxX+0x42c>
9d0027a4:	2673fffe 	addiu	s3,s3,-2
9d0027a8:	27a20057 	addiu	v0,sp,87
9d0027ac:	afa20068 	sw	v0,104(sp)
9d0027b0:	0b400875 	j	9d0021d4 <_do_print_cdnopuxX+0x3d4>
9d0027b4:	00409821 	move	s3,v0
9d0027b8:	36f78000 	ori	s7,s7,0x8000
9d0027bc:	26100001 	addiu	s0,s0,1
9d0027c0:	0b4008ff 	j	9d0023fc <_do_print_cdnopuxX+0x5fc>
9d0027c4:	26100001 	addiu	s0,s0,1
9d0027c8:	82620001 	lb	v0,1(s3)
9d0027cc:	38420030 	xori	v0,v0,0x30
9d0027d0:	0002102b 	sltu	v0,zero,v0
9d0027d4:	0b4008c8 	j	9d002320 <_do_print_cdnopuxX+0x520>
9d0027d8:	00621823 	subu	v1,v1,v0
9d0027dc:	8c430000 	lw	v1,0(v0)
9d0027e0:	00001021 	move	v0,zero
9d0027e4:	8fa400a0 	lw	a0,160(sp)
9d0027e8:	24840004 	addiu	a0,a0,4
9d0027ec:	afa400a0 	sw	a0,160(sp)
9d0027f0:	8fa40060 	lw	a0,96(sp)
9d0027f4:	0b40089b 	j	9d00226c <_do_print_cdnopuxX+0x46c>
9d0027f8:	ac640000 	sw	a0,0(v1)
9d0027fc:	0f40168f 	jal	9d005a3c <strlen>
9d002800:	02002021 	move	a0,s0
9d002804:	0b400993 	j	9d00264c <_do_print_cdnopuxX+0x84c>
9d002808:	afb70010 	sw	s7,16(sp)
9d00280c:	8c820000 	lw	v0,0(a0)
9d002810:	8fa40060 	lw	a0,96(sp)
9d002814:	00041fc3 	sra	v1,a0,0x1f
9d002818:	8fa400a0 	lw	a0,160(sp)
9d00281c:	24840004 	addiu	a0,a0,4
9d002820:	afa400a0 	sw	a0,160(sp)
9d002824:	8fa40060 	lw	a0,96(sp)
9d002828:	ac440000 	sw	a0,0(v0)
9d00282c:	ac430004 	sw	v1,4(v0)
9d002830:	0b40089b 	j	9d00226c <_do_print_cdnopuxX+0x46c>
9d002834:	00001021 	move	v0,zero
9d002838:	8fa200a0 	lw	v0,160(sp)
9d00283c:	8c430000 	lw	v1,0(v0)
9d002840:	00001021 	move	v0,zero
9d002844:	8fa400a0 	lw	a0,160(sp)
9d002848:	24840004 	addiu	a0,a0,4
9d00284c:	afa400a0 	sw	a0,160(sp)
9d002850:	11000003 	beqz	t0,9d002860 <_do_print_cdnopuxX+0xa60>
9d002854:	8fa40060 	lw	a0,96(sp)
9d002858:	0b40089b 	j	9d00226c <_do_print_cdnopuxX+0x46c>
9d00285c:	a0640000 	sb	a0,0(v1)
9d002860:	0b40089b 	j	9d00226c <_do_print_cdnopuxX+0x46c>
9d002864:	ac640000 	sw	a0,0(v1)
9d002868:	0b400992 	j	9d002648 <_do_print_cdnopuxX+0x848>
9d00286c:	00001021 	move	v0,zero

Disassembly of section .text:

9d002870 <initLCD>:

	IFS0bits.T5IF = 0;              // clear interrupt flag
}

void initLCD(void)
{
9d002870:	27bdffe8 	addiu	sp,sp,-24
9d002874:	afbf0014 	sw	ra,20(sp)
	LCD_Setup();
9d002878:	0f400e3e 	jal	9d0038f8 <LCD_Setup>
9d00287c:	00000000 	nop

9d002880 <.LVL0>:

	__builtin_disable_interrupts(); // INT step 2: disable interrupts at CPU
9d002880:	41626000 	di	v0
9d002884:	000000c0 	ehb
									// INT step 3: setup peripheral
	T4CONbits.T32 = 1;               // use Timer23 in 32bit mode
9d002888:	3c02bf80 	lui	v0,0xbf80
9d00288c:	94440c00 	lhu	a0,3072(v0)
9d002890:	24030001 	li	v1,1
9d002894:	7c6418c4 	ins	a0,v1,0x3,0x1
9d002898:	a4440c00 	sh	a0,3072(v0)
	PR4 = 8999999;               //             set period register
9d00289c:	3c050089 	lui	a1,0x89
9d0028a0:	24a5543f 	addiu	a1,a1,21567
9d0028a4:	3c04bf80 	lui	a0,0xbf80
9d0028a8:	ac850c20 	sw	a1,3104(a0)
	//use 49999999 for 5 seconds
	TMR4 = 0;                       //             initialize count to 0
9d0028ac:	3c04bf80 	lui	a0,0xbf80
9d0028b0:	ac800c10 	sw	zero,3088(a0)
	T4CONbits.TCKPS = 0b011;            //             set prescaler to 1:8
9d0028b4:	94440c00 	lhu	a0,3072(v0)
9d0028b8:	24050003 	li	a1,3
9d0028bc:	7ca43104 	ins	a0,a1,0x4,0x3
9d0028c0:	a4440c00 	sh	a0,3072(v0)
	T4CONbits.ON = 1;               //             turn on Timer23
9d0028c4:	94440c00 	lhu	a0,3072(v0)
9d0028c8:	7c647bc4 	ins	a0,v1,0xf,0x1
9d0028cc:	a4440c00 	sh	a0,3072(v0)

	IPC5bits.T5IP = 3;              // INT step 4: priority
9d0028d0:	3c02bf88 	lui	v0,0xbf88
9d0028d4:	8c4410e0 	lw	a0,4320(v0)
9d0028d8:	7ca42084 	ins	a0,a1,0x2,0x3
9d0028dc:	ac4410e0 	sw	a0,4320(v0)
	IPC5bits.T5IS = 0;              //             subpriority
9d0028e0:	8c4410e0 	lw	a0,4320(v0)
9d0028e4:	7c040804 	ins	a0,zero,0x0,0x2
9d0028e8:	ac4410e0 	sw	a0,4320(v0)
	IFS0bits.T5IF = 0;              // INT step 5: clear interrupt flag
9d0028ec:	3c02bf88 	lui	v0,0xbf88
9d0028f0:	8c441030 	lw	a0,4144(v0)
9d0028f4:	7c04a504 	ins	a0,zero,0x14,0x1
9d0028f8:	ac441030 	sw	a0,4144(v0)
	IEC0bits.T5IE = 1;              // INT step 6: enable interrupt
9d0028fc:	3c02bf88 	lui	v0,0xbf88
9d002900:	8c441060 	lw	a0,4192(v0)
9d002904:	7c64a504 	ins	a0,v1,0x14,0x1
9d002908:	ac441060 	sw	a0,4192(v0)
	__builtin_enable_interrupts();  // INT step 7: enable interrupts at CPU
9d00290c:	41626020 	ei	v0

}
9d002910:	8fbf0014 	lw	ra,20(sp)
9d002914:	03e00008 	jr	ra
9d002918:	27bd0018 	addiu	sp,sp,24

9d00291c <timeStatusLCD>:

void timeStatusLCD(int state)
{
9d00291c:	27bdffe8 	addiu	sp,sp,-24
9d002920:	afbf0014 	sw	ra,20(sp)
9d002924:	afb00010 	sw	s0,16(sp)
	LCD_Clear();
9d002928:	0f400db7 	jal	9d0036dc <LCD_Clear>
9d00292c:	00808021 	move	s0,a0

9d002930 <.LVL2>:
	LCD_Move(0, 0);
9d002930:	00002021 	move	a0,zero
9d002934:	0f400df7 	jal	9d0037dc <LCD_Move>
9d002938:	00002821 	move	a1,zero

9d00293c <.LVL3>:
	LCD_WriteString("CURRENT STATE:");
9d00293c:	3c049d00 	lui	a0,0x9d00
9d002940:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d002944:	248459a8 	addiu	a0,a0,22952

9d002948 <.LVL4>:
	LCD_Move(1, 0);
9d002948:	24040001 	li	a0,1
9d00294c:	0f400df7 	jal	9d0037dc <LCD_Move>
9d002950:	00002821 	move	a1,zero

9d002954 <.LVL5>:
	
	if (state)
9d002954:	52000006 	beqzl	s0,9d002970 <.LVL6+0x8>
9d002958:	3c049d00 	lui	a0,0x9d00
	{
		LCD_WriteString("DAYTIME");
9d00295c:	3c049d00 	lui	a0,0x9d00
9d002960:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d002964:	248459b8 	addiu	a0,a0,22968

9d002968 <.LVL6>:
9d002968:	0b400a5f 	j	9d00297c <.LVL7+0x4>
9d00296c:	8fbf0014 	lw	ra,20(sp)
	}
	else
	{
		LCD_WriteString("NIGHTTIME");
9d002970:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d002974:	248459c0 	addiu	a0,a0,22976

9d002978 <.LVL7>:
	}
}
9d002978:	8fbf0014 	lw	ra,20(sp)
9d00297c:	8fb00010 	lw	s0,16(sp)
9d002980:	03e00008 	jr	ra
9d002984:	27bd0018 	addiu	sp,sp,24

9d002988 <lightLevelLCD>:

void lightLevelLCD(int lightLvl)
{
9d002988:	27bdffd8 	addiu	sp,sp,-40
9d00298c:	afbf0024 	sw	ra,36(sp)
9d002990:	00803021 	move	a2,a0
	char s[MSG_LEN_LOWER];
	sprintf(s, "%d%%", lightLvl);
9d002994:	27a40010 	addiu	a0,sp,16
9d002998:	3c059d00 	lui	a1,0x9d00
9d00299c:	0f401776 	jal	9d005dd8 <_sprintf_cdnopuxX>
9d0029a0:	24a559cc 	addiu	a1,a1,22988

9d0029a4 <.LVL11>:
	LCD_Clear();
9d0029a4:	0f400db7 	jal	9d0036dc <LCD_Clear>
9d0029a8:	00000000 	nop

9d0029ac <.LVL12>:
	LCD_Move(0, 0);
9d0029ac:	00002021 	move	a0,zero
9d0029b0:	0f400df7 	jal	9d0037dc <LCD_Move>
9d0029b4:	00002821 	move	a1,zero

9d0029b8 <.LVL13>:
	LCD_WriteString("LIGHT LEVEL:");
9d0029b8:	3c049d00 	lui	a0,0x9d00
9d0029bc:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d0029c0:	248459d4 	addiu	a0,a0,22996

9d0029c4 <.LVL14>:
	LCD_Move(1, 0);
9d0029c4:	24040001 	li	a0,1
9d0029c8:	0f400df7 	jal	9d0037dc <LCD_Move>
9d0029cc:	00002821 	move	a1,zero

9d0029d0 <.LVL15>:
	LCD_WriteString(s);
9d0029d0:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d0029d4:	27a40010 	addiu	a0,sp,16

9d0029d8 <.LVL16>:
}
9d0029d8:	8fbf0024 	lw	ra,36(sp)
9d0029dc:	03e00008 	jr	ra
9d0029e0:	27bd0028 	addiu	sp,sp,40

9d0029e4 <servoPosLCD>:

void servoPosLCD(int servoPos)
{
9d0029e4:	27bdffd8 	addiu	sp,sp,-40
9d0029e8:	afbf0024 	sw	ra,36(sp)
9d0029ec:	00803021 	move	a2,a0
	char s[MSG_LEN_LOWER];
	sprintf(s, "%d DEGREES", servoPos);
9d0029f0:	27a40010 	addiu	a0,sp,16
9d0029f4:	3c059d00 	lui	a1,0x9d00
9d0029f8:	0f401776 	jal	9d005dd8 <_sprintf_cdnopuxX>
9d0029fc:	24a559e4 	addiu	a1,a1,23012

9d002a00 <.LVL19>:
	LCD_Clear();
9d002a00:	0f400db7 	jal	9d0036dc <LCD_Clear>
9d002a04:	00000000 	nop

9d002a08 <.LVL20>:
	LCD_Move(0, 0);
9d002a08:	00002021 	move	a0,zero
9d002a0c:	0f400df7 	jal	9d0037dc <LCD_Move>
9d002a10:	00002821 	move	a1,zero

9d002a14 <.LVL21>:
	LCD_WriteString("SERVO POSITION:");
9d002a14:	3c049d00 	lui	a0,0x9d00
9d002a18:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d002a1c:	248459f0 	addiu	a0,a0,23024

9d002a20 <.LVL22>:

	LCD_Move(1, 0);
9d002a20:	24040001 	li	a0,1
9d002a24:	0f400df7 	jal	9d0037dc <LCD_Move>
9d002a28:	00002821 	move	a1,zero

9d002a2c <.LVL23>:
	LCD_WriteString(s);
9d002a2c:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d002a30:	27a40010 	addiu	a0,sp,16

9d002a34 <.LVL24>:
}
9d002a34:	8fbf0024 	lw	ra,36(sp)
9d002a38:	03e00008 	jr	ra
9d002a3c:	27bd0028 	addiu	sp,sp,40

9d002a40 <batteryLvlLCD>:

void batteryLvlLCD(int battLvl)
{
9d002a40:	27bdffd8 	addiu	sp,sp,-40
9d002a44:	afbf0024 	sw	ra,36(sp)
9d002a48:	00803021 	move	a2,a0
	char s[MSG_LEN_LOWER];
	sprintf(s, "%d%%", battLvl);
9d002a4c:	27a40010 	addiu	a0,sp,16
9d002a50:	3c059d00 	lui	a1,0x9d00
9d002a54:	0f401776 	jal	9d005dd8 <_sprintf_cdnopuxX>
9d002a58:	24a559cc 	addiu	a1,a1,22988

9d002a5c <.LVL27>:
	LCD_Clear();
9d002a5c:	0f400db7 	jal	9d0036dc <LCD_Clear>
9d002a60:	00000000 	nop

9d002a64 <.LVL28>:
	LCD_Move(0, 0);
9d002a64:	00002021 	move	a0,zero
9d002a68:	0f400df7 	jal	9d0037dc <LCD_Move>
9d002a6c:	00002821 	move	a1,zero

9d002a70 <.LVL29>:
	LCD_WriteString("BATTERY LEVEL:");
9d002a70:	3c049d00 	lui	a0,0x9d00
9d002a74:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d002a78:	24845a00 	addiu	a0,a0,23040

9d002a7c <.LVL30>:

	LCD_Move(1, 0);
9d002a7c:	24040001 	li	a0,1
9d002a80:	0f400df7 	jal	9d0037dc <LCD_Move>
9d002a84:	00002821 	move	a1,zero

9d002a88 <.LVL31>:
	LCD_WriteString(s);
9d002a88:	0f400e13 	jal	9d00384c <LCD_WriteString>
9d002a8c:	27a40010 	addiu	a0,sp,16

9d002a90 <.LVL32>:
}
9d002a90:	8fbf0024 	lw	ra,36(sp)
9d002a94:	03e00008 	jr	ra
9d002a98:	27bd0028 	addiu	sp,sp,40

9d002a9c <Timer5ISR>:
extern volatile int day_night = 1;  //day = 1, night = 0
volatile char msg[100] = {};

//functions
//Timer45 interrupt for cycling through LCD info 
void __ISR(_TIMER_5_VECTOR, IPL3SOFT) Timer5ISR(void) {  // INT step 1: the ISR
9d002a9c:	415de800 	rdpgpr	sp,sp
9d002aa0:	401a7000 	mfc0	k0,c0_epc
9d002aa4:	401b6000 	mfc0	k1,c0_status
9d002aa8:	27bdff78 	addiu	sp,sp,-136
9d002aac:	afba0084 	sw	k0,132(sp)
9d002ab0:	401a6002 	mfc0	k0,c0_srsctl
9d002ab4:	afbb0080 	sw	k1,128(sp)
9d002ab8:	afba007c 	sw	k0,124(sp)
9d002abc:	7c1b7844 	ins	k1,zero,0x1,0xf
9d002ac0:	377b0c00 	ori	k1,k1,0xc00
9d002ac4:	409b6000 	mtc0	k1,c0_status
9d002ac8:	afbf006c 	sw	ra,108(sp)
9d002acc:	afb90068 	sw	t9,104(sp)
9d002ad0:	afb80064 	sw	t8,100(sp)
9d002ad4:	afb20060 	sw	s2,96(sp)
9d002ad8:	afb1005c 	sw	s1,92(sp)
9d002adc:	afb00058 	sw	s0,88(sp)
9d002ae0:	afaf0054 	sw	t7,84(sp)
9d002ae4:	afae0050 	sw	t6,80(sp)
9d002ae8:	afad004c 	sw	t5,76(sp)
9d002aec:	afac0048 	sw	t4,72(sp)
9d002af0:	afab0044 	sw	t3,68(sp)
9d002af4:	afaa0040 	sw	t2,64(sp)
9d002af8:	afa9003c 	sw	t1,60(sp)
9d002afc:	afa80038 	sw	t0,56(sp)
9d002b00:	afa70034 	sw	a3,52(sp)
9d002b04:	afa60030 	sw	a2,48(sp)
9d002b08:	afa5002c 	sw	a1,44(sp)
9d002b0c:	afa40028 	sw	a0,40(sp)
9d002b10:	afa30024 	sw	v1,36(sp)
9d002b14:	afa20020 	sw	v0,32(sp)
9d002b18:	afa1001c 	sw	at,28(sp)
9d002b1c:	00001012 	mflo	v0
9d002b20:	afa20074 	sw	v0,116(sp)
9d002b24:	00001810 	mfhi	v1
9d002b28:	afa30070 	sw	v1,112(sp)
	switch (infoFlag) {
9d002b2c:	9382803c 	lbu	v0,-32708(gp)
9d002b30:	7c021420 	seb	v0,v0
9d002b34:	24030001 	li	v1,1
9d002b38:	10430012 	beq	v0,v1,9d002b84 <.LVL33+0x8>
9d002b3c:	28430002 	slti	v1,v0,2
9d002b40:	50600005 	beqzl	v1,9d002b58 <Timer5ISR+0xbc>
9d002b44:	24030002 	li	v1,2
9d002b48:	10400009 	beqz	v0,9d002b70 <.LBB2>
9d002b4c:	00000000 	nop
9d002b50:	0b400af3 	j	9d002bcc <.LVL39+0x8>
9d002b54:	00000000 	nop
9d002b58:	10430010 	beq	v0,v1,9d002b9c <.LVL35+0x8>
9d002b5c:	24030003 	li	v1,3
9d002b60:	10430014 	beq	v0,v1,9d002bb4 <.LVL37+0x8>
9d002b64:	00000000 	nop
9d002b68:	0b400af3 	j	9d002bcc <.LVL39+0x8>
9d002b6c:	00000000 	nop

9d002b70 <.LBB2>:
	case 0:
		timeStatusLCD(day_night);
9d002b70:	8f848010 	lw	a0,-32752(gp)
9d002b74:	0f400a47 	jal	9d00291c <timeStatusLCD>
9d002b78:	00000000 	nop

9d002b7c <.LVL33>:
		break;
9d002b7c:	0b400af4 	j	9d002bd0 <.LBE2>
9d002b80:	00000000 	nop
	case 1:
		lightLevelLCD(getPhoto());
9d002b84:	0f40107a 	jal	9d0041e8 <getPhoto>
9d002b88:	00000000 	nop

9d002b8c <.LVL34>:
9d002b8c:	0f400a62 	jal	9d002988 <lightLevelLCD>
9d002b90:	00402021 	move	a0,v0

9d002b94 <.LVL35>:
		break;
9d002b94:	0b400af4 	j	9d002bd0 <.LBE2>
9d002b98:	00000000 	nop
	case 2:
		servoPosLCD(getPot());
9d002b9c:	0f40107d 	jal	9d0041f4 <getPot>
9d002ba0:	00000000 	nop

9d002ba4 <.LVL36>:
9d002ba4:	0f400a79 	jal	9d0029e4 <servoPosLCD>
9d002ba8:	00402021 	move	a0,v0

9d002bac <.LVL37>:
		break;
9d002bac:	0b400af4 	j	9d002bd0 <.LBE2>
9d002bb0:	00000000 	nop
	case 3:
		batteryLvlLCD(getBatt());
9d002bb4:	0f401080 	jal	9d004200 <getBatt>
9d002bb8:	00000000 	nop

9d002bbc <.LVL38>:
9d002bbc:	0f400a90 	jal	9d002a40 <batteryLvlLCD>
9d002bc0:	00402021 	move	a0,v0

9d002bc4 <.LVL39>:
		break;
9d002bc4:	0b400af4 	j	9d002bd0 <.LBE2>
9d002bc8:	00000000 	nop
	default:
		infoFlag = 0;
9d002bcc:	a380803c 	sb	zero,-32708(gp)

9d002bd0 <.LBE2>:
	}

	infoFlag++;
9d002bd0:	9382803c 	lbu	v0,-32708(gp)
9d002bd4:	24420001 	addiu	v0,v0,1
9d002bd8:	7c021420 	seb	v0,v0
9d002bdc:	a382803c 	sb	v0,-32708(gp)

	if (infoFlag > 3)
9d002be0:	9382803c 	lbu	v0,-32708(gp)
9d002be4:	7c021420 	seb	v0,v0
9d002be8:	28420004 	slti	v0,v0,4
9d002bec:	50400001 	beqzl	v0,9d002bf4 <.LBE2+0x24>
9d002bf0:	a380803c 	sb	zero,-32708(gp)
	{
		infoFlag = 0;

	}	
	
	sprintf(msg, "Time: %d\t\tLight: %d\t\tServo: %d\t\tBatt: %d\n\r", day_night, getPhoto(), getPot(), getBatt());
9d002bf4:	8f918010 	lw	s1,-32752(gp)
9d002bf8:	0f40107a 	jal	9d0041e8 <getPhoto>
9d002bfc:	00000000 	nop

9d002c00 <.LVL40>:
9d002c00:	0f40107d 	jal	9d0041f4 <getPot>
9d002c04:	00408021 	move	s0,v0

9d002c08 <.LVL41>:
9d002c08:	0f401080 	jal	9d004200 <getBatt>
9d002c0c:	00409021 	move	s2,v0

9d002c10 <.LVL42>:
9d002c10:	afb20010 	sw	s2,16(sp)
9d002c14:	afa20014 	sw	v0,20(sp)
9d002c18:	3c04a000 	lui	a0,0xa000
9d002c1c:	24840198 	addiu	a0,a0,408
9d002c20:	3c059d00 	lui	a1,0x9d00
9d002c24:	24a55a10 	addiu	a1,a1,23056
9d002c28:	02203021 	move	a2,s1
9d002c2c:	0f401776 	jal	9d005dd8 <_sprintf_cdnopuxX>
9d002c30:	02003821 	move	a3,s0

9d002c34 <.LVL43>:
	//NU32_WriteUART3(msg);

	IFS0bits.T5IF = 0;              // clear interrupt flag
9d002c34:	3c02bf88 	lui	v0,0xbf88
9d002c38:	8c431030 	lw	v1,4144(v0)
9d002c3c:	7c03a504 	ins	v1,zero,0x14,0x1
9d002c40:	ac431030 	sw	v1,4144(v0)
}
9d002c44:	8fa20074 	lw	v0,116(sp)
9d002c48:	00400013 	mtlo	v0
9d002c4c:	8fa30070 	lw	v1,112(sp)
9d002c50:	00600011 	mthi	v1
9d002c54:	8fbf006c 	lw	ra,108(sp)
9d002c58:	8fb90068 	lw	t9,104(sp)
9d002c5c:	8fb80064 	lw	t8,100(sp)
9d002c60:	8fb20060 	lw	s2,96(sp)
9d002c64:	8fb1005c 	lw	s1,92(sp)
9d002c68:	8fb00058 	lw	s0,88(sp)
9d002c6c:	8faf0054 	lw	t7,84(sp)
9d002c70:	8fae0050 	lw	t6,80(sp)
9d002c74:	8fad004c 	lw	t5,76(sp)
9d002c78:	8fac0048 	lw	t4,72(sp)
9d002c7c:	8fab0044 	lw	t3,68(sp)
9d002c80:	8faa0040 	lw	t2,64(sp)
9d002c84:	8fa9003c 	lw	t1,60(sp)
9d002c88:	8fa80038 	lw	t0,56(sp)
9d002c8c:	8fa70034 	lw	a3,52(sp)
9d002c90:	8fa60030 	lw	a2,48(sp)
9d002c94:	8fa5002c 	lw	a1,44(sp)
9d002c98:	8fa40028 	lw	a0,40(sp)
9d002c9c:	8fa30024 	lw	v1,36(sp)
9d002ca0:	8fa20020 	lw	v0,32(sp)
9d002ca4:	8fa1001c 	lw	at,28(sp)
9d002ca8:	41606000 	di
9d002cac:	000000c0 	ehb
9d002cb0:	8fba0084 	lw	k0,132(sp)
9d002cb4:	8fbb0080 	lw	k1,128(sp)
9d002cb8:	409a7000 	mtc0	k0,c0_epc
9d002cbc:	8fba007c 	lw	k0,124(sp)
9d002cc0:	27bd0088 	addiu	sp,sp,136
9d002cc4:	409a6002 	mtc0	k0,c0_srsctl
9d002cc8:	41dde800 	wrpgpr	sp,sp
9d002ccc:	409b6000 	mtc0	k1,c0_status
9d002cd0:	42000018 	eret

9d002cd4 <getDayNight>:
	LCD_WriteString(s);
}

int getDayNight(void)
{
	return day_night;
9d002cd4:	8f828010 	lw	v0,-32752(gp)
}
9d002cd8:	03e00008 	jr	ra
9d002cdc:	00000000 	nop

9d002ce0 <invDayNight>:

void invDayNight(void)
{
	day_night = !day_night;
9d002ce0:	8f828010 	lw	v0,-32752(gp)
9d002ce4:	2c420001 	sltiu	v0,v0,1
9d002ce8:	af828010 	sw	v0,-32752(gp)
9d002cec:	03e00008 	jr	ra
9d002cf0:	00000000 	nop

9d002cf4 <__umoddi3>:
9d002cf4:	00c04021 	move	t0,a2
9d002cf8:	00804821 	move	t1,a0
9d002cfc:	14e0003b 	bnez	a3,9d002dec <.LBE15+0xc>
9d002d00:	00a01821 	move	v1,a1
9d002d04:	00a6102b 	sltu	v0,a1,a2
9d002d08:	10400048 	beqz	v0,9d002e2c <.LBE16+0x8>
9d002d0c:	70c21020 	clz	v0,a2
9d002d10:	50400008 	beqzl	v0,9d002d34 <.LBB15+0x4>
9d002d14:	00083402 	srl	a2,t0,0x10
9d002d18:	00021823 	negu	v1,v0
9d002d1c:	00452804 	sllv	a1,a1,v0
9d002d20:	00641806 	srlv	v1,a0,v1
9d002d24:	00464004 	sllv	t0,a2,v0
9d002d28:	00651825 	or	v1,v1,a1
9d002d2c:	00444804 	sllv	t1,a0,v0

9d002d30 <.LBB15>:
9d002d30:	00083402 	srl	a2,t0,0x10
9d002d34:	0066001b 	divu	zero,v1,a2
9d002d38:	00c001f4 	teq	a2,zero,0x7
9d002d3c:	00002010 	mfhi	a0
9d002d40:	00005812 	mflo	t3
9d002d44:	310cffff 	andi	t4,t0,0xffff
9d002d48:	00095402 	srl	t2,t1,0x10
9d002d4c:	716c5802 	mul	t3,t3,t4
9d002d50:	00042400 	sll	a0,a0,0x10
9d002d54:	008a5025 	or	t2,a0,t2
9d002d58:	014b682b 	sltu	t5,t2,t3
9d002d5c:	0066001b 	divu	zero,v1,a2
9d002d60:	00c001f4 	teq	a2,zero,0x7
9d002d64:	51a00009 	beqzl	t5,9d002d8c <.LBB15+0x5c>
9d002d68:	014b5023 	subu	t2,t2,t3
9d002d6c:	01485021 	addu	t2,t2,t0
9d002d70:	0148182b 	sltu	v1,t2,t0
9d002d74:	54600005 	bnezl	v1,9d002d8c <.LBB15+0x5c>
9d002d78:	014b5023 	subu	t2,t2,t3
9d002d7c:	014b202b 	sltu	a0,t2,t3
9d002d80:	01481821 	addu	v1,t2,t0
9d002d84:	0064500b 	movn	t2,v1,a0
9d002d88:	014b5023 	subu	t2,t2,t3
9d002d8c:	3123ffff 	andi	v1,t1,0xffff
9d002d90:	0146001b 	divu	zero,t2,a2
9d002d94:	00c001f4 	teq	a2,zero,0x7
9d002d98:	00004810 	mfhi	t1
9d002d9c:	00002012 	mflo	a0
9d002da0:	708c2002 	mul	a0,a0,t4
9d002da4:	00094c00 	sll	t1,t1,0x10
9d002da8:	01234825 	or	t1,t1,v1
9d002dac:	0124182b 	sltu	v1,t1,a0
9d002db0:	0146001b 	divu	zero,t2,a2
9d002db4:	00c001f4 	teq	a2,zero,0x7
9d002db8:	50600009 	beqzl	v1,9d002de0 <.LBE15>
9d002dbc:	01244823 	subu	t1,t1,a0
9d002dc0:	01284821 	addu	t1,t1,t0
9d002dc4:	0128182b 	sltu	v1,t1,t0
9d002dc8:	54600005 	bnezl	v1,9d002de0 <.LBE15>
9d002dcc:	01244823 	subu	t1,t1,a0
9d002dd0:	0124182b 	sltu	v1,t1,a0
9d002dd4:	01284021 	addu	t0,t1,t0
9d002dd8:	0103480b 	movn	t1,t0,v1
9d002ddc:	01244823 	subu	t1,t1,a0

9d002de0 <.LBE15>:
9d002de0:	00491006 	srlv	v0,t1,v0
9d002de4:	03e00008 	jr	ra
9d002de8:	00001821 	move	v1,zero
9d002dec:	00a7102b 	sltu	v0,a1,a3
9d002df0:	14400047 	bnez	v0,9d002f10 <.LBE17+0xc>
9d002df4:	70ea5020 	clz	t2,a3
9d002df8:	15400048 	bnez	t2,9d002f1c <.LBE17+0x18>
9d002dfc:	240b0020 	li	t3,32
9d002e00:	00e5102b 	sltu	v0,a3,a1
9d002e04:	14400005 	bnez	v0,9d002e1c <.LBB16+0x4>
9d002e08:	00861023 	subu	v0,a0,a2
9d002e0c:	0086402b 	sltu	t0,a0,a2
9d002e10:	15000089 	bnez	t0,9d003038 <.LBE24+0x10>
9d002e14:	00801021 	move	v0,a0

9d002e18 <.LBB16>:
9d002e18:	00861023 	subu	v0,a0,a2
9d002e1c:	00a72823 	subu	a1,a1,a3
9d002e20:	0082202b 	sltu	a0,a0,v0

9d002e24 <.LBE16>:
9d002e24:	03e00008 	jr	ra
9d002e28:	00a41823 	subu	v1,a1,a0
9d002e2c:	14c00006 	bnez	a2,9d002e48 <.LBE16+0x24>
9d002e30:	71021020 	clz	v0,t0
9d002e34:	24020001 	li	v0,1
9d002e38:	0046001b 	divu	zero,v0,a2
9d002e3c:	00c001f4 	teq	a2,zero,0x7
9d002e40:	00004012 	mflo	t0
9d002e44:	71021020 	clz	v0,t0
9d002e48:	5440007d 	bnezl	v0,9d003040 <.LBE24+0x18>
9d002e4c:	00484004 	sllv	t0,t0,v0
9d002e50:	00a82823 	subu	a1,a1,t0
9d002e54:	00081c02 	srl	v1,t0,0x10
9d002e58:	3107ffff 	andi	a3,t0,0xffff

9d002e5c <.LBB17>:
9d002e5c:	00092402 	srl	a0,t1,0x10
9d002e60:	00a3001b 	divu	zero,a1,v1
9d002e64:	006001f4 	teq	v1,zero,0x7
9d002e68:	00005010 	mfhi	t2
9d002e6c:	00003012 	mflo	a2
9d002e70:	70c73002 	mul	a2,a2,a3
9d002e74:	000a5400 	sll	t2,t2,0x10
9d002e78:	01442025 	or	a0,t2,a0
9d002e7c:	0086502b 	sltu	t2,a0,a2
9d002e80:	00a3001b 	divu	zero,a1,v1
9d002e84:	006001f4 	teq	v1,zero,0x7
9d002e88:	51400009 	beqzl	t2,9d002eb0 <.LBB17+0x54>
9d002e8c:	00862023 	subu	a0,a0,a2
9d002e90:	00882021 	addu	a0,a0,t0
9d002e94:	0088282b 	sltu	a1,a0,t0
9d002e98:	54a00005 	bnezl	a1,9d002eb0 <.LBB17+0x54>
9d002e9c:	00862023 	subu	a0,a0,a2
9d002ea0:	0086502b 	sltu	t2,a0,a2
9d002ea4:	00882821 	addu	a1,a0,t0
9d002ea8:	00aa200b 	movn	a0,a1,t2
9d002eac:	00862023 	subu	a0,a0,a2
9d002eb0:	3126ffff 	andi	a2,t1,0xffff
9d002eb4:	0083001b 	divu	zero,a0,v1
9d002eb8:	006001f4 	teq	v1,zero,0x7
9d002ebc:	00004810 	mfhi	t1
9d002ec0:	00002812 	mflo	a1
9d002ec4:	70a72802 	mul	a1,a1,a3
9d002ec8:	00094c00 	sll	t1,t1,0x10
9d002ecc:	01264825 	or	t1,t1,a2
9d002ed0:	0125302b 	sltu	a2,t1,a1
9d002ed4:	0083001b 	divu	zero,a0,v1
9d002ed8:	006001f4 	teq	v1,zero,0x7
9d002edc:	50c00009 	beqzl	a2,9d002f04 <.LBE17>
9d002ee0:	01254823 	subu	t1,t1,a1
9d002ee4:	01284821 	addu	t1,t1,t0
9d002ee8:	0128182b 	sltu	v1,t1,t0
9d002eec:	54600005 	bnezl	v1,9d002f04 <.LBE17>
9d002ef0:	01254823 	subu	t1,t1,a1
9d002ef4:	0125182b 	sltu	v1,t1,a1
9d002ef8:	01284021 	addu	t0,t1,t0
9d002efc:	0103480b 	movn	t1,t0,v1
9d002f00:	01254823 	subu	t1,t1,a1

9d002f04 <.LBE17>:
9d002f04:	00491006 	srlv	v0,t1,v0
9d002f08:	03e00008 	jr	ra
9d002f0c:	00001821 	move	v1,zero
9d002f10:	00801021 	move	v0,a0
9d002f14:	03e00008 	jr	ra
9d002f18:	00a01821 	move	v1,a1
9d002f1c:	016a5823 	subu	t3,t3,t2
9d002f20:	01473804 	sllv	a3,a3,t2
9d002f24:	01661006 	srlv	v0,a2,t3
9d002f28:	00473825 	or	a3,v0,a3
9d002f2c:	01656806 	srlv	t5,a1,t3
9d002f30:	00074c02 	srl	t1,a3,0x10
9d002f34:	01a9001b 	divu	zero,t5,t1
9d002f38:	012001f4 	teq	t1,zero,0x7
9d002f3c:	00006010 	mfhi	t4
9d002f40:	00001812 	mflo	v1
9d002f44:	30eeffff 	andi	t6,a3,0xffff
9d002f48:	01452804 	sllv	a1,a1,t2
9d002f4c:	01641006 	srlv	v0,a0,t3
9d002f50:	00451025 	or	v0,v0,a1
9d002f54:	00022c02 	srl	a1,v0,0x10
9d002f58:	01463004 	sllv	a2,a2,t2
9d002f5c:	00004012 	mflo	t0
9d002f60:	706e7802 	mul	t7,v1,t6
9d002f64:	000c6400 	sll	t4,t4,0x10
9d002f68:	01856025 	or	t4,t4,a1
9d002f6c:	018f282b 	sltu	a1,t4,t7
9d002f70:	01a9001b 	divu	zero,t5,t1
9d002f74:	012001f4 	teq	t1,zero,0x7
9d002f78:	10a0000a 	beqz	a1,9d002fa4 <.LBE17+0xa0>
9d002f7c:	01442004 	sllv	a0,a0,t2
9d002f80:	01876021 	addu	t4,t4,a3
9d002f84:	0187282b 	sltu	a1,t4,a3
9d002f88:	14a00006 	bnez	a1,9d002fa4 <.LBE17+0xa0>
9d002f8c:	2468ffff 	addiu	t0,v1,-1
9d002f90:	018f282b 	sltu	a1,t4,t7
9d002f94:	50a00004 	beqzl	a1,9d002fa8 <.LBE17+0xa4>
9d002f98:	018f6023 	subu	t4,t4,t7
9d002f9c:	2468fffe 	addiu	t0,v1,-2
9d002fa0:	01876021 	addu	t4,t4,a3
9d002fa4:	018f6023 	subu	t4,t4,t7
9d002fa8:	3042ffff 	andi	v0,v0,0xffff
9d002fac:	0189001b 	divu	zero,t4,t1
9d002fb0:	012001f4 	teq	t1,zero,0x7
9d002fb4:	00002810 	mfhi	a1
9d002fb8:	00001812 	mflo	v1
9d002fbc:	00006812 	mflo	t5
9d002fc0:	706e7002 	mul	t6,v1,t6
9d002fc4:	00052c00 	sll	a1,a1,0x10
9d002fc8:	00a21025 	or	v0,a1,v0
9d002fcc:	004e282b 	sltu	a1,v0,t6
9d002fd0:	0189001b 	divu	zero,t4,t1
9d002fd4:	012001f4 	teq	t1,zero,0x7
9d002fd8:	50a00006 	beqzl	a1,9d002ff4 <.LBE17+0xf0>
9d002fdc:	00084400 	sll	t0,t0,0x10
9d002fe0:	00471021 	addu	v0,v0,a3
9d002fe4:	0047282b 	sltu	a1,v0,a3
9d002fe8:	10a0004c 	beqz	a1,9d00311c <.LBE25>
9d002fec:	246dffff 	addiu	t5,v1,-1
9d002ff0:	00084400 	sll	t0,t0,0x10
9d002ff4:	01a84025 	or	t0,t5,t0
9d002ff8:	004e1023 	subu	v0,v0,t6
9d002ffc:	01060019 	multu	t0,a2
9d003000:	00004810 	mfhi	t1
9d003004:	0049182b 	sltu	v1,v0,t1
9d003008:	1460003e 	bnez	v1,9d003104 <.LBB25>
9d00300c:	00004012 	mflo	t0
9d003010:	1049004b 	beq	v0,t1,9d003140 <.LBE25+0x24>
9d003014:	00491823 	subu	v1,v0,t1
9d003018:	00003012 	mflo	a2

9d00301c <.LBB24>:
9d00301c:	00863023 	subu	a2,a0,a2
9d003020:	0086202b 	sltu	a0,a0,a2
9d003024:	00641823 	subu	v1,v1,a0

9d003028 <.LBE24>:
9d003028:	01631004 	sllv	v0,v1,t3
9d00302c:	01463006 	srlv	a2,a2,t2
9d003030:	00461025 	or	v0,v0,a2
9d003034:	01431806 	srlv	v1,v1,t2
9d003038:	03e00008 	jr	ra
9d00303c:	00000000 	nop
9d003040:	24090020 	li	t1,32
9d003044:	01224823 	subu	t1,t1,v0
9d003048:	01255006 	srlv	t2,a1,t1
9d00304c:	00081c02 	srl	v1,t0,0x10
9d003050:	0143001b 	divu	zero,t2,v1
9d003054:	006001f4 	teq	v1,zero,0x7
9d003058:	00003010 	mfhi	a2
9d00305c:	00005812 	mflo	t3
9d003060:	3107ffff 	andi	a3,t0,0xffff
9d003064:	00452804 	sllv	a1,a1,v0
9d003068:	01244806 	srlv	t1,a0,t1
9d00306c:	01252825 	or	a1,t1,a1
9d003070:	00056402 	srl	t4,a1,0x10
9d003074:	00444804 	sllv	t1,a0,v0
9d003078:	71675802 	mul	t3,t3,a3
9d00307c:	00063400 	sll	a2,a2,0x10
9d003080:	01863025 	or	a2,t4,a2
9d003084:	00cb202b 	sltu	a0,a2,t3
9d003088:	0143001b 	divu	zero,t2,v1
9d00308c:	006001f4 	teq	v1,zero,0x7
9d003090:	50800006 	beqzl	a0,9d0030ac <.LBE24+0x84>
9d003094:	00cb3023 	subu	a2,a2,t3
9d003098:	00c83021 	addu	a2,a2,t0
9d00309c:	00c8202b 	sltu	a0,a2,t0
9d0030a0:	10800024 	beqz	a0,9d003134 <.LBE25+0x18>
9d0030a4:	00cb502b 	sltu	t2,a2,t3
9d0030a8:	00cb3023 	subu	a2,a2,t3
9d0030ac:	30aaffff 	andi	t2,a1,0xffff
9d0030b0:	00c3001b 	divu	zero,a2,v1
9d0030b4:	006001f4 	teq	v1,zero,0x7
9d0030b8:	00002010 	mfhi	a0
9d0030bc:	00002812 	mflo	a1
9d0030c0:	70a72802 	mul	a1,a1,a3
9d0030c4:	00042400 	sll	a0,a0,0x10
9d0030c8:	008a2025 	or	a0,a0,t2
9d0030cc:	0085502b 	sltu	t2,a0,a1
9d0030d0:	00c3001b 	divu	zero,a2,v1
9d0030d4:	006001f4 	teq	v1,zero,0x7
9d0030d8:	5140ff60 	beqzl	t2,9d002e5c <.LBB17>
9d0030dc:	00852823 	subu	a1,a0,a1
9d0030e0:	00882021 	addu	a0,a0,t0
9d0030e4:	0088302b 	sltu	a2,a0,t0
9d0030e8:	54c0ff5c 	bnezl	a2,9d002e5c <.LBB17>
9d0030ec:	00852823 	subu	a1,a0,a1
9d0030f0:	0085502b 	sltu	t2,a0,a1
9d0030f4:	00883021 	addu	a2,a0,t0
9d0030f8:	00ca200b 	movn	a0,a2,t2
9d0030fc:	0b400b97 	j	9d002e5c <.LBB17>
9d003100:	00852823 	subu	a1,a0,a1

9d003104 <.LBB25>:
9d003104:	01063023 	subu	a2,t0,a2
9d003108:	01271823 	subu	v1,t1,a3
9d00310c:	0106402b 	sltu	t0,t0,a2
9d003110:	00681823 	subu	v1,v1,t0
9d003114:	0b400c07 	j	9d00301c <.LBB24>
9d003118:	00431823 	subu	v1,v0,v1

9d00311c <.LBE25>:
9d00311c:	004e282b 	sltu	a1,v0,t6
9d003120:	50a0ffb4 	beqzl	a1,9d002ff4 <.LBE17+0xf0>
9d003124:	00084400 	sll	t0,t0,0x10
9d003128:	246dfffe 	addiu	t5,v1,-2
9d00312c:	0b400bfc 	j	9d002ff0 <.LBE17+0xec>
9d003130:	00471021 	addu	v0,v0,a3
9d003134:	00c82021 	addu	a0,a2,t0
9d003138:	0b400c2a 	j	9d0030a8 <.LBE24+0x80>
9d00313c:	008a300b 	movn	a2,a0,t2
9d003140:	0088182b 	sltu	v1,a0,t0
9d003144:	5460fff0 	bnezl	v1,9d003108 <.LBB25+0x4>
9d003148:	01063023 	subu	a2,t0,a2
9d00314c:	00003012 	mflo	a2
9d003150:	0b400c07 	j	9d00301c <.LBB24>
9d003154:	00001821 	move	v1,zero

Disassembly of section .text:

9d003158 <__udivdi3>:
9d003158:	00c04021 	move	t0,a2
9d00315c:	00801021 	move	v0,a0
9d003160:	14e0003f 	bnez	a3,9d003260 <.LBE15+0x8>
9d003164:	00a04821 	move	t1,a1
9d003168:	00a6182b 	sltu	v1,a1,a2
9d00316c:	10600047 	beqz	v1,9d00328c <.LBE15+0x34>
9d003170:	70c31820 	clz	v1,a2
9d003174:	50600008 	beqzl	v1,9d003198 <.LBB15+0x4>
9d003178:	00081c02 	srl	v1,t0,0x10
9d00317c:	00034823 	negu	t1,v1
9d003180:	00652804 	sllv	a1,a1,v1
9d003184:	01244806 	srlv	t1,a0,t1
9d003188:	00664004 	sllv	t0,a2,v1
9d00318c:	01254825 	or	t1,t1,a1
9d003190:	00641004 	sllv	v0,a0,v1

9d003194 <.LBB15>:
9d003194:	00081c02 	srl	v1,t0,0x10
9d003198:	0123001b 	divu	zero,t1,v1
9d00319c:	006001f4 	teq	v1,zero,0x7
9d0031a0:	00006010 	mfhi	t4
9d0031a4:	00005812 	mflo	t3
9d0031a8:	310affff 	andi	t2,t0,0xffff
9d0031ac:	00022402 	srl	a0,v0,0x10
9d0031b0:	00003012 	mflo	a2
9d0031b4:	716a3802 	mul	a3,t3,t2
9d0031b8:	000c6400 	sll	t4,t4,0x10
9d0031bc:	01842025 	or	a0,t4,a0
9d0031c0:	0087602b 	sltu	t4,a0,a3
9d0031c4:	0123001b 	divu	zero,t1,v1
9d0031c8:	006001f4 	teq	v1,zero,0x7
9d0031cc:	1180000b 	beqz	t4,9d0031fc <.LBB15+0x68>
9d0031d0:	00872823 	subu	a1,a0,a3
9d0031d4:	00882021 	addu	a0,a0,t0
9d0031d8:	0088282b 	sltu	a1,a0,t0
9d0031dc:	14a00006 	bnez	a1,9d0031f8 <.LBB15+0x64>
9d0031e0:	2566ffff 	addiu	a2,t3,-1
9d0031e4:	0087282b 	sltu	a1,a0,a3
9d0031e8:	10a00004 	beqz	a1,9d0031fc <.LBB15+0x68>
9d0031ec:	00872823 	subu	a1,a0,a3
9d0031f0:	2566fffe 	addiu	a2,t3,-2
9d0031f4:	00882021 	addu	a0,a0,t0
9d0031f8:	00872823 	subu	a1,a0,a3
9d0031fc:	3042ffff 	andi	v0,v0,0xffff
9d003200:	00a3001b 	divu	zero,a1,v1
9d003204:	006001f4 	teq	v1,zero,0x7
9d003208:	00004810 	mfhi	t1
9d00320c:	00003812 	mflo	a3
9d003210:	00002012 	mflo	a0
9d003214:	70ea5002 	mul	t2,a3,t2
9d003218:	00094c00 	sll	t1,t1,0x10
9d00321c:	01221025 	or	v0,t1,v0
9d003220:	004a482b 	sltu	t1,v0,t2
9d003224:	00a3001b 	divu	zero,a1,v1
9d003228:	006001f4 	teq	v1,zero,0x7
9d00322c:	51200009 	beqzl	t1,9d003254 <.LBB15+0xc0>
9d003230:	00061400 	sll	v0,a2,0x10
9d003234:	00481021 	addu	v0,v0,t0
9d003238:	0048402b 	sltu	t0,v0,t0
9d00323c:	15000004 	bnez	t0,9d003250 <.LBB15+0xbc>
9d003240:	24e4ffff 	addiu	a0,a3,-1
9d003244:	004a502b 	sltu	t2,v0,t2
9d003248:	24e7fffe 	addiu	a3,a3,-2
9d00324c:	00ea200b 	movn	a0,a3,t2
9d003250:	00061400 	sll	v0,a2,0x10
9d003254:	00821025 	or	v0,a0,v0

9d003258 <.LBE15>:
9d003258:	03e00008 	jr	ra
9d00325c:	00001821 	move	v1,zero
9d003260:	00a7102b 	sltu	v0,a1,a3
9d003264:	14400044 	bnez	v0,9d003378 <.LBE16+0x8>
9d003268:	70e84020 	clz	t0,a3
9d00326c:	55000045 	bnezl	t0,9d003384 <.LBE16+0x14>
9d003270:	24020020 	li	v0,32
9d003274:	00e5282b 	sltu	a1,a3,a1
9d003278:	14a000c8 	bnez	a1,9d00359c <.LBE20+0x120>
9d00327c:	0086302b 	sltu	a2,a0,a2
9d003280:	38c20001 	xori	v0,a2,0x1
9d003284:	03e00008 	jr	ra
9d003288:	00001821 	move	v1,zero
9d00328c:	14c00006 	bnez	a2,9d0032a8 <.LBE15+0x50>
9d003290:	71031820 	clz	v1,t0
9d003294:	24030001 	li	v1,1
9d003298:	0066001b 	divu	zero,v1,a2
9d00329c:	00c001f4 	teq	a2,zero,0x7
9d0032a0:	00004012 	mflo	t0
9d0032a4:	71031820 	clz	v1,t0
9d0032a8:	5460007b 	bnezl	v1,9d003498 <.LBE20+0x1c>
9d0032ac:	00684004 	sllv	t0,t0,v1
9d0032b0:	00a82023 	subu	a0,a1,t0
9d0032b4:	00083c02 	srl	a3,t0,0x10
9d0032b8:	310bffff 	andi	t3,t0,0xffff
9d0032bc:	24030001 	li	v1,1

9d0032c0 <.LBB16>:
9d0032c0:	00023402 	srl	a2,v0,0x10
9d0032c4:	0087001b 	divu	zero,a0,a3
9d0032c8:	00e001f4 	teq	a3,zero,0x7
9d0032cc:	00006810 	mfhi	t5
9d0032d0:	00006012 	mflo	t4
9d0032d4:	00004812 	mflo	t1
9d0032d8:	718b5002 	mul	t2,t4,t3
9d0032dc:	000d6c00 	sll	t5,t5,0x10
9d0032e0:	01a63025 	or	a2,t5,a2
9d0032e4:	00ca682b 	sltu	t5,a2,t2
9d0032e8:	0087001b 	divu	zero,a0,a3
9d0032ec:	00e001f4 	teq	a3,zero,0x7
9d0032f0:	11a00009 	beqz	t5,9d003318 <.LBB16+0x58>
9d0032f4:	00ca2823 	subu	a1,a2,t2
9d0032f8:	00c83021 	addu	a2,a2,t0
9d0032fc:	00c8202b 	sltu	a0,a2,t0
9d003300:	14800004 	bnez	a0,9d003314 <.LBB16+0x54>
9d003304:	2589ffff 	addiu	t1,t4,-1
9d003308:	00ca202b 	sltu	a0,a2,t2
9d00330c:	548000a6 	bnezl	a0,9d0035a8 <.LBE20+0x12c>
9d003310:	2589fffe 	addiu	t1,t4,-2
9d003314:	00ca2823 	subu	a1,a2,t2
9d003318:	3042ffff 	andi	v0,v0,0xffff
9d00331c:	00a7001b 	divu	zero,a1,a3
9d003320:	00e001f4 	teq	a3,zero,0x7
9d003324:	00005010 	mfhi	t2
9d003328:	00003012 	mflo	a2
9d00332c:	00002012 	mflo	a0
9d003330:	70cb5802 	mul	t3,a2,t3
9d003334:	000a5400 	sll	t2,t2,0x10
9d003338:	01421025 	or	v0,t2,v0
9d00333c:	004b502b 	sltu	t2,v0,t3
9d003340:	00a7001b 	divu	zero,a1,a3
9d003344:	00e001f4 	teq	a3,zero,0x7
9d003348:	51400009 	beqzl	t2,9d003370 <.LBE16>
9d00334c:	00091400 	sll	v0,t1,0x10
9d003350:	00481021 	addu	v0,v0,t0
9d003354:	0048402b 	sltu	t0,v0,t0
9d003358:	15000004 	bnez	t0,9d00336c <.LBB16+0xac>
9d00335c:	24c4ffff 	addiu	a0,a2,-1
9d003360:	004b582b 	sltu	t3,v0,t3
9d003364:	24c6fffe 	addiu	a2,a2,-2
9d003368:	00cb200b 	movn	a0,a2,t3
9d00336c:	00091400 	sll	v0,t1,0x10

9d003370 <.LBE16>:
9d003370:	03e00008 	jr	ra
9d003374:	00821025 	or	v0,a0,v0
9d003378:	00001821 	move	v1,zero
9d00337c:	03e00008 	jr	ra
9d003380:	00001021 	move	v0,zero
9d003384:	00481023 	subu	v0,v0,t0
9d003388:	01073804 	sllv	a3,a3,t0
9d00338c:	00461806 	srlv	v1,a2,v0
9d003390:	00673825 	or	a3,v1,a3
9d003394:	00455006 	srlv	t2,a1,v0
9d003398:	00071c02 	srl	v1,a3,0x10
9d00339c:	0143001b 	divu	zero,t2,v1
9d0033a0:	006001f4 	teq	v1,zero,0x7
9d0033a4:	00004810 	mfhi	t1
9d0033a8:	00006812 	mflo	t5
9d0033ac:	30ebffff 	andi	t3,a3,0xffff
9d0033b0:	01052804 	sllv	a1,a1,t0
9d0033b4:	00441006 	srlv	v0,a0,v0
9d0033b8:	00452825 	or	a1,v0,a1
9d0033bc:	00057402 	srl	t6,a1,0x10
9d0033c0:	00001012 	mflo	v0
9d0033c4:	71ab6002 	mul	t4,t5,t3
9d0033c8:	00094c00 	sll	t1,t1,0x10
9d0033cc:	012e4825 	or	t1,t1,t6
9d0033d0:	012c702b 	sltu	t6,t1,t4
9d0033d4:	0143001b 	divu	zero,t2,v1
9d0033d8:	006001f4 	teq	v1,zero,0x7
9d0033dc:	11c0000a 	beqz	t6,9d003408 <.LBE16+0x98>
9d0033e0:	01063004 	sllv	a2,a2,t0
9d0033e4:	01274821 	addu	t1,t1,a3
9d0033e8:	0127502b 	sltu	t2,t1,a3
9d0033ec:	15400006 	bnez	t2,9d003408 <.LBE16+0x98>
9d0033f0:	25a2ffff 	addiu	v0,t5,-1
9d0033f4:	012c502b 	sltu	t2,t1,t4
9d0033f8:	51400004 	beqzl	t2,9d00340c <.LBE16+0x9c>
9d0033fc:	012c4823 	subu	t1,t1,t4
9d003400:	25a2fffe 	addiu	v0,t5,-2
9d003404:	01274821 	addu	t1,t1,a3
9d003408:	012c4823 	subu	t1,t1,t4
9d00340c:	30a5ffff 	andi	a1,a1,0xffff
9d003410:	0123001b 	divu	zero,t1,v1
9d003414:	006001f4 	teq	v1,zero,0x7
9d003418:	00006810 	mfhi	t5
9d00341c:	00006012 	mflo	t4
9d003420:	00005012 	mflo	t2
9d003424:	718b5802 	mul	t3,t4,t3
9d003428:	000d6c00 	sll	t5,t5,0x10
9d00342c:	01a52825 	or	a1,t5,a1
9d003430:	00ab682b 	sltu	t5,a1,t3
9d003434:	0123001b 	divu	zero,t1,v1
9d003438:	006001f4 	teq	v1,zero,0x7
9d00343c:	51a0000b 	beqzl	t5,9d00346c <.LBE16+0xfc>
9d003440:	00021400 	sll	v0,v0,0x10
9d003444:	00a72821 	addu	a1,a1,a3
9d003448:	00a7182b 	sltu	v1,a1,a3
9d00344c:	14600006 	bnez	v1,9d003468 <.LBE16+0xf8>
9d003450:	258affff 	addiu	t2,t4,-1
9d003454:	00ab182b 	sltu	v1,a1,t3
9d003458:	50600004 	beqzl	v1,9d00346c <.LBE16+0xfc>
9d00345c:	00021400 	sll	v0,v0,0x10
9d003460:	258afffe 	addiu	t2,t4,-2
9d003464:	00a72821 	addu	a1,a1,a3
9d003468:	00021400 	sll	v0,v0,0x10
9d00346c:	01421025 	or	v0,t2,v0
9d003470:	00ab2823 	subu	a1,a1,t3

9d003474 <.LBB20>:
9d003474:	00460019 	multu	v0,a2
9d003478:	00003810 	mfhi	a3

9d00347c <.LBE20>:
9d00347c:	00a7182b 	sltu	v1,a1,a3
9d003480:	14600044 	bnez	v1,9d003594 <.LBE20+0x118>
9d003484:	00003012 	mflo	a2
9d003488:	10a7003f 	beq	a1,a3,9d003588 <.LBE20+0x10c>
9d00348c:	01042004 	sllv	a0,a0,t0
9d003490:	03e00008 	jr	ra
9d003494:	00001821 	move	v1,zero
9d003498:	24020020 	li	v0,32
9d00349c:	00431023 	subu	v0,v0,v1
9d0034a0:	00454806 	srlv	t1,a1,v0
9d0034a4:	00083c02 	srl	a3,t0,0x10
9d0034a8:	0127001b 	divu	zero,t1,a3
9d0034ac:	00e001f4 	teq	a3,zero,0x7
9d0034b0:	00003010 	mfhi	a2
9d0034b4:	00006012 	mflo	t4
9d0034b8:	310bffff 	andi	t3,t0,0xffff
9d0034bc:	00652804 	sllv	a1,a1,v1
9d0034c0:	00441006 	srlv	v0,a0,v0
9d0034c4:	00452825 	or	a1,v0,a1
9d0034c8:	00056c02 	srl	t5,a1,0x10
9d0034cc:	00641004 	sllv	v0,a0,v1
9d0034d0:	00001812 	mflo	v1
9d0034d4:	718b5002 	mul	t2,t4,t3
9d0034d8:	00063400 	sll	a2,a2,0x10
9d0034dc:	01a63025 	or	a2,t5,a2
9d0034e0:	00ca202b 	sltu	a0,a2,t2
9d0034e4:	0127001b 	divu	zero,t1,a3
9d0034e8:	00e001f4 	teq	a3,zero,0x7
9d0034ec:	5080000b 	beqzl	a0,9d00351c <.LBE20+0xa0>
9d0034f0:	00ca3023 	subu	a2,a2,t2
9d0034f4:	00c83021 	addu	a2,a2,t0
9d0034f8:	00c8202b 	sltu	a0,a2,t0
9d0034fc:	14800006 	bnez	a0,9d003518 <.LBE20+0x9c>
9d003500:	2583ffff 	addiu	v1,t4,-1
9d003504:	00ca202b 	sltu	a0,a2,t2
9d003508:	50800004 	beqzl	a0,9d00351c <.LBE20+0xa0>
9d00350c:	00ca3023 	subu	a2,a2,t2
9d003510:	2583fffe 	addiu	v1,t4,-2
9d003514:	00c83021 	addu	a2,a2,t0
9d003518:	00ca3023 	subu	a2,a2,t2
9d00351c:	30acffff 	andi	t4,a1,0xffff
9d003520:	00c7001b 	divu	zero,a2,a3
9d003524:	00e001f4 	teq	a3,zero,0x7
9d003528:	00002010 	mfhi	a0
9d00352c:	00005012 	mflo	t2
9d003530:	00004812 	mflo	t1
9d003534:	714b2802 	mul	a1,t2,t3
9d003538:	00042400 	sll	a0,a0,0x10
9d00353c:	008c2025 	or	a0,a0,t4
9d003540:	0085602b 	sltu	t4,a0,a1
9d003544:	00c7001b 	divu	zero,a2,a3
9d003548:	00e001f4 	teq	a3,zero,0x7
9d00354c:	5180000b 	beqzl	t4,9d00357c <.LBE20+0x100>
9d003550:	00031c00 	sll	v1,v1,0x10
9d003554:	00882021 	addu	a0,a0,t0
9d003558:	0088302b 	sltu	a2,a0,t0
9d00355c:	14c00006 	bnez	a2,9d003578 <.LBE20+0xfc>
9d003560:	2549ffff 	addiu	t1,t2,-1
9d003564:	0085302b 	sltu	a2,a0,a1
9d003568:	50c00004 	beqzl	a2,9d00357c <.LBE20+0x100>
9d00356c:	00031c00 	sll	v1,v1,0x10
9d003570:	2549fffe 	addiu	t1,t2,-2
9d003574:	00882021 	addu	a0,a0,t0
9d003578:	00031c00 	sll	v1,v1,0x10
9d00357c:	00852023 	subu	a0,a0,a1
9d003580:	0b400cb0 	j	9d0032c0 <.LBB16>
9d003584:	01231825 	or	v1,t1,v1
9d003588:	0086302b 	sltu	a2,a0,a2
9d00358c:	10c0ffc0 	beqz	a2,9d003490 <.LBE20+0x14>
9d003590:	00000000 	nop
9d003594:	0b400d24 	j	9d003490 <.LBE20+0x14>
9d003598:	2442ffff 	addiu	v0,v0,-1
9d00359c:	00001821 	move	v1,zero
9d0035a0:	03e00008 	jr	ra
9d0035a4:	24020001 	li	v0,1
9d0035a8:	0b400cc5 	j	9d003314 <.LBB16+0x54>
9d0035ac:	00c83021 	addu	a2,a2,t0

9d0035b0 <waitPMP>:

// wait for the peripheral master port (PMP) to be ready
// should be called before every read and write operation
static void waitPMP(void)
{
  while(PMMODEbits.BUSY) { ; }
9d0035b0:	3c03bf80 	lui	v1,0xbf80
9d0035b4:	8c627010 	lw	v0,28688(v1)
9d0035b8:	30428000 	andi	v0,v0,0x8000
9d0035bc:	1440fffd 	bnez	v0,9d0035b4 <waitPMP+0x4>
9d0035c0:	00000000 	nop
}
9d0035c4:	03e00008 	jr	ra
9d0035c8:	00000000 	nop

9d0035cc <LCD_Read>:
  PMDIN = data;        // send the data
}

// read data from the LCD.  
// rs : the value of the RS signal 0 for instructions status, 1 for data
unsigned char LCD_Read(int rs) {
9d0035cc:	27bdffe0 	addiu	sp,sp,-32
9d0035d0:	afbf001c 	sw	ra,28(sp)
9d0035d4:	afb00018 	sw	s0,24(sp)
  volatile unsigned char val = 0; // volatile so 1st read doesn't get optimized away
9d0035d8:	a3a00010 	sb	zero,16(sp)
  if(rs) { // 1 to read data
9d0035dc:	10800005 	beqz	a0,9d0035f4 <LCD_Read+0x28>
9d0035e0:	24030400 	li	v1,1024
    PMADDRSET = 1 << PMABIT;
9d0035e4:	3c02bf80 	lui	v0,0xbf80
9d0035e8:	ac437028 	sw	v1,28712(v0)
9d0035ec:	0b400d7f 	j	9d0035fc <LCD_Read+0x30>
9d0035f0:	00000000 	nop
  } else { // 0 to read command status
    PMADDRCLR = 1 << PMABIT;
9d0035f4:	3c02bf80 	lui	v0,0xbf80
9d0035f8:	ac437024 	sw	v1,28708(v0)
  }
  // from the PIC32 reference manual, you must read twice to actually get the data
  waitPMP();                  // wait for the PMP to be ready
9d0035fc:	0f400d6c 	jal	9d0035b0 <waitPMP>
9d003600:	3c10bf80 	lui	s0,0xbf80

9d003604 <.LVL1>:
  val = PMDIN;
9d003604:	8e027040 	lw	v0,28736(s0)
9d003608:	304200ff 	andi	v0,v0,0xff
9d00360c:	a3a20010 	sb	v0,16(sp)
  waitPMP();
9d003610:	0f400d6c 	jal	9d0035b0 <waitPMP>
9d003614:	00000000 	nop

9d003618 <.LVL2>:
  val = PMDIN;
9d003618:	8e027040 	lw	v0,28736(s0)
9d00361c:	304200ff 	andi	v0,v0,0xff
9d003620:	a3a20010 	sb	v0,16(sp)
  return val;
9d003624:	93a20010 	lbu	v0,16(sp)
}
9d003628:	304200ff 	andi	v0,v0,0xff
9d00362c:	8fbf001c 	lw	ra,28(sp)
9d003630:	8fb00018 	lw	s0,24(sp)
9d003634:	03e00008 	jr	ra
9d003638:	27bd0020 	addiu	sp,sp,32

9d00363c <LCD_Write>:
}

// Write data to the LCD and wait for it to finish by checking the busy flag. 
// rs : the value of the RS signal, 0 for an instruction 1 for data
// data : the byte to send
void LCD_Write(int rs, unsigned char data) {
9d00363c:	27bdffd8 	addiu	sp,sp,-40
9d003640:	afbf0024 	sw	ra,36(sp)
9d003644:	afb10020 	sw	s1,32(sp)
9d003648:	afb0001c 	sw	s0,28(sp)
9d00364c:	00808021 	move	s0,a0
9d003650:	00a08821 	move	s1,a1

9d003654 <.LBB4>:
}

// wait for the LCD to finish its command.
// We check this by reading from the LCD
static void waitLCD() {
  volatile unsigned char val = 0x80;
9d003654:	2402ff80 	li	v0,-128
9d003658:	a3a20010 	sb	v0,16(sp)
  
  // Read from the LCD until the Busy flag (BF, 7th bit) is 0
  while (val & 0x80) {
9d00365c:	93a20010 	lbu	v0,16(sp)
9d003660:	7c021420 	seb	v0,v0
9d003664:	04410008 	bgez	v0,9d003688 <.LVL5+0x14>
9d003668:	24020032 	li	v0,50
    val = LCD_Read(0);
9d00366c:	0f400d73 	jal	9d0035cc <LCD_Read>
9d003670:	00002021 	move	a0,zero

9d003674 <.LVL5>:
9d003674:	a3a20010 	sb	v0,16(sp)
// We check this by reading from the LCD
static void waitLCD() {
  volatile unsigned char val = 0x80;
  
  // Read from the LCD until the Busy flag (BF, 7th bit) is 0
  while (val & 0x80) {
9d003678:	93a20010 	lbu	v0,16(sp)
9d00367c:	7c021420 	seb	v0,v0
9d003680:	0440fffa 	bltz	v0,9d00366c <.LBB4+0x18>
9d003684:	24020032 	li	v0,50
    val = LCD_Read(0);
  }
  int i = 0;
  for(i = 0; i < 50; ++i) { // slight delay
    _nop();
9d003688:	00000040 	ssnop
9d00368c:	2442ffff 	addiu	v0,v0,-1
  // Read from the LCD until the Busy flag (BF, 7th bit) is 0
  while (val & 0x80) {
    val = LCD_Read(0);
  }
  int i = 0;
  for(i = 0; i < 50; ++i) { // slight delay
9d003690:	1440fffd 	bnez	v0,9d003688 <.LVL5+0x14>
9d003694:	00000000 	nop

9d003698 <.LBE4>:
// Write data to the LCD and wait for it to finish by checking the busy flag. 
// rs : the value of the RS signal, 0 for an instruction 1 for data
// data : the byte to send
void LCD_Write(int rs, unsigned char data) {
  waitLCD();           // wait for the LCD to be ready
  if(rs) { // 1 for data
9d003698:	12000004 	beqz	s0,9d0036ac <.LBE4+0x14>
9d00369c:	24030400 	li	v1,1024
    PMADDRSET = 1 << PMABIT;
9d0036a0:	3c02bf80 	lui	v0,0xbf80
9d0036a4:	0b400dad 	j	9d0036b4 <.LBE4+0x1c>
9d0036a8:	ac437028 	sw	v1,28712(v0)
  } else { // 0 for command
    PMADDRCLR = 1 << PMABIT; 
9d0036ac:	3c02bf80 	lui	v0,0xbf80
9d0036b0:	ac437024 	sw	v1,28708(v0)
  }
  waitPMP();           // Wait for the PMP to be ready
9d0036b4:	0f400d6c 	jal	9d0035b0 <waitPMP>
9d0036b8:	00000000 	nop

9d0036bc <.LVL12>:
  PMDIN = data;        // send the data
9d0036bc:	3c02bf80 	lui	v0,0xbf80
9d0036c0:	ac517040 	sw	s1,28736(v0)
}
9d0036c4:	0b400db3 	j	9d0036cc <.LVL12+0x10>
9d0036c8:	8fbf0024 	lw	ra,36(sp)
9d0036cc:	8fb10020 	lw	s1,32(sp)
9d0036d0:	8fb0001c 	lw	s0,28(sp)
9d0036d4:	03e00008 	jr	ra
9d0036d8:	27bd0028 	addiu	sp,sp,40

9d0036dc <LCD_Clear>:
    __builtin_enable_interrupts();
  }
}

// Clears the display and returns to the home position (0,0)
void LCD_Clear(void) {
9d0036dc:	27bdffe8 	addiu	sp,sp,-24
9d0036e0:	afbf0014 	sw	ra,20(sp)
  LCD_Write(0,0x01); //clear the whole screen
9d0036e4:	00002021 	move	a0,zero
9d0036e8:	0f400d8f 	jal	9d00363c <LCD_Write>
9d0036ec:	24050001 	li	a1,1

9d0036f0 <.LVL15>:
}
9d0036f0:	8fbf0014 	lw	ra,20(sp)
9d0036f4:	03e00008 	jr	ra
9d0036f8:	27bd0018 	addiu	sp,sp,24

9d0036fc <LCD_Home>:

// Return the cursor and display to the home position (0,0)
void LCD_Home(void) {
9d0036fc:	27bdffe8 	addiu	sp,sp,-24
9d003700:	afbf0014 	sw	ra,20(sp)
  LCD_Write(0,0x02);
9d003704:	00002021 	move	a0,zero
9d003708:	0f400d8f 	jal	9d00363c <LCD_Write>
9d00370c:	24050002 	li	a1,2

9d003710 <.LVL16>:
}
9d003710:	8fbf0014 	lw	ra,20(sp)
9d003714:	03e00008 	jr	ra
9d003718:	27bd0018 	addiu	sp,sp,24

9d00371c <LCD_Entry>:

// Issue the LCD entry mode set command
// This tells the LCD what to do after writing a character
// id : 1 increment cursor, 0 decrement cursor
// s : 1 shift display right, 0 don't shift display
void LCD_Entry(int id, int s) {
9d00371c:	27bdffe8 	addiu	sp,sp,-24
9d003720:	afbf0014 	sw	ra,20(sp)
  LCD_Write(0, 0x04 | (id << 1) | s);
9d003724:	34a50004 	ori	a1,a1,0x4
9d003728:	00042040 	sll	a0,a0,0x1
9d00372c:	00a42825 	or	a1,a1,a0
9d003730:	00002021 	move	a0,zero
9d003734:	0f400d8f 	jal	9d00363c <LCD_Write>
9d003738:	30a500ff 	andi	a1,a1,0xff

9d00373c <.LVL20>:
}
9d00373c:	8fbf0014 	lw	ra,20(sp)
9d003740:	03e00008 	jr	ra
9d003744:	27bd0018 	addiu	sp,sp,24

9d003748 <LCD_Display>:
// Issue the LCD Display command
// Changes display settings
// d : 1 display on, 0 display off
// c : 1 cursor on, 0 cursor off
// b : 1 cursor blinks, 0 cursor doesn't blink
void LCD_Display(int d, int c, int b) {
9d003748:	27bdffe8 	addiu	sp,sp,-24
9d00374c:	afbf0014 	sw	ra,20(sp)
  LCD_Write(0, 0x08 | (d << 2) | (c << 1) | b);
9d003750:	34c60008 	ori	a2,a2,0x8
9d003754:	00052840 	sll	a1,a1,0x1
9d003758:	00c53025 	or	a2,a2,a1
9d00375c:	00042080 	sll	a0,a0,0x2
9d003760:	00c42825 	or	a1,a2,a0
9d003764:	00002021 	move	a0,zero
9d003768:	0f400d8f 	jal	9d00363c <LCD_Write>
9d00376c:	30a500ff 	andi	a1,a1,0xff

9d003770 <.LVL25>:
}
9d003770:	8fbf0014 	lw	ra,20(sp)
9d003774:	03e00008 	jr	ra
9d003778:	27bd0018 	addiu	sp,sp,24

9d00377c <LCD_Shift>:

// Issue the LCD display shift command
// Move the cursor or the display right or left
// sc : 0 shift cursor, 1 shift display
// rl : 0 to the left, 1 to the right
void LCD_Shift(int sc, int rl) {
9d00377c:	27bdffe8 	addiu	sp,sp,-24
9d003780:	afbf0014 	sw	ra,20(sp)
  LCD_Write(0,0x1 | (sc << 3) | (rl << 2));
9d003784:	00052880 	sll	a1,a1,0x2
9d003788:	34a50001 	ori	a1,a1,0x1
9d00378c:	000420c0 	sll	a0,a0,0x3
9d003790:	00a42825 	or	a1,a1,a0
9d003794:	00002021 	move	a0,zero
9d003798:	0f400d8f 	jal	9d00363c <LCD_Write>
9d00379c:	30a500fd 	andi	a1,a1,0xfd

9d0037a0 <.LVL29>:
}
9d0037a0:	8fbf0014 	lw	ra,20(sp)
9d0037a4:	03e00008 	jr	ra
9d0037a8:	27bd0018 	addiu	sp,sp,24

9d0037ac <LCD_Function>:
// Issue the LCD Functions set command
// This controls some LCD settings
// You may want to clear the screen after calling this
// n : 0 one line, 1 two lines
// f : 0 small font, 1 large font (only if n == 0)
void LCD_Function(int n, int f) {
9d0037ac:	27bdffe8 	addiu	sp,sp,-24
9d0037b0:	afbf0014 	sw	ra,20(sp)
  LCD_Write(0, 0x30 | (n << 3) | (f << 2));
9d0037b4:	00052880 	sll	a1,a1,0x2
9d0037b8:	34a50030 	ori	a1,a1,0x30
9d0037bc:	000420c0 	sll	a0,a0,0x3
9d0037c0:	00a42825 	or	a1,a1,a0
9d0037c4:	00002021 	move	a0,zero
9d0037c8:	0f400d8f 	jal	9d00363c <LCD_Write>
9d0037cc:	30a500fc 	andi	a1,a1,0xfc

9d0037d0 <.LVL33>:
}
9d0037d0:	8fbf0014 	lw	ra,20(sp)
9d0037d4:	03e00008 	jr	ra
9d0037d8:	27bd0018 	addiu	sp,sp,24

9d0037dc <LCD_Move>:

// Move the cursor to the desired line and column
// Does this by issuing a DDRAM Move instruction
// line : line 0 or line 1
// col  : the desired column
void LCD_Move(int line, int col) {
9d0037dc:	27bdffe8 	addiu	sp,sp,-24
9d0037e0:	afbf0014 	sw	ra,20(sp)
  LCD_Write(0, 0x80 | (line << 6) | col);
9d0037e4:	2402ff80 	li	v0,-128
9d0037e8:	00a22825 	or	a1,a1,v0
9d0037ec:	00042180 	sll	a0,a0,0x6
9d0037f0:	00a42825 	or	a1,a1,a0
9d0037f4:	00002021 	move	a0,zero
9d0037f8:	0f400d8f 	jal	9d00363c <LCD_Write>
9d0037fc:	30a500ff 	andi	a1,a1,0xff

9d003800 <.LVL37>:
}
9d003800:	8fbf0014 	lw	ra,20(sp)
9d003804:	03e00008 	jr	ra
9d003808:	27bd0018 	addiu	sp,sp,24

9d00380c <LCD_CMove>:

// Sets the CGRAM address, used for creating custom
// characters
// addr address in the CGRAM to make current
void LCD_CMove(unsigned char addr) {
9d00380c:	27bdffe8 	addiu	sp,sp,-24
9d003810:	afbf0014 	sw	ra,20(sp)
  LCD_Write(0, 0x40 | addr);
9d003814:	34850040 	ori	a1,a0,0x40
9d003818:	0f400d8f 	jal	9d00363c <LCD_Write>
9d00381c:	00002021 	move	a0,zero

9d003820 <.LVL40>:
}
9d003820:	8fbf0014 	lw	ra,20(sp)
9d003824:	03e00008 	jr	ra
9d003828:	27bd0018 	addiu	sp,sp,24

9d00382c <LCD_WriteChar>:

// Writes the character to the LCD at the current position
void LCD_WriteChar(char c) {         
9d00382c:	27bdffe8 	addiu	sp,sp,-24
9d003830:	afbf0014 	sw	ra,20(sp)
  LCD_Write(1, c); 
9d003834:	308500ff 	andi	a1,a0,0xff
9d003838:	0f400d8f 	jal	9d00363c <LCD_Write>
9d00383c:	24040001 	li	a0,1

9d003840 <.LVL43>:
}
9d003840:	8fbf0014 	lw	ra,20(sp)
9d003844:	03e00008 	jr	ra
9d003848:	27bd0018 	addiu	sp,sp,24

9d00384c <LCD_WriteString>:

// Write a string to the LCD starting at the current cursor
void LCD_WriteString(const char *str) {
9d00384c:	27bdffe8 	addiu	sp,sp,-24
9d003850:	afbf0014 	sw	ra,20(sp)
9d003854:	afb00010 	sw	s0,16(sp)
9d003858:	00808021 	move	s0,a0
  while(*str) {
9d00385c:	80840000 	lb	a0,0(a0)
9d003860:	10800006 	beqz	a0,9d00387c <.LVL46+0xc>
9d003864:	8fbf0014 	lw	ra,20(sp)
    LCD_WriteChar(*str); // increment string pointer after char sent
9d003868:	0f400e0b 	jal	9d00382c <LCD_WriteChar>
9d00386c:	26100001 	addiu	s0,s0,1

9d003870 <.LVL46>:
  LCD_Write(1, c); 
}

// Write a string to the LCD starting at the current cursor
void LCD_WriteString(const char *str) {
  while(*str) {
9d003870:	82040000 	lb	a0,0(s0)
9d003874:	1480fffc 	bnez	a0,9d003868 <LCD_WriteString+0x1c>
9d003878:	8fbf0014 	lw	ra,20(sp)
    LCD_WriteChar(*str); // increment string pointer after char sent
    ++str;
  }
}
9d00387c:	8fb00010 	lw	s0,16(sp)
9d003880:	03e00008 	jr	ra
9d003884:	27bd0018 	addiu	sp,sp,24

9d003888 <LCD_CustomChar>:
// Make val a custom character.  This only implements 
// The small font version
// val : between 0 and 7
// data : 7 character array.  The first 5 bits of each character
//        determine whether that pixel is on or off
void LCD_CustomChar(unsigned char val, const char * data) {
9d003888:	27bdffd8 	addiu	sp,sp,-40
9d00388c:	afbf0024 	sw	ra,36(sp)
9d003890:	afb30020 	sw	s3,32(sp)
9d003894:	afb2001c 	sw	s2,28(sp)
9d003898:	afb10018 	sw	s1,24(sp)
9d00389c:	afb00014 	sw	s0,20(sp)
9d0038a0:	00a09821 	move	s3,a1
  int i = 0;
  for(i = 0; i < 7; ++i) {
    LCD_CMove(((val & 7) << 2) | i);
9d0038a4:	30840007 	andi	a0,a0,0x7
9d0038a8:	00049080 	sll	s2,a0,0x2
// val : between 0 and 7
// data : 7 character array.  The first 5 bits of each character
//        determine whether that pixel is on or off
void LCD_CustomChar(unsigned char val, const char * data) {
  int i = 0;
  for(i = 0; i < 7; ++i) {
9d0038ac:	00008021 	move	s0,zero
9d0038b0:	24110007 	li	s1,7
    LCD_CMove(((val & 7) << 2) | i);
9d0038b4:	02502025 	or	a0,s2,s0
9d0038b8:	0f400e03 	jal	9d00380c <LCD_CMove>
9d0038bc:	308400ff 	andi	a0,a0,0xff

9d0038c0 <.LVL52>:
9d0038c0:	02701021 	addu	v0,s3,s0
    LCD_Write(1, data[i]);
9d0038c4:	24040001 	li	a0,1
9d0038c8:	0f400d8f 	jal	9d00363c <LCD_Write>
9d0038cc:	90450000 	lbu	a1,0(v0)

9d0038d0 <.LVL53>:
// val : between 0 and 7
// data : 7 character array.  The first 5 bits of each character
//        determine whether that pixel is on or off
void LCD_CustomChar(unsigned char val, const char * data) {
  int i = 0;
  for(i = 0; i < 7; ++i) {
9d0038d0:	26100001 	addiu	s0,s0,1
9d0038d4:	1611fff8 	bne	s0,s1,9d0038b8 <LCD_CustomChar+0x30>
9d0038d8:	02502025 	or	a0,s2,s0
    LCD_CMove(((val & 7) << 2) | i);
    LCD_Write(1, data[i]);
  }
}
9d0038dc:	8fbf0024 	lw	ra,36(sp)
9d0038e0:	8fb30020 	lw	s3,32(sp)
9d0038e4:	8fb2001c 	lw	s2,28(sp)
9d0038e8:	8fb10018 	lw	s1,24(sp)
9d0038ec:	8fb00014 	lw	s0,20(sp)
9d0038f0:	03e00008 	jr	ra
9d0038f4:	27bd0028 	addiu	sp,sp,40

9d0038f8 <LCD_Setup>:
// pins RE0 - RE7 (PMD0 - PMD7) connect to LCD pins D0 - D7
// pin RD4 (PMENB) connects to LCD pin E
// pin RD5 (PMRD/PMWR) Connects to LCD pin R/W
// pin RB13 (PMA10) Connects to RS.
// interrupts will be disabled while this function executes
void LCD_Setup() {
9d0038f8:	27bdffe8 	addiu	sp,sp,-24
9d0038fc:	afbf0014 	sw	ra,20(sp)
9d003900:	afb00010 	sw	s0,16(sp)
  int en = __builtin_disable_interrupts();  // disable interrupts, remember initial state
9d003904:	41706000 	di	s0
9d003908:	000000c0 	ehb
  
  IEC1bits.PMPIE = 0;    // disable PMP interrupts
9d00390c:	3c02bf88 	lui	v0,0xbf88
9d003910:	8c431070 	lw	v1,4208(v0)
9d003914:	7c031084 	ins	v1,zero,0x2,0x1
9d003918:	ac431070 	sw	v1,4208(v0)
  PMCON = 0;             // clear PMCON, like it is on reset
9d00391c:	3c02bf80 	lui	v0,0xbf80
9d003920:	ac407000 	sw	zero,28672(v0)
  PMCONbits.PTWREN = 1;  // PMENB strobe enabled
9d003924:	3c02bf80 	lui	v0,0xbf80
9d003928:	94437000 	lhu	v1,28672(v0)
9d00392c:	24040001 	li	a0,1
9d003930:	7c834a44 	ins	v1,a0,0x9,0x1
9d003934:	a4437000 	sh	v1,28672(v0)
  PMCONbits.PTRDEN = 1;  // PMRD/PMWR enabled
9d003938:	94437000 	lhu	v1,28672(v0)
9d00393c:	7c834204 	ins	v1,a0,0x8,0x1
9d003940:	a4437000 	sh	v1,28672(v0)
  PMCONbits.WRSP = 1;    // Read/write strobe is active high
9d003944:	94437000 	lhu	v1,28672(v0)
9d003948:	7c830844 	ins	v1,a0,0x1,0x1
9d00394c:	a4437000 	sh	v1,28672(v0)
  PMCONbits.RDSP = 1;    // Read/write strobe is active high
9d003950:	94437000 	lhu	v1,28672(v0)
9d003954:	7c830004 	ins	v1,a0,0x0,0x1
9d003958:	a4437000 	sh	v1,28672(v0)

  PMMODE = 0;            // clear PMMODE like it is on reset
9d00395c:	3c03bf80 	lui	v1,0xbf80
9d003960:	ac607010 	sw	zero,28688(v1)
  PMMODEbits.MODE = 0x3; // set master mode 1, which uses a single strobe
9d003964:	3c03bf80 	lui	v1,0xbf80
9d003968:	94657010 	lhu	a1,28688(v1)
9d00396c:	24060003 	li	a2,3
9d003970:	7cc54a04 	ins	a1,a2,0x8,0x2
9d003974:	a4657010 	sh	a1,28688(v1)
  // The cycle is started when reading from or writing to the PMDIN SFR.
  // Note that the wait states for writes start with minimum of 1 (except WAITE)
  // We add some extra wait states to make sure we meet the time and
  // account for variations in timing amongst different HD44780 compatible parts.
  // The timing we use here is for the KS066U which is faster than the HD44780.
  PMMODEbits.WAITB = 0x3;  // Tas in the LCD datasheet is 60 ns 
9d003978:	94657010 	lhu	a1,28688(v1)
9d00397c:	7cc53984 	ins	a1,a2,0x6,0x2
9d003980:	a4657010 	sh	a1,28688(v1)
  PMMODEbits.WAITM = 0xF;  // PWeh in the data sheet is 230 ns (we don't quite meet this)
9d003984:	94657010 	lhu	a1,28688(v1)
9d003988:	2406000f 	li	a2,15
9d00398c:	7cc52884 	ins	a1,a2,0x2,0x4
9d003990:	a4657010 	sh	a1,28688(v1)
                           // If not working for your LCD you may need to reduce PBCLK
  PMMODEbits.WAITE = 0x1;  // after E is low wait Tah (10ns)
9d003994:	94657010 	lhu	a1,28688(v1)
9d003998:	7c850804 	ins	a1,a0,0x0,0x2
9d00399c:	a4657010 	sh	a1,28688(v1)

  PMAEN |= 1 << PMABIT;   // PMA is an address line
9d0039a0:	3c03bf80 	lui	v1,0xbf80
9d0039a4:	8c657050 	lw	a1,28752(v1)
9d0039a8:	34a50400 	ori	a1,a1,0x400
9d0039ac:	ac657050 	sw	a1,28752(v1)
  
  PMCONbits.ON = 1;        // enable the PMP peripheral
9d0039b0:	94437000 	lhu	v1,28672(v0)
9d0039b4:	7c837bc4 	ins	v1,a0,0xf,0x1
9d0039b8:	a4437000 	sh	v1,28672(v0)

9d0039bc <.LBB12>:
// This controls some LCD settings
// You may want to clear the screen after calling this
// n : 0 one line, 1 two lines
// f : 0 small font, 1 large font (only if n == 0)
void LCD_Function(int n, int f) {
  LCD_Write(0, 0x30 | (n << 3) | (f << 2));
9d0039bc:	00002021 	move	a0,zero
9d0039c0:	0f400d8f 	jal	9d00363c <LCD_Write>
9d0039c4:	24050038 	li	a1,56

9d0039c8 <.LBB14>:
// Changes display settings
// d : 1 display on, 0 display off
// c : 1 cursor on, 0 cursor off
// b : 1 cursor blinks, 0 cursor doesn't blink
void LCD_Display(int d, int c, int b) {
  LCD_Write(0, 0x08 | (d << 2) | (c << 1) | b);
9d0039c8:	00002021 	move	a0,zero
9d0039cc:	0f400d8f 	jal	9d00363c <LCD_Write>
9d0039d0:	2405000c 	li	a1,12

9d0039d4 <.LBE14>:
  
  PMCONbits.ON = 1;        // enable the PMP peripheral
  // perform the initialization sequence
  LCD_Function(1,0);       // 2 line mode, small font
  LCD_Display(1, 0, 0);    // Display control: display on, cursor off, blinking cursor off
  LCD_Clear();             // clear the LCD 
9d0039d4:	0f400db7 	jal	9d0036dc <LCD_Clear>
9d0039d8:	32100001 	andi	s0,s0,0x1

9d0039dc <.LBB16>:
// Issue the LCD entry mode set command
// This tells the LCD what to do after writing a character
// id : 1 increment cursor, 0 decrement cursor
// s : 1 shift display right, 0 don't shift display
void LCD_Entry(int id, int s) {
  LCD_Write(0, 0x04 | (id << 1) | s);
9d0039dc:	00002021 	move	a0,zero
9d0039e0:	0f400d8f 	jal	9d00363c <LCD_Write>
9d0039e4:	24050006 	li	a1,6

9d0039e8 <.LBE16>:
  LCD_Function(1,0);       // 2 line mode, small font
  LCD_Display(1, 0, 0);    // Display control: display on, cursor off, blinking cursor off
  LCD_Clear();             // clear the LCD 
  LCD_Entry(1, 0);         // Cursor moves left to right. do not shift the display
  
  if(en & 0x1)             // if interrupts were enabled before, re-enable them
9d0039e8:	12000003 	beqz	s0,9d0039f8 <.LBE16+0x10>
9d0039ec:	8fbf0014 	lw	ra,20(sp)
  {
    __builtin_enable_interrupts();
9d0039f0:	41626020 	ei	v0
  }
}
9d0039f4:	8fbf0014 	lw	ra,20(sp)
9d0039f8:	8fb00010 	lw	s0,16(sp)
9d0039fc:	03e00008 	jr	ra
9d003a00:	27bd0018 	addiu	sp,sp,24

Disassembly of section .text.dp32subadd:

9d003a04 <__subdf3>:
9d003a04:	3c018000 00e13826                       ...<&8..

9d003a0c <__adddf3>:
9d003a0c:	00055840 000b5d42 000552c0 00047d42     @X..B]...R..B}..
9d003a1c:	014f5025 00044ac0 3c088000 01485025     %PO..J.....<%PH.
9d003a2c:	00077040 000e7542 00076ac0 00067d42     @p..Bu...j..B}..
9d003a3c:	01af6825 000662c0 01a86825 256fffff     %h...b..%h....o%
9d003a4c:	2de107fe 1020008d 00000000              ...-.. .....

9d003a58 <Blab1>:
9d003a58:	25cfffff 	addiu	t7,t6,-1
9d003a5c:	2de107fe 	sltiu	at,t7,2046
9d003a60:	102000bb 	beqz	at,9d003d50 <BspecB>
9d003a64:	00000000 	nop

9d003a68 <Blab2>:
9d003a68:	3c018000 	lui	at,0x8000
9d003a6c:	00a12824 	and	a1,a1,at
9d003a70:	016e4023 	subu	t0,t3,t6
9d003a74:	1100002c 	beqz	t0,9d003b28 <Badd3>
9d003a78:	00000000 	nop
9d003a7c:	19000015 	blez	t0,9d003ad4 <i1>
9d003a80:	00000000 	nop

9d003a84 <L1>:
9d003a84:	2d010020 	sltiu	at,t0,32
9d003a88:	14200007 	bnez	at,9d003aa8 <L2>
9d003a8c:	00000000 	nop
9d003a90:	2108ffe0 	addi	t0,t0,-32
9d003a94:	000c302b 	sltu	a2,zero,t4
9d003a98:	100d0023 	beq	zero,t5,9d003b28 <Badd3>
9d003a9c:	01a66025 	or	t4,t5,a2
9d003aa0:	1000fff8 	b	9d003a84 <L1>
9d003aa4:	340d0000 	li	t5,0x0

9d003aa8 <L2>:
9d003aa8:	1100001f 	beqz	t0,9d003b28 <Badd3>
9d003aac:	00000000 	nop
9d003ab0:	00082022 	neg	a0,t0
9d003ab4:	008c3004 	sllv	a2,t4,a0
9d003ab8:	008d2004 	sllv	a0,t5,a0
9d003abc:	010c6006 	srlv	t4,t4,t0
9d003ac0:	010d6806 	srlv	t5,t5,t0
9d003ac4:	10c00018 	beqz	a2,9d003b28 <Badd3>
9d003ac8:	008c6025 	or	t4,a0,t4
9d003acc:	10000016 	b	9d003b28 <Badd3>
9d003ad0:	358c0002 	ori	t4,t4,0x2

9d003ad4 <i1>:
9d003ad4:	000e5825 	or	t3,zero,t6
9d003ad8:	00084023 	negu	t0,t0

9d003adc <L4>:
9d003adc:	2d010020 	sltiu	at,t0,32
9d003ae0:	14200007 	bnez	at,9d003b00 <L5>
9d003ae4:	00000000 	nop
9d003ae8:	2108ffe0 	addi	t0,t0,-32
9d003aec:	0009302b 	sltu	a2,zero,t1
9d003af0:	100a000d 	beq	zero,t2,9d003b28 <Badd3>
9d003af4:	01464825 	or	t1,t2,a2
9d003af8:	1000fff8 	b	9d003adc <L4>
9d003afc:	340a0000 	li	t2,0x0

9d003b00 <L5>:
9d003b00:	11000009 	beqz	t0,9d003b28 <Badd3>
9d003b04:	00000000 	nop
9d003b08:	00082022 	neg	a0,t0
9d003b0c:	00893004 	sllv	a2,t1,a0
9d003b10:	008a2004 	sllv	a0,t2,a0
9d003b14:	01094806 	srlv	t1,t1,t0
9d003b18:	010a5006 	srlv	t2,t2,t0
9d003b1c:	10c00002 	beqz	a2,9d003b28 <Badd3>
9d003b20:	00894825 	or	t1,a0,t1
9d003b24:	35290002 	ori	t1,t1,0x2

9d003b28 <Badd3>:
9d003b28:	00a77826 	xor	t7,a1,a3
9d003b2c:	05e0001c 	bltz	t7,9d003ba0 <Bsub1>
9d003b30:	00000000 	nop
9d003b34:	012c4821 	addu	t1,t1,t4
9d003b38:	012c782b 	sltu	t7,t1,t4
9d003b3c:	014d5021 	addu	t2,t2,t5
9d003b40:	014f5021 	addu	t2,t2,t7
9d003b44:	114d0002 	beq	t2,t5,9d003b50 <L7>
9d003b48:	00000000 	nop
9d003b4c:	014d782b 	sltu	t7,t2,t5

9d003b50 <L7>:
9d003b50:	11e00037 	beqz	t7,9d003c30 <Bres>
9d003b54:	00000000 	nop
9d003b58:	312f0001 	andi	t7,t1,0x1
9d003b5c:	11e00002 	beqz	t7,9d003b68 <i3>
9d003b60:	00000000 	nop
9d003b64:	35290002 	ori	t1,t1,0x2

9d003b68 <i3>:
9d003b68:	00094842 	srl	t1,t1,0x1
9d003b6c:	000a7fc0 	sll	t7,t2,0x1f
9d003b70:	012f4825 	or	t1,t1,t7
9d003b74:	000a5042 	srl	t2,t2,0x1
9d003b78:	3c018000 	lui	at,0x8000
9d003b7c:	01415025 	or	t2,t2,at
9d003b80:	256b0001 	addiu	t3,t3,1
9d003b84:	240107ff 	li	at,2047
9d003b88:	15610029 	bne	t3,at,9d003c30 <Bres>
9d003b8c:	00000000 	nop
9d003b90:	3c017ff0 	lui	at,0x7ff0
9d003b94:	00a12825 	or	a1,a1,at
9d003b98:	10000037 	b	9d003c78 <BretA>
9d003b9c:	24040000 	li	a0,0

9d003ba0 <Bsub1>:
9d003ba0:	012c782b 	sltu	t7,t1,t4
9d003ba4:	012c4823 	subu	t1,t1,t4
9d003ba8:	014f102b 	sltu	v0,t2,t7
9d003bac:	014f5023 	subu	t2,t2,t7
9d003bb0:	014d782b 	sltu	t7,t2,t5
9d003bb4:	01e27825 	or	t7,t7,v0
9d003bb8:	11e00007 	beqz	t7,9d003bd8 <i5>
9d003bbc:	014d5023 	subu	t2,t2,t5
9d003bc0:	3c018000 	lui	at,0x8000
9d003bc4:	00a12826 	xor	a1,a1,at
9d003bc8:	0009782b 	sltu	t7,zero,t1
9d003bcc:	00094823 	negu	t1,t1
9d003bd0:	000a5023 	negu	t2,t2
9d003bd4:	014f5023 	subu	t2,t2,t7

9d003bd8 <i5>:
9d003bd8:	15400008 	bnez	t2,9d003bfc <L8>
9d003bdc:	00000000 	nop
9d003be0:	15200003 	bnez	t1,9d003bf0 <L9>
9d003be4:	00000000 	nop
9d003be8:	1000000d 	b	9d003c20 <L10>
9d003bec:	240b0000 	li	t3,0

9d003bf0 <L9>:
9d003bf0:	01205025 	move	t2,t1
9d003bf4:	24090000 	li	t1,0
9d003bf8:	256bffe0 	addiu	t3,t3,-32

9d003bfc <L8>:
9d003bfc:	71484020 	clz	t0,t2
9d003c00:	11000007 	beqz	t0,9d003c20 <L10>
9d003c04:	00000000 	nop
9d003c08:	01685823 	subu	t3,t3,t0
9d003c0c:	00082022 	neg	a0,t0
9d003c10:	00892006 	srlv	a0,t1,a0
9d003c14:	01094804 	sllv	t1,t1,t0
9d003c18:	010a5004 	sllv	t2,t2,t0
9d003c1c:	01445025 	or	t2,t2,a0

9d003c20 <L10>:
9d003c20:	01497825 	or	t7,t2,t1
9d003c24:	15e00002 	bnez	t7,9d003c30 <Bres>
9d003c28:	00000000 	nop
9d003c2c:	24050000 	li	a1,0

9d003c30 <Bres>:
9d003c30:	19600068 	blez	t3,9d003dd4 <Bund>
9d003c34:	00000000 	nop

9d003c38 <Blab8>:
9d003c38:	25290400 	addiu	t1,t1,1024
9d003c3c:	2d2f0400 	sltiu	t7,t1,1024
9d003c40:	014f5021 	addu	t2,t2,t7
9d003c44:	014f782b 	sltu	t7,t2,t7
9d003c48:	016f5821 	addu	t3,t3,t7
9d003c4c:	00097ac2 	srl	t7,t1,0xb
9d003c50:	31ef0001 	andi	t7,t7,0x1
9d003c54:	012f4823 	subu	t1,t1,t7
9d003c58:	000922c2 	srl	a0,t1,0xb
9d003c5c:	000a7d40 	sll	t7,t2,0x15
9d003c60:	008f2025 	or	a0,a0,t7
9d003c64:	000a7840 	sll	t7,t2,0x1
9d003c68:	000f7b02 	srl	t7,t7,0xc
9d003c6c:	00af2825 	or	a1,a1,t7
9d003c70:	000b7d00 	sll	t7,t3,0x14
9d003c74:	00af2825 	or	a1,a1,t7

9d003c78 <BretA>:
9d003c78:	00041025 	or	v0,zero,a0
9d003c7c:	00051825 	or	v1,zero,a1

9d003c80 <B999>:
9d003c80:	03e00008 	jr	ra
9d003c84:	00000000 	nop

9d003c88 <BspecA>:
9d003c88:	0120782a 	slt	t7,t1,zero
9d003c8c:	01294821 	addu	t1,t1,t1
9d003c90:	014a5021 	addu	t2,t2,t2
9d003c94:	15600023 	bnez	t3,9d003d24 <i7>
9d003c98:	014f5021 	addu	t2,t2,t7
9d003c9c:	01497825 	or	t7,t2,t1
9d003ca0:	11e00014 	beqz	t7,9d003cf4 <i8>
9d003ca4:	00000000 	nop
9d003ca8:	15400008 	bnez	t2,9d003ccc <L11>
9d003cac:	00000000 	nop
9d003cb0:	15200003 	bnez	t1,9d003cc0 <L12>
9d003cb4:	00000000 	nop
9d003cb8:	1000ff67 	b	9d003a58 <Blab1>
9d003cbc:	240b0000 	li	t3,0

9d003cc0 <L12>:
9d003cc0:	01205025 	move	t2,t1
9d003cc4:	24090000 	li	t1,0
9d003cc8:	256bffe0 	addiu	t3,t3,-32

9d003ccc <L11>:
9d003ccc:	71484020 	clz	t0,t2
9d003cd0:	1100ff61 	beqz	t0,9d003a58 <Blab1>
9d003cd4:	00000000 	nop
9d003cd8:	01685823 	subu	t3,t3,t0
9d003cdc:	00082022 	neg	a0,t0
9d003ce0:	00892006 	srlv	a0,t1,a0
9d003ce4:	01094804 	sllv	t1,t1,t0
9d003ce8:	010a5004 	sllv	t2,t2,t0
9d003cec:	1000ff5a 	b	9d003a58 <Blab1>
9d003cf0:	01445025 	or	t2,t2,a0

9d003cf4 <i8>:
9d003cf4:	240107ff 	li	at,2047
9d003cf8:	11c10015 	beq	t6,at,9d003d50 <BspecB>
9d003cfc:	00000000 	nop
9d003d00:	00e74021 	addu	t0,a3,a3
9d003d04:	01067825 	or	t7,t0,a2
9d003d08:	15e00003 	bnez	t7,9d003d18 <BretB>
9d003d0c:	00000000 	nop
9d003d10:	04e0ffd9 	bltz	a3,9d003c78 <BretA>
9d003d14:	00000000 	nop

9d003d18 <BretB>:
9d003d18:	00061025 	or	v0,zero,a2
9d003d1c:	1000ffd8 	b	9d003c80 <B999>
9d003d20:	00071825 	or	v1,zero,a3

9d003d24 <i7>:
9d003d24:	01497825 	or	t7,t2,t1
9d003d28:	15e00027 	bnez	t7,9d003dc8 <Bnan>
9d003d2c:	00000000 	nop
9d003d30:	240107ff 	li	at,2047
9d003d34:	15c1ffd0 	bne	t6,at,9d003c78 <BretA>
9d003d38:	00000000 	nop
9d003d3c:	00a77826 	xor	t7,a1,a3
9d003d40:	05e00021 	bltz	t7,9d003dc8 <Bnan>
9d003d44:	00000000 	nop
9d003d48:	1000fff3 	b	9d003d18 <BretB>
9d003d4c:	00000000 	nop

9d003d50 <BspecB>:
9d003d50:	0180782a 	slt	t7,t4,zero
9d003d54:	018c6021 	addu	t4,t4,t4
9d003d58:	01ad6821 	addu	t5,t5,t5
9d003d5c:	15c00017 	bnez	t6,9d003dbc <i11>
9d003d60:	01af6821 	addu	t5,t5,t7
9d003d64:	01ac7825 	or	t7,t5,t4
9d003d68:	11e0ffc3 	beqz	t7,9d003c78 <BretA>
9d003d6c:	00000000 	nop
9d003d70:	15a00008 	bnez	t5,9d003d94 <L14>
9d003d74:	00000000 	nop
9d003d78:	15800003 	bnez	t4,9d003d88 <L15>
9d003d7c:	00000000 	nop
9d003d80:	1000ff39 	b	9d003a68 <Blab2>
9d003d84:	240e0000 	li	t6,0

9d003d88 <L15>:
9d003d88:	01806825 	move	t5,t4
9d003d8c:	240c0000 	li	t4,0
9d003d90:	25ceffe0 	addiu	t6,t6,-32

9d003d94 <L14>:
9d003d94:	71a84020 	clz	t0,t5
9d003d98:	1100ff33 	beqz	t0,9d003a68 <Blab2>
9d003d9c:	00000000 	nop
9d003da0:	01c87023 	subu	t6,t6,t0
9d003da4:	00082022 	neg	a0,t0
9d003da8:	008c2006 	srlv	a0,t4,a0
9d003dac:	010c6004 	sllv	t4,t4,t0
9d003db0:	010d6804 	sllv	t5,t5,t0
9d003db4:	1000ff2c 	b	9d003a68 <Blab2>
9d003db8:	01a46825 	or	t5,t5,a0

9d003dbc <i11>:
9d003dbc:	01ac7825 	or	t7,t5,t4
9d003dc0:	11e0ffd5 	beqz	t7,9d003d18 <BretB>
9d003dc4:	00000000 	nop

9d003dc8 <Bnan>:
9d003dc8:	3c05fff8 	lui	a1,0xfff8
9d003dcc:	1000ffaa 	b	9d003c78 <BretA>
9d003dd0:	24040000 	li	a0,0

9d003dd4 <Bund>:
9d003dd4:	24080001 	li	t0,1
9d003dd8:	010b4023 	subu	t0,t0,t3

9d003ddc <L17>:
9d003ddc:	2d010020 	sltiu	at,t0,32
9d003de0:	14200007 	bnez	at,9d003e00 <L18>
9d003de4:	00000000 	nop
9d003de8:	2108ffe0 	addi	t0,t0,-32
9d003dec:	0009302b 	sltu	a2,zero,t1
9d003df0:	100a000d 	beq	zero,t2,9d003e28 <L19>
9d003df4:	01464825 	or	t1,t2,a2
9d003df8:	1000fff8 	b	9d003ddc <L17>
9d003dfc:	340a0000 	li	t2,0x0

9d003e00 <L18>:
9d003e00:	11000009 	beqz	t0,9d003e28 <L19>
9d003e04:	00000000 	nop
9d003e08:	00082022 	neg	a0,t0
9d003e0c:	00893004 	sllv	a2,t1,a0
9d003e10:	008a2004 	sllv	a0,t2,a0
9d003e14:	01094806 	srlv	t1,t1,t0
9d003e18:	010a5006 	srlv	t2,t2,t0
9d003e1c:	10c00002 	beqz	a2,9d003e28 <L19>
9d003e20:	00894825 	or	t1,a0,t1
9d003e24:	35290002 	ori	t1,t1,0x2

9d003e28 <L19>:
9d003e28:	1000ff83 	b	9d003c38 <Blab8>
9d003e2c:	240b0000 	li	t3,0
9d003e30:	00000000 	nop

Disassembly of section .text:

9d003e34 <adc_sample_convert>:
	setServo(getPot());

	IFS0bits.T2IF = 0;              // clear interrupt flag
}

unsigned int adc_sample_convert(int pin) { // sample & convert the value on the given 
9d003e34:	27bdfff8 	addiu	sp,sp,-8
9d003e38:	afbf0004 	sw	ra,4(sp)
                                           // adc pin the pin should be configured as an 
                                           // analog input in AD1PCFG
    unsigned int elapsed = 0, finish_time = 0;
    AD1CHSbits.CH0SA = pin;                // connect chosen pin to MUXA for sampling
9d003e3c:	3c02bf81 	lui	v0,0xbf81
9d003e40:	8c439040 	lw	v1,-28608(v0)
9d003e44:	7c839c04 	ins	v1,a0,0x10,0x4
9d003e48:	ac439040 	sw	v1,-28608(v0)
    AD1CON1bits.SAMP = 1;                  // start sampling
9d003e4c:	3c02bf81 	lui	v0,0xbf81
9d003e50:	94439000 	lhu	v1,-28672(v0)
9d003e54:	24040001 	li	a0,1
9d003e58:	7c830844 	ins	v1,a0,0x1,0x1
9d003e5c:	a4439000 	sh	v1,-28672(v0)
    elapsed = _CP0_GET_COUNT();
9d003e60:	40034800 	mfc0	v1,c0_count
    finish_time = elapsed + SAMPLE_TIME;
9d003e64:	24630008 	addiu	v1,v1,8

    while (_CP0_GET_COUNT() < finish_time) { 
9d003e68:	40024800 	mfc0	v0,c0_count
9d003e6c:	0043102b 	sltu	v0,v0,v1
9d003e70:	1440fffd 	bnez	v0,9d003e68 <adc_sample_convert+0x34>
9d003e74:	3c02bf81 	lui	v0,0xbf81
      ;                                   // sample for more than 250 ns
    }

    AD1CON1bits.SAMP = 0;                 // stop sampling and start converting
9d003e78:	94439000 	lhu	v1,-28672(v0)
9d003e7c:	7c030844 	ins	v1,zero,0x1,0x1
9d003e80:	a4439000 	sh	v1,-28672(v0)
    while (!AD1CON1bits.DONE) {
9d003e84:	00401821 	move	v1,v0
9d003e88:	8c629000 	lw	v0,-28672(v1)
9d003e8c:	30420001 	andi	v0,v0,0x1
9d003e90:	1040fffd 	beqz	v0,9d003e88 <adc_sample_convert+0x54>
9d003e94:	3c02bf81 	lui	v0,0xbf81
      ;                                   // wait for the conversion process to finish
    }

    return ADC1BUF0;                      // read the buffer with the result
9d003e98:	8c429070 	lw	v0,-28560(v0)
}
9d003e9c:	8fbf0004 	lw	ra,4(sp)
9d003ea0:	03e00008 	jr	ra
9d003ea4:	27bd0008 	addiu	sp,sp,8

9d003ea8 <initADC>:

void initADC(void)
{
9d003ea8:	27bdfff8 	addiu	sp,sp,-8
9d003eac:	afbf0004 	sw	ra,4(sp)
	//ADC setup
	AD1PCFGbits.PCFG12 = 0;                 // AN12 is an adc pin (pot)
9d003eb0:	3c02bf81 	lui	v0,0xbf81
9d003eb4:	94439060 	lhu	v1,-28576(v0)
9d003eb8:	7c036304 	ins	v1,zero,0xc,0x1
9d003ebc:	a4439060 	sh	v1,-28576(v0)
	AD1PCFGbits.PCFG14 = 0;                 // AN14 is an adc pin (photo)
9d003ec0:	94439060 	lhu	v1,-28576(v0)
9d003ec4:	7c037384 	ins	v1,zero,0xe,0x1
9d003ec8:	a4439060 	sh	v1,-28576(v0)
	AD1PCFGbits.PCFG15 = 0;                 // AN15 is an adc pin (battery)
9d003ecc:	94439060 	lhu	v1,-28576(v0)
9d003ed0:	7c037bc4 	ins	v1,zero,0xf,0x1
9d003ed4:	a4439060 	sh	v1,-28576(v0)

	AD1CON3bits.ADCS = 2;                   // ADC clock period is Tad = 2*(ADCS+1)*Tpb = 2*3*12.5ns = 75ns
9d003ed8:	24030002 	li	v1,2
9d003edc:	3c02bf81 	lui	v0,0xbf81
9d003ee0:	a0439020 	sb	v1,-28640(v0)
	AD1CON1bits.ADON = 1;                   // turn on A/D converter
9d003ee4:	3c02bf81 	lui	v0,0xbf81
9d003ee8:	94439000 	lhu	v1,-28672(v0)
9d003eec:	24040001 	li	a0,1
9d003ef0:	7c837bc4 	ins	v1,a0,0xf,0x1
9d003ef4:	a4439000 	sh	v1,-28672(v0)
	//end ADC setup

	//interrupt setup
	__builtin_disable_interrupts(); // INT step 2: disable interrupts at CPU
9d003ef8:	41626000 	di	v0
9d003efc:	000000c0 	ehb
									// INT step 3: setup peripheral
	PR2 = 62499;               //             set period register
9d003f00:	3403f423 	li	v1,0xf423
9d003f04:	3c02bf80 	lui	v0,0xbf80
9d003f08:	ac430820 	sw	v1,2080(v0)
	TMR2 = 0;                       //             initialize count to 0
9d003f0c:	3c02bf80 	lui	v0,0xbf80
9d003f10:	ac400810 	sw	zero,2064(v0)
	T2CONbits.TCKPS = 0b110;            //             set prescaler to 1:64
9d003f14:	3c02bf80 	lui	v0,0xbf80
9d003f18:	94430800 	lhu	v1,2048(v0)
9d003f1c:	24040006 	li	a0,6
9d003f20:	7c833104 	ins	v1,a0,0x4,0x3
9d003f24:	a4430800 	sh	v1,2048(v0)
	T2CONbits.ON = 1;               //             turn on Timer23
9d003f28:	94430800 	lhu	v1,2048(v0)
9d003f2c:	24040001 	li	a0,1
9d003f30:	7c837bc4 	ins	v1,a0,0xf,0x1
9d003f34:	a4430800 	sh	v1,2048(v0)

	IPC2bits.T2IP = 2;              // INT step 4: priority
9d003f38:	3c02bf88 	lui	v0,0xbf88
9d003f3c:	8c4310b0 	lw	v1,4272(v0)
9d003f40:	24050002 	li	a1,2
9d003f44:	7ca32084 	ins	v1,a1,0x2,0x3
9d003f48:	ac4310b0 	sw	v1,4272(v0)
	IPC2bits.T2IS = 0;              //             subpriority
9d003f4c:	8c4310b0 	lw	v1,4272(v0)
9d003f50:	7c030804 	ins	v1,zero,0x0,0x2
9d003f54:	ac4310b0 	sw	v1,4272(v0)
	IFS0bits.T2IF = 0;              // INT step 5: clear interrupt flag
9d003f58:	3c02bf88 	lui	v0,0xbf88
9d003f5c:	8c431030 	lw	v1,4144(v0)
9d003f60:	7c034204 	ins	v1,zero,0x8,0x1
9d003f64:	ac431030 	sw	v1,4144(v0)
	IEC0bits.T2IE = 1;              // INT step 6: enable interrupt
9d003f68:	3c02bf88 	lui	v0,0xbf88
9d003f6c:	8c431060 	lw	v1,4192(v0)
9d003f70:	7c834204 	ins	v1,a0,0x8,0x1
9d003f74:	ac431060 	sw	v1,4192(v0)
	__builtin_enable_interrupts();  // INT step 7: enable interrupts at CPU
9d003f78:	41626020 	ei	v0
	//end interrupt setup
}
9d003f7c:	8fbf0004 	lw	ra,4(sp)
9d003f80:	03e00008 	jr	ra
9d003f84:	27bd0008 	addiu	sp,sp,8

9d003f88 <setPhoto>:

void setPhoto(void)
{
9d003f88:	27bdffe8 	addiu	sp,sp,-24
9d003f8c:	afbf0014 	sw	ra,20(sp)
	sample14 = adc_sample_convert(14);    // sample and convert pin 14
9d003f90:	0f400f8d 	jal	9d003e34 <adc_sample_convert>
9d003f94:	2404000e 	li	a0,14

9d003f98 <.LVL7>:
9d003f98:	af828020 	sw	v0,-32736(gp)
	lightPerc = (100.0 / 1023)*sample14;		//sets light percentage from 0 to 100%
9d003f9c:	0f40182f 	jal	9d0060bc <__floatunsidf>
9d003fa0:	00402021 	move	a0,v0
9d003fa4:	00402021 	move	a0,v0
9d003fa8:	00602821 	move	a1,v1
9d003fac:	3c029d00 	lui	v0,0x9d00
9d003fb0:	8c466268 	lw	a2,25192(v0)
9d003fb4:	0f401083 	jal	9d00420c <.LFE15>
9d003fb8:	8c47626c 	lw	a3,25196(v0)
9d003fbc:	00402021 	move	a0,v0
9d003fc0:	0f4016b4 	jal	9d005ad0 <__fixdfsi>
9d003fc4:	00602821 	move	a1,v1
9d003fc8:	af82802c 	sw	v0,-32724(gp)
	
}
9d003fcc:	8fbf0014 	lw	ra,20(sp)
9d003fd0:	03e00008 	jr	ra
9d003fd4:	27bd0018 	addiu	sp,sp,24

9d003fd8 <setBatt>:

void setBatt(void)
{
9d003fd8:	27bdffe8 	addiu	sp,sp,-24
9d003fdc:	afbf0014 	sw	ra,20(sp)
	sample15 = adc_sample_convert(15);    // sample and convert pin 12
9d003fe0:	0f400f8d 	jal	9d003e34 <adc_sample_convert>
9d003fe4:	2404000f 	li	a0,15

9d003fe8 <.LVL11>:
9d003fe8:	af828028 	sw	v0,-32728(gp)
	battPerc = (100.0 / 1023)*sample15;		//sets light percentage from 0 to 100%
9d003fec:	0f40182f 	jal	9d0060bc <__floatunsidf>
9d003ff0:	00402021 	move	a0,v0
9d003ff4:	00402021 	move	a0,v0
9d003ff8:	00602821 	move	a1,v1
9d003ffc:	3c029d00 	lui	v0,0x9d00
9d004000:	8c466268 	lw	a2,25192(v0)
9d004004:	0f401083 	jal	9d00420c <.LFE15>
9d004008:	8c47626c 	lw	a3,25196(v0)
9d00400c:	00402021 	move	a0,v0
9d004010:	0f4016b4 	jal	9d005ad0 <__fixdfsi>
9d004014:	00602821 	move	a1,v1
9d004018:	af828024 	sw	v0,-32732(gp)

}
9d00401c:	8fbf0014 	lw	ra,20(sp)
9d004020:	03e00008 	jr	ra
9d004024:	27bd0018 	addiu	sp,sp,24

9d004028 <setPot>:

void setPot(void)
{	
9d004028:	27bdffe8 	addiu	sp,sp,-24
9d00402c:	afbf0014 	sw	ra,20(sp)
	//if in manual mode
	if(manual_auto){
9d004030:	8f828038 	lw	v0,-32712(gp)
9d004034:	10400012 	beqz	v0,9d004080 <.LBB2>
9d004038:	00000000 	nop
		
	sample12 = adc_sample_convert(12);    // sample and convert pin 12	
9d00403c:	0f400f8d 	jal	9d003e34 <adc_sample_convert>
9d004040:	2404000c 	li	a0,12

9d004044 <.LVL15>:
9d004044:	af828030 	sw	v0,-32720(gp)
	anglePos = (90.0 / 1023)*sample12;		//sets angle between 0 and 90 deg
9d004048:	0f40182f 	jal	9d0060bc <__floatunsidf>
9d00404c:	00402021 	move	a0,v0
9d004050:	00402021 	move	a0,v0
9d004054:	00602821 	move	a1,v1
9d004058:	3c029d00 	lui	v0,0x9d00
9d00405c:	8c466270 	lw	a2,25200(v0)
9d004060:	0f401083 	jal	9d00420c <.LFE15>
9d004064:	8c476274 	lw	a3,25204(v0)
9d004068:	00402021 	move	a0,v0
9d00406c:	0f4016b4 	jal	9d005ad0 <__fixdfsi>
9d004070:	00602821 	move	a1,v1
9d004074:	af82801c 	sw	v0,-32740(gp)
9d004078:	0b401029 	j	9d0040a4 <.LBE2+0x4>
9d00407c:	8fbf0014 	lw	ra,20(sp)

9d004080 <.LBB2>:
	}
	else {
		
		if(getDayNight()) {
9d004080:	0f400b35 	jal	9d002cd4 <getDayNight>
9d004084:	00000000 	nop

9d004088 <.LVL19>:
9d004088:	10400004 	beqz	v0,9d00409c <.LVL19+0x14>
9d00408c:	2402005a 	li	v0,90
			anglePos = 0;  //blinds open
9d004090:	af80801c 	sw	zero,-32740(gp)
9d004094:	0b401029 	j	9d0040a4 <.LBE2+0x4>
9d004098:	8fbf0014 	lw	ra,20(sp)
		}
		else{
			anglePos = 90; //blinds closed
9d00409c:	af82801c 	sw	v0,-32740(gp)

9d0040a0 <.LBE2>:
		}
	}
}
9d0040a0:	8fbf0014 	lw	ra,20(sp)
9d0040a4:	03e00008 	jr	ra
9d0040a8:	27bd0018 	addiu	sp,sp,24

9d0040ac <Timer2ISR>:
/********************************/
//FUNCTIONS
/********************************/

//Timer2 interrupt for sampling ADC
void __ISR(_TIMER_2_VECTOR, IPL2SOFT) Timer2ISR(void) {  // INT step 1: the ISR
9d0040ac:	415de800 	rdpgpr	sp,sp
9d0040b0:	401a7000 	mfc0	k0,c0_epc
9d0040b4:	401b6000 	mfc0	k1,c0_status
9d0040b8:	27bdff90 	addiu	sp,sp,-112
9d0040bc:	afba006c 	sw	k0,108(sp)
9d0040c0:	401a6002 	mfc0	k0,c0_srsctl
9d0040c4:	afbb0068 	sw	k1,104(sp)
9d0040c8:	afba0064 	sw	k0,100(sp)
9d0040cc:	7c1b7844 	ins	k1,zero,0x1,0xf
9d0040d0:	377b0800 	ori	k1,k1,0x800
9d0040d4:	409b6000 	mtc0	k1,c0_status
9d0040d8:	afbf0054 	sw	ra,84(sp)
9d0040dc:	afb90050 	sw	t9,80(sp)
9d0040e0:	afb8004c 	sw	t8,76(sp)
9d0040e4:	afaf0048 	sw	t7,72(sp)
9d0040e8:	afae0044 	sw	t6,68(sp)
9d0040ec:	afad0040 	sw	t5,64(sp)
9d0040f0:	afac003c 	sw	t4,60(sp)
9d0040f4:	afab0038 	sw	t3,56(sp)
9d0040f8:	afaa0034 	sw	t2,52(sp)
9d0040fc:	afa90030 	sw	t1,48(sp)
9d004100:	afa8002c 	sw	t0,44(sp)
9d004104:	afa70028 	sw	a3,40(sp)
9d004108:	afa60024 	sw	a2,36(sp)
9d00410c:	afa50020 	sw	a1,32(sp)
9d004110:	afa4001c 	sw	a0,28(sp)
9d004114:	afa30018 	sw	v1,24(sp)
9d004118:	afa20014 	sw	v0,20(sp)
9d00411c:	afa10010 	sw	at,16(sp)
9d004120:	00001012 	mflo	v0
9d004124:	afa2005c 	sw	v0,92(sp)
9d004128:	00001810 	mfhi	v1
9d00412c:	afa30058 	sw	v1,88(sp)
	
	setPhoto();
9d004130:	0f400fe2 	jal	9d003f88 <setPhoto>
9d004134:	00000000 	nop

9d004138 <.LVL20>:
	setPot();
9d004138:	0f40100a 	jal	9d004028 <setPot>
9d00413c:	00000000 	nop

9d004140 <.LVL21>:
	setBatt();
9d004140:	0f400ff6 	jal	9d003fd8 <setBatt>
9d004144:	00000000 	nop

9d004148 <.LBB5>:
	return lightPerc;
}

int getPot(void)
{
	return anglePos;
9d004148:	8f84801c 	lw	a0,-32740(gp)

9d00414c <.LBE5>:
	
	setPhoto();
	setPot();
	setBatt();
	
	setServo(getPot());
9d00414c:	0f40154c 	jal	9d005530 <setServo>
9d004150:	7c042420 	seb	a0,a0

9d004154 <.LVL23>:

	IFS0bits.T2IF = 0;              // clear interrupt flag
9d004154:	3c02bf88 	lui	v0,0xbf88
9d004158:	8c431030 	lw	v1,4144(v0)
9d00415c:	7c034204 	ins	v1,zero,0x8,0x1
9d004160:	ac431030 	sw	v1,4144(v0)
}
9d004164:	8fa2005c 	lw	v0,92(sp)
9d004168:	00400013 	mtlo	v0
9d00416c:	8fa30058 	lw	v1,88(sp)
9d004170:	00600011 	mthi	v1
9d004174:	8fbf0054 	lw	ra,84(sp)
9d004178:	8fb90050 	lw	t9,80(sp)
9d00417c:	8fb8004c 	lw	t8,76(sp)
9d004180:	8faf0048 	lw	t7,72(sp)
9d004184:	8fae0044 	lw	t6,68(sp)
9d004188:	8fad0040 	lw	t5,64(sp)
9d00418c:	8fac003c 	lw	t4,60(sp)
9d004190:	8fab0038 	lw	t3,56(sp)
9d004194:	8faa0034 	lw	t2,52(sp)
9d004198:	8fa90030 	lw	t1,48(sp)
9d00419c:	8fa8002c 	lw	t0,44(sp)
9d0041a0:	8fa70028 	lw	a3,40(sp)
9d0041a4:	8fa60024 	lw	a2,36(sp)
9d0041a8:	8fa50020 	lw	a1,32(sp)
9d0041ac:	8fa4001c 	lw	a0,28(sp)
9d0041b0:	8fa30018 	lw	v1,24(sp)
9d0041b4:	8fa20014 	lw	v0,20(sp)
9d0041b8:	8fa10010 	lw	at,16(sp)
9d0041bc:	41606000 	di
9d0041c0:	000000c0 	ehb
9d0041c4:	8fba006c 	lw	k0,108(sp)
9d0041c8:	8fbb0068 	lw	k1,104(sp)
9d0041cc:	409a7000 	mtc0	k0,c0_epc
9d0041d0:	8fba0064 	lw	k0,100(sp)
9d0041d4:	27bd0070 	addiu	sp,sp,112
9d0041d8:	409a6002 	mtc0	k0,c0_srsctl
9d0041dc:	41dde800 	wrpgpr	sp,sp
9d0041e0:	409b6000 	mtc0	k1,c0_status
9d0041e4:	42000018 	eret

9d0041e8 <getPhoto>:
	}
}

int getPhoto(void)
{
	return lightPerc;
9d0041e8:	8f82802c 	lw	v0,-32724(gp)
}
9d0041ec:	03e00008 	jr	ra
9d0041f0:	00000000 	nop

9d0041f4 <getPot>:

int getPot(void)
{
	return anglePos;
9d0041f4:	8f82801c 	lw	v0,-32740(gp)
}
9d0041f8:	03e00008 	jr	ra
9d0041fc:	00000000 	nop

9d004200 <getBatt>:

int getBatt(void)
{
	return battPerc;
9d004200:	8f828024 	lw	v0,-32732(gp)
9d004204:	03e00008 	jr	ra
9d004208:	00000000 	nop

Disassembly of section .text.dp32mul:

9d00420c <__muldf3>:
9d00420c:	00055040 000a5542 00054ac0 00047d42     @P..BU...J..B}..
9d00421c:	012f4825 000442c0 3c0e8000 012e4825     %H/..B.....<%H..
9d00422c:	00076840 000d6d42 000762c0 00067d42     @h..Bm...b..B}..
9d00423c:	018f6025 00065ac0 018e6025 00a72826     %`...Z..%`..&(..
9d00424c:	00ae2824 254fffff 2de107fe 10200047     $(....O%...-G. .
9d00425c:	00000000                                ....

9d004260 <Clab1>:
9d004260:	25afffff 	addiu	t7,t5,-1
9d004264:	2de107fe 	sltiu	at,t7,2046
9d004268:	1020006f 	beqz	at,9d004428 <CspecB>
9d00426c:	00000000 	nop

9d004270 <Clab2>:
9d004270:	25affc02 	addiu	t7,t5,-1022
9d004274:	014f5021 	addu	t2,t2,t7
9d004278:	012c0019 	multu	t1,t4
9d00427c:	00003812 	mflo	a3
9d004280:	00007010 	mfhi	t6
9d004284:	010b0019 	multu	t0,t3
9d004288:	00002012 	mflo	a0
9d00428c:	00003010 	mfhi	a2
9d004290:	012b0019 	multu	t1,t3
9d004294:	00005812 	mflo	t3
9d004298:	00006810 	mfhi	t5
9d00429c:	00cb3021 	addu	a2,a2,t3
9d0042a0:	00cb782b 	sltu	t7,a2,t3
9d0042a4:	00ed3821 	addu	a3,a3,t5
9d0042a8:	00ef3821 	addu	a3,a3,t7
9d0042ac:	10ed0002 	beq	a3,t5,9d0042b8 <L20>
9d0042b0:	00000000 	nop
9d0042b4:	00ed782b 	sltu	t7,a3,t5

9d0042b8 <L20>:
9d0042b8:	01cf7021 	addu	t6,t6,t7
9d0042bc:	010c0019 	multu	t0,t4
9d0042c0:	00004012 	mflo	t0
9d0042c4:	00004810 	mfhi	t1
9d0042c8:	00c83021 	addu	a2,a2,t0
9d0042cc:	00c8782b 	sltu	t7,a2,t0
9d0042d0:	00e93821 	addu	a3,a3,t1
9d0042d4:	00ef3821 	addu	a3,a3,t7
9d0042d8:	10e90002 	beq	a3,t1,9d0042e4 <L21>
9d0042dc:	00000000 	nop
9d0042e0:	00e9782b 	sltu	t7,a3,t1

9d0042e4 <L21>:
9d0042e4:	01cf7021 	addu	t6,t6,t7
9d0042e8:	00867825 	or	t7,a0,a2
9d0042ec:	11e00002 	beqz	t7,9d0042f8 <i13>
9d0042f0:	00000000 	nop
9d0042f4:	34e70001 	ori	a3,a3,0x1

9d0042f8 <i13>:
9d0042f8:	000e4825 	or	t1,zero,t6
9d0042fc:	05200006 	bltz	t1,9d004318 <i14>
9d004300:	00074025 	or	t0,zero,a3
9d004304:	0100782a 	slt	t7,t0,zero
9d004308:	01084021 	addu	t0,t0,t0
9d00430c:	01294821 	addu	t1,t1,t1
9d004310:	012f4821 	addu	t1,t1,t7
9d004314:	254affff 	addiu	t2,t2,-1

9d004318 <i14>:
9d004318:	254fffff 	addiu	t7,t2,-1
9d00431c:	2de107fe 	sltiu	at,t7,2046
9d004320:	10200068 	beqz	at,9d0044c4 <Coveund>
9d004324:	00000000 	nop
9d004328:	25080400 	addiu	t0,t0,1024
9d00432c:	2d0f0400 	sltiu	t7,t0,1024
9d004330:	012f4821 	addu	t1,t1,t7
9d004334:	012f782b 	sltu	t7,t1,t7
9d004338:	014f5021 	addu	t2,t2,t7

9d00433c <Clab8>:
9d00433c:	00087ac2 	srl	t7,t0,0xb
9d004340:	31ef0001 	andi	t7,t7,0x1
9d004344:	010f4023 	subu	t0,t0,t7
9d004348:	000822c2 	srl	a0,t0,0xb
9d00434c:	00097d40 	sll	t7,t1,0x15
9d004350:	008f2025 	or	a0,a0,t7
9d004354:	00097840 	sll	t7,t1,0x1
9d004358:	000f7b02 	srl	t7,t7,0xc
9d00435c:	00af2825 	or	a1,a1,t7
9d004360:	000a7d00 	sll	t7,t2,0x14
9d004364:	00af2825 	or	a1,a1,t7

9d004368 <Cret>:
9d004368:	00041025 	or	v0,zero,a0
9d00436c:	00051825 	or	v1,zero,a1

9d004370 <C999>:
9d004370:	03e00008 	jr	ra
9d004374:	00000000 	nop

9d004378 <CspecA>:
9d004378:	0100782a 	slt	t7,t0,zero
9d00437c:	01084021 	addu	t0,t0,t0
9d004380:	01294821 	addu	t1,t1,t1
9d004384:	1540001c 	bnez	t2,9d0043f8 <i15>
9d004388:	012f4821 	addu	t1,t1,t7
9d00438c:	01287825 	or	t7,t1,t0
9d004390:	11e00014 	beqz	t7,9d0043e4 <i16>
9d004394:	00000000 	nop
9d004398:	15200008 	bnez	t1,9d0043bc <L22>
9d00439c:	00000000 	nop
9d0043a0:	15000003 	bnez	t0,9d0043b0 <L23>
9d0043a4:	00000000 	nop
9d0043a8:	1000ffad 	b	9d004260 <Clab1>
9d0043ac:	240a0000 	li	t2,0

9d0043b0 <L23>:
9d0043b0:	01004825 	move	t1,t0
9d0043b4:	24080000 	li	t0,0
9d0043b8:	254affe0 	addiu	t2,t2,-32

9d0043bc <L22>:
9d0043bc:	712e7020 	clz	t6,t1
9d0043c0:	11c0ffa7 	beqz	t6,9d004260 <Clab1>
9d0043c4:	00000000 	nop
9d0043c8:	014e5023 	subu	t2,t2,t6
9d0043cc:	000e3822 	neg	a3,t6
9d0043d0:	00e83806 	srlv	a3,t0,a3
9d0043d4:	01c84004 	sllv	t0,t0,t6
9d0043d8:	01c94804 	sllv	t1,t1,t6
9d0043dc:	1000ffa0 	b	9d004260 <Clab1>
9d0043e0:	01274825 	or	t1,t1,a3

9d0043e4 <i16>:
9d0043e4:	240107ff 	li	at,2047
9d0043e8:	11a10033 	beq	t5,at,9d0044b8 <Cnan>
9d0043ec:	00000000 	nop
9d0043f0:	1000ffdd 	b	9d004368 <Cret>
9d0043f4:	00000000 	nop

9d0043f8 <i15>:
9d0043f8:	01287825 	or	t7,t1,t0
9d0043fc:	15e0002e 	bnez	t7,9d0044b8 <Cnan>
9d004400:	00000000 	nop
9d004404:	15a00005 	bnez	t5,9d00441c <i17>
9d004408:	00000000 	nop
9d00440c:	000c7840 	sll	t7,t4,0x1
9d004410:	01eb7825 	or	t7,t7,t3
9d004414:	11e00028 	beqz	t7,9d0044b8 <Cnan>
9d004418:	00000000 	nop

9d00441c <i17>:
9d00441c:	240107ff 	li	at,2047
9d004420:	15a10021 	bne	t5,at,9d0044a8 <Cinf>
9d004424:	00000000 	nop

9d004428 <CspecB>:
9d004428:	0160782a 	slt	t7,t3,zero
9d00442c:	016b5821 	addu	t3,t3,t3
9d004430:	018c6021 	addu	t4,t4,t4
9d004434:	15a00019 	bnez	t5,9d00449c <i18>
9d004438:	018f6021 	addu	t4,t4,t7
9d00443c:	018b7825 	or	t7,t4,t3
9d004440:	11e00014 	beqz	t7,9d004494 <i19>
9d004444:	00000000 	nop
9d004448:	15800008 	bnez	t4,9d00446c <L25>
9d00444c:	00000000 	nop
9d004450:	15600003 	bnez	t3,9d004460 <L26>
9d004454:	00000000 	nop
9d004458:	1000ff85 	b	9d004270 <Clab2>
9d00445c:	240d0000 	li	t5,0

9d004460 <L26>:
9d004460:	01606025 	move	t4,t3
9d004464:	240b0000 	li	t3,0
9d004468:	25adffe0 	addiu	t5,t5,-32

9d00446c <L25>:
9d00446c:	71863020 	clz	a2,t4
9d004470:	10c0ff7f 	beqz	a2,9d004270 <Clab2>
9d004474:	00000000 	nop
9d004478:	01a66823 	subu	t5,t5,a2
9d00447c:	00067022 	neg	t6,a2
9d004480:	01cb7006 	srlv	t6,t3,t6
9d004484:	00cb5804 	sllv	t3,t3,a2
9d004488:	00cc6004 	sllv	t4,t4,a2
9d00448c:	1000ff78 	b	9d004270 <Clab2>
9d004490:	018e6025 	or	t4,t4,t6

9d004494 <i19>:
9d004494:	1000ffb4 	b	9d004368 <Cret>
9d004498:	24040000 	li	a0,0

9d00449c <i18>:
9d00449c:	018b7825 	or	t7,t4,t3
9d0044a0:	15e00005 	bnez	t7,9d0044b8 <Cnan>
9d0044a4:	00000000 	nop

9d0044a8 <Cinf>:
9d0044a8:	3c017ff0 	lui	at,0x7ff0
9d0044ac:	00a12825 	or	a1,a1,at
9d0044b0:	1000ffad 	b	9d004368 <Cret>
9d0044b4:	24040000 	li	a0,0

9d0044b8 <Cnan>:
9d0044b8:	3c05fff8 	lui	a1,0xfff8
9d0044bc:	1000ffaa 	b	9d004368 <Cret>
9d0044c0:	24040000 	li	a0,0

9d0044c4 <Coveund>:
9d0044c4:	1d40fff8 	bgtz	t2,9d0044a8 <Cinf>
9d0044c8:	00000000 	nop
9d0044cc:	240e0001 	li	t6,1
9d0044d0:	01ca7023 	subu	t6,t6,t2

9d0044d4 <L28>:
9d0044d4:	2dc10020 	sltiu	at,t6,32
9d0044d8:	14200007 	bnez	at,9d0044f8 <L29>
9d0044dc:	00000000 	nop
9d0044e0:	21ceffe0 	addi	t6,t6,-32
9d0044e4:	0008302b 	sltu	a2,zero,t0
9d0044e8:	1009000d 	beq	zero,t1,9d004520 <L30>
9d0044ec:	01264025 	or	t0,t1,a2
9d0044f0:	1000fff8 	b	9d0044d4 <L28>
9d0044f4:	34090000 	li	t1,0x0

9d0044f8 <L29>:
9d0044f8:	11c00009 	beqz	t6,9d004520 <L30>
9d0044fc:	00000000 	nop
9d004500:	000e3822 	neg	a3,t6
9d004504:	00e83004 	sllv	a2,t0,a3
9d004508:	00e93804 	sllv	a3,t1,a3
9d00450c:	01c84006 	srlv	t0,t0,t6
9d004510:	01c94806 	srlv	t1,t1,t6
9d004514:	10c00002 	beqz	a2,9d004520 <L30>
9d004518:	00e84025 	or	t0,a3,t0
9d00451c:	35080002 	ori	t0,t0,0x2

9d004520 <L30>:
9d004520:	25080400 	addiu	t0,t0,1024
9d004524:	2d0f0400 	sltiu	t7,t0,1024
9d004528:	012f4821 	addu	t1,t1,t7
9d00452c:	1000ff83 	b	9d00433c <Clab8>
9d004530:	000957c2 	srl	t2,t1,0x1f
9d004534:	00000000 	nop

Disassembly of section .text:

9d004538 <__RTCCInterrupt>:
#include "NU32.h"
#include <stdio.h>


void __ISR(_RTCC_VECTOR, IPL3SOFT) __RTCCInterrupt(void)
	{
9d004538:	415de800 	rdpgpr	sp,sp
9d00453c:	401a7000 	mfc0	k0,c0_epc
9d004540:	401b6000 	mfc0	k1,c0_status
9d004544:	27bdff90 	addiu	sp,sp,-112
9d004548:	afba006c 	sw	k0,108(sp)
9d00454c:	401a6002 	mfc0	k0,c0_srsctl
9d004550:	afbb0068 	sw	k1,104(sp)
9d004554:	afba0064 	sw	k0,100(sp)
9d004558:	7c1b7844 	ins	k1,zero,0x1,0xf
9d00455c:	377b0c00 	ori	k1,k1,0xc00
9d004560:	409b6000 	mtc0	k1,c0_status
9d004564:	afbf0054 	sw	ra,84(sp)
9d004568:	afb90050 	sw	t9,80(sp)
9d00456c:	afb8004c 	sw	t8,76(sp)
9d004570:	afaf0048 	sw	t7,72(sp)
9d004574:	afae0044 	sw	t6,68(sp)
9d004578:	afad0040 	sw	t5,64(sp)
9d00457c:	afac003c 	sw	t4,60(sp)
9d004580:	afab0038 	sw	t3,56(sp)
9d004584:	afaa0034 	sw	t2,52(sp)
9d004588:	afa90030 	sw	t1,48(sp)
9d00458c:	afa8002c 	sw	t0,44(sp)
9d004590:	afa70028 	sw	a3,40(sp)
9d004594:	afa60024 	sw	a2,36(sp)
9d004598:	afa50020 	sw	a1,32(sp)
9d00459c:	afa4001c 	sw	a0,28(sp)
9d0045a0:	afa30018 	sw	v1,24(sp)
9d0045a4:	afa20014 	sw	v0,20(sp)
9d0045a8:	afa10010 	sw	at,16(sp)
9d0045ac:	00001012 	mflo	v0
9d0045b0:	afa2005c 	sw	v0,92(sp)
9d0045b4:	00001810 	mfhi	v1
9d0045b8:	afa30058 	sw	v1,88(sp)
		
	NU32_WriteUART3("\r\ntest interrupt");
9d0045bc:	3c049d00 	lui	a0,0x9d00
9d0045c0:	0f401450 	jal	9d005140 <NU32_WriteUART3>
9d0045c4:	24845eac 	addiu	a0,a0,24236

9d0045c8 <.LVL0>:
	LATFINV = 0x0003;
9d0045c8:	24030003 	li	v1,3
9d0045cc:	3c02bf88 	lui	v0,0xbf88
9d0045d0:	ac43616c 	sw	v1,24940(v0)

	IFS1CLR=0x00008000; // Clear RTCC interrupt flag
9d0045d4:	34038000 	li	v1,0x8000
9d0045d8:	3c02bf88 	lui	v0,0xbf88
9d0045dc:	ac431044 	sw	v1,4164(v0)
	}
9d0045e0:	8fa2005c 	lw	v0,92(sp)
9d0045e4:	00400013 	mtlo	v0
9d0045e8:	8fa30058 	lw	v1,88(sp)
9d0045ec:	00600011 	mthi	v1
9d0045f0:	8fbf0054 	lw	ra,84(sp)
9d0045f4:	8fb90050 	lw	t9,80(sp)
9d0045f8:	8fb8004c 	lw	t8,76(sp)
9d0045fc:	8faf0048 	lw	t7,72(sp)
9d004600:	8fae0044 	lw	t6,68(sp)
9d004604:	8fad0040 	lw	t5,64(sp)
9d004608:	8fac003c 	lw	t4,60(sp)
9d00460c:	8fab0038 	lw	t3,56(sp)
9d004610:	8faa0034 	lw	t2,52(sp)
9d004614:	8fa90030 	lw	t1,48(sp)
9d004618:	8fa8002c 	lw	t0,44(sp)
9d00461c:	8fa70028 	lw	a3,40(sp)
9d004620:	8fa60024 	lw	a2,36(sp)
9d004624:	8fa50020 	lw	a1,32(sp)
9d004628:	8fa4001c 	lw	a0,28(sp)
9d00462c:	8fa30018 	lw	v1,24(sp)
9d004630:	8fa20014 	lw	v0,20(sp)
9d004634:	8fa10010 	lw	at,16(sp)
9d004638:	41606000 	di
9d00463c:	000000c0 	ehb
9d004640:	8fba006c 	lw	k0,108(sp)
9d004644:	8fbb0068 	lw	k1,104(sp)
9d004648:	409a7000 	mtc0	k0,c0_epc
9d00464c:	8fba0064 	lw	k0,100(sp)
9d004650:	27bd0070 	addiu	sp,sp,112
9d004654:	409a6002 	mtc0	k0,c0_srsctl
9d004658:	41dde800 	wrpgpr	sp,sp
9d00465c:	409b6000 	mtc0	k1,c0_status
9d004660:	42000018 	eret

9d004664 <main2>:
	

void main2(void) {
9d004664:	27bdffe8 	addiu	sp,sp,-24
9d004668:	afbf0014 	sw	ra,20(sp)
	
	NU32_Startup();
9d00466c:	0f40140b 	jal	9d00502c <NU32_Startup>
9d004670:	00000000 	nop

9d004674 <.LVL1>:

	TRISF = 0xFFFC;
9d004674:	3403fffc 	li	v1,0xfffc
9d004678:	3c02bf88 	lui	v0,0xbf88
9d00467c:	ac436140 	sw	v1,24896(v0)
	LATFbits.LATF0 = 0;
9d004680:	3c02bf88 	lui	v0,0xbf88
9d004684:	90436160 	lbu	v1,24928(v0)
9d004688:	7c030004 	ins	v1,zero,0x0,0x1
9d00468c:	a0436160 	sb	v1,24928(v0)
	LATFbits.LATF1 = 1;
9d004690:	90436160 	lbu	v1,24928(v0)
9d004694:	24040001 	li	a0,1
9d004698:	7c830844 	ins	v1,a0,0x1,0x1
9d00469c:	a0436160 	sb	v1,24928(v0)


	//RTCC Setup
	__builtin_disable_interrupts();  // INT step 2: disable interrupts at CPU
9d0046a0:	41626000 	di	v0
9d0046a4:	000000c0 	ehb

	NU32_WriteUART3("\r\ntest main 0");
9d0046a8:	3c049d00 	lui	a0,0x9d00
9d0046ac:	0f401450 	jal	9d005140 <NU32_WriteUART3>
9d0046b0:	24845ec0 	addiu	a0,a0,24256

9d0046b4 <.LVL2>:
	
	OSCCONbits.SOSCEN = 1;  //turn on secondary clock
9d0046b4:	3c02bf81 	lui	v0,0xbf81
9d0046b8:	8c43f000 	lw	v1,-4096(v0)
9d0046bc:	24040001 	li	a0,1
9d0046c0:	7c830844 	ins	v1,a0,0x1,0x1
9d0046c4:	ac43f000 	sw	v1,-4096(v0)
	while(!OSCCONbits.SOSCRDY) {;}
9d0046c8:	00401821 	move	v1,v0
9d0046cc:	3c020040 	lui	v0,0x40
9d0046d0:	8c64f000 	lw	a0,-4096(v1)
9d0046d4:	00822024 	and	a0,a0,v0
9d0046d8:	1080fffd 	beqz	a0,9d0046d0 <.LVL2+0x1c>
9d0046dc:	00000000 	nop
	//SYSKEY = 0x0;  //may not need (locks if not already locked)
	SYSKEY = 0xaa996655; // write first unlock key to SYSKEY
9d0046e0:	3c02bf81 	lui	v0,0xbf81
9d0046e4:	3c03aa99 	lui	v1,0xaa99
9d0046e8:	24636655 	addiu	v1,v1,26197
9d0046ec:	ac43f230 	sw	v1,-3536(v0)
	SYSKEY = 0x556699aa; // write second unlock key to SYSKEY
9d0046f0:	3c035566 	lui	v1,0x5566
9d0046f4:	346399aa 	ori	v1,v1,0x99aa
9d0046f8:	ac43f230 	sw	v1,-3536(v0)
	RTCCONbits.RTCWREN = 1; // set RTCWREN in RTCCONSET
9d0046fc:	3c02bf80 	lui	v0,0xbf80
9d004700:	8c430200 	lw	v1,512(v0)
9d004704:	24040001 	li	a0,1
9d004708:	7c8318c4 	ins	v1,a0,0x3,0x1
9d00470c:	ac430200 	sw	v1,512(v0)
	
	IEC1CLR=0x00008000; // disable RTCC interrupts
9d004710:	34048000 	li	a0,0x8000
9d004714:	3c03bf88 	lui	v1,0xbf88
9d004718:	ac641074 	sw	a0,4212(v1)
	RTCCONbits.ON = 0; // turn off the RTCC	
9d00471c:	8c430200 	lw	v1,512(v0)
9d004720:	7c037bc4 	ins	v1,zero,0xf,0x1
9d004724:	ac430200 	sw	v1,512(v0)
	while(RTCCON&0x40); // wait for clock to be turned off
9d004728:	3c02bf80 	lui	v0,0xbf80
9d00472c:	8c430200 	lw	v1,512(v0)
9d004730:	30630040 	andi	v1,v1,0x40
9d004734:	1460fffd 	bnez	v1,9d00472c <.LVL2+0x78>
9d004738:	3c049d00 	lui	a0,0x9d00
	NU32_WriteUART3("\r\ntest main 1");
9d00473c:	0f401450 	jal	9d005140 <NU32_WriteUART3>
9d004740:	24845ed0 	addiu	a0,a0,24272

9d004744 <.LVL3>:
	IFS1CLR=0x00008000; // clear RTCC flag
9d004744:	34038000 	li	v1,0x8000
9d004748:	3c02bf88 	lui	v0,0xbf88
9d00474c:	ac431044 	sw	v1,4164(v0)
	IPC8CLR=0x1f000000; // clear the priority
9d004750:	3c031f00 	lui	v1,0x1f00
9d004754:	3c02bf88 	lui	v0,0xbf88
9d004758:	ac431114 	sw	v1,4372(v0)
	IPC8SET=0x0d000000; // Set IPL=3, subpriority 1
9d00475c:	3c030d00 	lui	v1,0xd00
9d004760:	3c02bf88 	lui	v0,0xbf88
9d004764:	ac431118 	sw	v1,4376(v0)
	
	RTCTIME=0x16153300; // safe to update time to 16 hr, 15 min, 33 sec
9d004768:	3c031615 	lui	v1,0x1615
9d00476c:	24643300 	addiu	a0,v1,13056
9d004770:	3c02bf80 	lui	v0,0xbf80
9d004774:	ac440220 	sw	a0,544(v0)
	RTCDATE=0x06102705; // update the date to Friday 27 Oct 2006
9d004778:	3c020610 	lui	v0,0x610
9d00477c:	24422705 	addiu	v0,v0,9989
9d004780:	3c04bf80 	lui	a0,0xbf80
9d004784:	ac820230 	sw	v0,560(a0)
	
	//Alarm setup
	RTCALRMCLR=0xCFFF; // clear ALRMEN, CHIME, AMASK and ARPT;
9d004788:	3405cfff 	li	a1,0xcfff
9d00478c:	3c04bf80 	lui	a0,0xbf80
9d004790:	ac850214 	sw	a1,532(a0)
	ALRMTIME=0x16153500; // set alarm time to 16 hr, 15 min, 35 sec
9d004794:	24633500 	addiu	v1,v1,13568
9d004798:	3c04bf80 	lui	a0,0xbf80
9d00479c:	ac830240 	sw	v1,576(a0)
	ALRMDATE=0x06102705; // set alarm date to Friday 27 Oct 2006
9d0047a0:	3c03bf80 	lui	v1,0xbf80
9d0047a4:	ac620250 	sw	v0,592(v1)
	RTCALRMbits.CHIME = 1;  //allows alarm to occur indefintely
9d0047a8:	3c02bf80 	lui	v0,0xbf80
9d0047ac:	94440210 	lhu	a0,528(v0)
9d0047b0:	24030001 	li	v1,1
9d0047b4:	7c647384 	ins	a0,v1,0xe,0x1
9d0047b8:	a4440210 	sh	a0,528(v0)
	RTCALRMbits.AMASK = 0b0001;  //sets alarm to happen every 1s
9d0047bc:	94440210 	lhu	a0,528(v0)
9d0047c0:	7c645a04 	ins	a0,v1,0x8,0x4
9d0047c4:	a4440210 	sh	a0,528(v0)
	RTCALRMbits.ALRMEN = 1; // re-enable the alarm
9d0047c8:	94440210 	lhu	a0,528(v0)
9d0047cc:	7c647bc4 	ins	a0,v1,0xf,0x1
9d0047d0:	a4440210 	sh	a0,528(v0)
	
	//IEC1SET=0x00008000; // Enable RTCC interrupts
	RTCCONbits.ON = 1; // turn on the RTCC
9d0047d4:	3c02bf80 	lui	v0,0xbf80
9d0047d8:	8c440200 	lw	a0,512(v0)
9d0047dc:	7c647bc4 	ins	a0,v1,0xf,0x1
9d0047e0:	ac440200 	sw	a0,512(v0)
	RTCCONbits.RTCCLKON = 1;  //Turn on clock
9d0047e4:	8c440200 	lw	a0,512(v0)
9d0047e8:	7c643184 	ins	a0,v1,0x6,0x1
9d0047ec:	ac440200 	sw	a0,512(v0)
	while(!(RTCCON&0x40)); // wait for clock to be turned on
9d0047f0:	3c02bf80 	lui	v0,0xbf80
9d0047f4:	8c430200 	lw	v1,512(v0)
9d0047f8:	30630040 	andi	v1,v1,0x40
9d0047fc:	1060fffd 	beqz	v1,9d0047f4 <.LVL3+0xb0>
9d004800:	3c049d00 	lui	a0,0x9d00
	//RTCCONbits.RTCOE = 1;
	NU32_WriteUART3("\r\ntest main 2");
9d004804:	0f401450 	jal	9d005140 <NU32_WriteUART3>
9d004808:	24845ee0 	addiu	a0,a0,24288

9d00480c <.LVL4>:

	__builtin_enable_interrupts();  // INT step 7: enable interrupts at CPU
9d00480c:	41626020 	ei	v0
	NU32_WriteUART3("\r\ntest main 3");
9d004810:	3c049d00 	lui	a0,0x9d00
9d004814:	0f401450 	jal	9d005140 <NU32_WriteUART3>
9d004818:	24845ef0 	addiu	a0,a0,24304

9d00481c <.LVL5>:
9d00481c:	0b401207 	j	9d00481c <.LVL5>
9d004820:	00000000 	nop

9d004824 <Timer_ISR>:
#include "NU32.h"

volatile int count = 0;

//timer interrupt
void __ISR(_TIMER_1_VECTOR, IPL1SOFT) Timer_ISR(void) {    //Step 1
9d004824:	415de800 	rdpgpr	sp,sp
9d004828:	401a7000 	mfc0	k0,c0_epc
9d00482c:	401b6000 	mfc0	k1,c0_status
9d004830:	27bdff90 	addiu	sp,sp,-112
9d004834:	afba006c 	sw	k0,108(sp)
9d004838:	401a6002 	mfc0	k0,c0_srsctl
9d00483c:	afbb0068 	sw	k1,104(sp)
9d004840:	afba0064 	sw	k0,100(sp)
9d004844:	7c1b7844 	ins	k1,zero,0x1,0xf
9d004848:	377b0400 	ori	k1,k1,0x400
9d00484c:	409b6000 	mtc0	k1,c0_status
9d004850:	afbf0054 	sw	ra,84(sp)
9d004854:	afb90050 	sw	t9,80(sp)
9d004858:	afb8004c 	sw	t8,76(sp)
9d00485c:	afaf0048 	sw	t7,72(sp)
9d004860:	afae0044 	sw	t6,68(sp)
9d004864:	afad0040 	sw	t5,64(sp)
9d004868:	afac003c 	sw	t4,60(sp)
9d00486c:	afab0038 	sw	t3,56(sp)
9d004870:	afaa0034 	sw	t2,52(sp)
9d004874:	afa90030 	sw	t1,48(sp)
9d004878:	afa8002c 	sw	t0,44(sp)
9d00487c:	afa70028 	sw	a3,40(sp)
9d004880:	afa60024 	sw	a2,36(sp)
9d004884:	afa50020 	sw	a1,32(sp)
9d004888:	afa4001c 	sw	a0,28(sp)
9d00488c:	afa30018 	sw	v1,24(sp)
9d004890:	afa20014 	sw	v0,20(sp)
9d004894:	afa10010 	sw	at,16(sp)
9d004898:	00001012 	mflo	v0
9d00489c:	afa2005c 	sw	v0,92(sp)
9d0048a0:	00001810 	mfhi	v1
9d0048a4:	afa30058 	sw	v1,88(sp)
		
	//causes interrupt to wait 50 cycles (essentially slows interrupt from 0.2 seconds to 10 seconds)	
	if (count < 50) {
9d0048a8:	8f828040 	lw	v0,-32704(gp)
9d0048ac:	28420032 	slti	v0,v0,50
9d0048b0:	10400006 	beqz	v0,9d0048cc <.LBB2>
9d0048b4:	00000000 	nop
		count++;
9d0048b8:	8f828040 	lw	v0,-32704(gp)
9d0048bc:	24420001 	addiu	v0,v0,1
9d0048c0:	af828040 	sw	v0,-32704(gp)
9d0048c4:	0b401237 	j	9d0048dc <.LBE2+0x4>
9d0048c8:	3c02bf88 	lui	v0,0xbf88

9d0048cc <.LBB2>:
	}		
		
	//what we want the interrupt to actually do	
	else {
		invDayNight(); //invert day/night mode
9d0048cc:	0f400b38 	jal	9d002ce0 <invDayNight>
9d0048d0:	00000000 	nop

9d0048d4 <.LVL0>:
		count = 0; 
9d0048d4:	af808040 	sw	zero,-32704(gp)

9d0048d8 <.LBE2>:
	}
		
	IFS0bits.T1IF = 0;  //clears interrupt flag
9d0048d8:	3c02bf88 	lui	v0,0xbf88
9d0048dc:	8c431030 	lw	v1,4144(v0)
9d0048e0:	7c032104 	ins	v1,zero,0x4,0x1
9d0048e4:	ac431030 	sw	v1,4144(v0)
}
9d0048e8:	8fa2005c 	lw	v0,92(sp)
9d0048ec:	00400013 	mtlo	v0
9d0048f0:	8fa30058 	lw	v1,88(sp)
9d0048f4:	00600011 	mthi	v1
9d0048f8:	8fbf0054 	lw	ra,84(sp)
9d0048fc:	8fb90050 	lw	t9,80(sp)
9d004900:	8fb8004c 	lw	t8,76(sp)
9d004904:	8faf0048 	lw	t7,72(sp)
9d004908:	8fae0044 	lw	t6,68(sp)
9d00490c:	8fad0040 	lw	t5,64(sp)
9d004910:	8fac003c 	lw	t4,60(sp)
9d004914:	8fab0038 	lw	t3,56(sp)
9d004918:	8faa0034 	lw	t2,52(sp)
9d00491c:	8fa90030 	lw	t1,48(sp)
9d004920:	8fa8002c 	lw	t0,44(sp)
9d004924:	8fa70028 	lw	a3,40(sp)
9d004928:	8fa60024 	lw	a2,36(sp)
9d00492c:	8fa50020 	lw	a1,32(sp)
9d004930:	8fa4001c 	lw	a0,28(sp)
9d004934:	8fa30018 	lw	v1,24(sp)
9d004938:	8fa20014 	lw	v0,20(sp)
9d00493c:	8fa10010 	lw	at,16(sp)
9d004940:	41606000 	di
9d004944:	000000c0 	ehb
9d004948:	8fba006c 	lw	k0,108(sp)
9d00494c:	8fbb0068 	lw	k1,104(sp)
9d004950:	409a7000 	mtc0	k0,c0_epc
9d004954:	8fba0064 	lw	k0,100(sp)
9d004958:	27bd0070 	addiu	sp,sp,112
9d00495c:	409a6002 	mtc0	k0,c0_srsctl
9d004960:	41dde800 	wrpgpr	sp,sp
9d004964:	409b6000 	mtc0	k1,c0_status
9d004968:	42000018 	eret

9d00496c <initRTCTimer>:


void initRTCTimer(void) {
9d00496c:	27bdfff8 	addiu	sp,sp,-8
9d004970:	afbf0004 	sw	ra,4(sp)

	__builtin_disable_interrupts(); // INT step 2: disable interrupts at CPU
9d004974:	41626000 	di	v0
9d004978:	000000c0 	ehb

	//timer setup                   // INT step 3: setup peripheral
	PR1 = 62499;                    //             set period register
9d00497c:	3403f423 	li	v1,0xf423
9d004980:	3c02bf80 	lui	v0,0xbf80
9d004984:	ac430620 	sw	v1,1568(v0)
	TMR1 = 0;                       //             initialize count to 0
9d004988:	3c02bf80 	lui	v0,0xbf80
9d00498c:	ac400610 	sw	zero,1552(v0)
	T1CONbits.TCKPS = 0b11;         //             set prescaler to 256
9d004990:	3c02bf80 	lui	v0,0xbf80
9d004994:	94430600 	lhu	v1,1536(v0)
9d004998:	24040003 	li	a0,3
9d00499c:	7c832904 	ins	v1,a0,0x4,0x2
9d0049a0:	a4430600 	sh	v1,1536(v0)
	T1CONbits.ON = 1;               //             turn on Timer1
9d0049a4:	94440600 	lhu	a0,1536(v0)
9d0049a8:	24030001 	li	v1,1
9d0049ac:	7c647bc4 	ins	a0,v1,0xf,0x1
9d0049b0:	a4440600 	sh	a0,1536(v0)
	IPC1bits.T1IP = 1;              // INT step 4: priority
9d0049b4:	3c02bf88 	lui	v0,0xbf88
9d0049b8:	8c4410a0 	lw	a0,4256(v0)
9d0049bc:	7c642084 	ins	a0,v1,0x2,0x3
9d0049c0:	ac4410a0 	sw	a0,4256(v0)
	IPC1bits.T1IS = 0;
9d0049c4:	8c4410a0 	lw	a0,4256(v0)
9d0049c8:	7c040804 	ins	a0,zero,0x0,0x2
9d0049cc:	ac4410a0 	sw	a0,4256(v0)
	IFS0bits.T1IF = 0;              // INT step 5: clear interrupt flag   
9d0049d0:	3c02bf88 	lui	v0,0xbf88
9d0049d4:	8c441030 	lw	a0,4144(v0)
9d0049d8:	7c042104 	ins	a0,zero,0x4,0x1
9d0049dc:	ac441030 	sw	a0,4144(v0)
	IEC0bits.T1IE = 1;              // INT step 6: enable interrupt
9d0049e0:	3c02bf88 	lui	v0,0xbf88
9d0049e4:	8c441060 	lw	a0,4192(v0)
9d0049e8:	7c642104 	ins	a0,v1,0x4,0x1
9d0049ec:	ac441060 	sw	a0,4192(v0)
	
	__builtin_enable_interrupts();  // INT step 7: enable interrupts at CPU
9d0049f0:	41626020 	ei	v0
	
9d0049f4:	8fbf0004 	lw	ra,4(sp)
9d0049f8:	03e00008 	jr	ra
9d0049fc:	27bd0008 	addiu	sp,sp,8

Disassembly of section .text.fp32mul:

9d004a00 <__mulsf3>:
9d004a00:	00043dc2 30e700ff 00054dc2 312900ff     .=.....0.M....)1
9d004a10:	3c0a8000 00043200 00ca3025 00054200     ...<.2..%0...B..
9d004a20:	010a4025 00856026 014c5024 24ecffff     %@..&`..$PL....$
9d004a30:	2d8100fe 10200021 00000000              ...-!. .....

9d004a3c <Clab1>:
9d004a3c:	252cffff 	addiu	t4,t1,-1
9d004a40:	2d8100fe 	sltiu	at,t4,254
9d004a44:	10200036 	beqz	at,9d004b20 <CspecB>
9d004a48:	00000000 	nop

9d004a4c <Clab2>:
9d004a4c:	00c80019 	multu	a2,t0
9d004a50:	00005812 	mflo	t3
9d004a54:	11600002 	beqz	t3,9d004a60 <i17>
9d004a58:	00003010 	mfhi	a2
9d004a5c:	34c60001 	ori	a2,a2,0x1

9d004a60 <i17>:
9d004a60:	04c00003 	bltz	a2,9d004a70 <i18>
9d004a64:	00000000 	nop
9d004a68:	00063040 	sll	a2,a2,0x1
9d004a6c:	24e7ffff 	addiu	a3,a3,-1

9d004a70 <i18>:
9d004a70:	252cff82 	addiu	t4,t1,-126
9d004a74:	00ec3821 	addu	a3,a3,t4
9d004a78:	24ecffff 	addiu	t4,a3,-1
9d004a7c:	2d8100fe 	sltiu	at,t4,254
9d004a80:	1020003a 	beqz	at,9d004b6c <Coveund>
9d004a84:	00000000 	nop

9d004a88 <Clab8>:
9d004a88:	24c60080 	addiu	a2,a2,128
9d004a8c:	2ccc0080 	sltiu	t4,a2,128
9d004a90:	00ec3821 	addu	a3,a3,t4
9d004a94:	00066202 	srl	t4,a2,0x8
9d004a98:	318c0001 	andi	t4,t4,0x1
9d004a9c:	00cc3023 	subu	a2,a2,t4
9d004aa0:	00063040 	sll	a2,a2,0x1
9d004aa4:	00063242 	srl	a2,a2,0x9
9d004aa8:	000765c0 	sll	t4,a3,0x17
9d004aac:	00cc3025 	or	a2,a2,t4
9d004ab0:	00ca1025 	or	v0,a2,t2

9d004ab4 <C999>:
9d004ab4:	03e00008 	jr	ra
9d004ab8:	00000000 	nop

9d004abc <CspecA>:
9d004abc:	14e0000d 	bnez	a3,9d004af4 <i19>
9d004ac0:	00000000 	nop
9d004ac4:	00c63021 	addu	a2,a2,a2
9d004ac8:	10c00005 	beqz	a2,9d004ae0 <i20>
9d004acc:	00000000 	nop
9d004ad0:	70cb5820 	clz	t3,a2
9d004ad4:	00eb3823 	subu	a3,a3,t3
9d004ad8:	1000ffd8 	b	9d004a3c <Clab1>
9d004adc:	01663004 	sllv	a2,a2,t3

9d004ae0 <i20>:
9d004ae0:	240100ff 	li	at,255
9d004ae4:	1121001f 	beq	t1,at,9d004b64 <Cnan>
9d004ae8:	00000000 	nop
9d004aec:	10000015 	b	9d004b44 <Czer>
9d004af0:	00000000 	nop

9d004af4 <i19>:
9d004af4:	00c66021 	addu	t4,a2,a2
9d004af8:	1580001a 	bnez	t4,9d004b64 <Cnan>
9d004afc:	00000000 	nop
9d004b00:	15200004 	bnez	t1,9d004b14 <i21>
9d004b04:	00000000 	nop
9d004b08:	01086021 	addu	t4,t0,t0
9d004b0c:	11800015 	beqz	t4,9d004b64 <Cnan>
9d004b10:	00000000 	nop

9d004b14 <i21>:
9d004b14:	240100ff 	li	at,255
9d004b18:	1521000f 	bne	t1,at,9d004b58 <Cinf>
9d004b1c:	00000000 	nop

9d004b20 <CspecB>:
9d004b20:	1520000a 	bnez	t1,9d004b4c <i22>
9d004b24:	00000000 	nop
9d004b28:	01084021 	addu	t0,t0,t0
9d004b2c:	11000005 	beqz	t0,9d004b44 <Czer>
9d004b30:	00000000 	nop
9d004b34:	710b5820 	clz	t3,t0
9d004b38:	012b4823 	subu	t1,t1,t3
9d004b3c:	1000ffc3 	b	9d004a4c <Clab2>
9d004b40:	01684004 	sllv	t0,t0,t3

9d004b44 <Czer>:
9d004b44:	1000ffdb 	b	9d004ab4 <C999>
9d004b48:	000a1025 	or	v0,zero,t2

9d004b4c <i22>:
9d004b4c:	01086021 	addu	t4,t0,t0
9d004b50:	15800004 	bnez	t4,9d004b64 <Cnan>
9d004b54:	00000000 	nop

9d004b58 <Cinf>:
9d004b58:	3c017f80 	lui	at,0x7f80
9d004b5c:	1000ffd5 	b	9d004ab4 <C999>
9d004b60:	01411025 	or	v0,t2,at

9d004b64 <Cnan>:
9d004b64:	1000ffd3 	b	9d004ab4 <C999>
9d004b68:	3c02ffc0 	lui	v0,0xffc0

9d004b6c <Coveund>:
9d004b6c:	1ce0fffa 	bgtz	a3,9d004b58 <Cinf>
9d004b70:	00000000 	nop
9d004b74:	240b0001 	li	t3,1
9d004b78:	01675823 	subu	t3,t3,a3
9d004b7c:	2d610020 	sltiu	at,t3,32
9d004b80:	1020fff0 	beqz	at,9d004b44 <Czer>
9d004b84:	00000000 	nop
9d004b88:	240c0020 	li	t4,32
9d004b8c:	018b6023 	subu	t4,t4,t3
9d004b90:	01863804 	sllv	a3,a2,t4
9d004b94:	10e00002 	beqz	a3,9d004ba0 <i25>
9d004b98:	01663006 	srlv	a2,a2,t3
9d004b9c:	34c60002 	ori	a2,a2,0x2

9d004ba0 <i25>:
9d004ba0:	24070000 	li	a3,0
9d004ba4:	24cc0080 	addiu	t4,a2,128
9d004ba8:	0581ffb7 	bgez	t4,9d004a88 <Clab8>
9d004bac:	00000000 	nop
9d004bb0:	1000ffb5 	b	9d004a88 <Clab8>
9d004bb4:	24070001 	li	a3,1
9d004bb8:	00000000 	nop

Disassembly of section .text:

9d004bbc <IntUart1Handler>:
//defines

volatile int flag = 0;

//functions
void __ISR(_UART_1_VECTOR, IPL4SOFT) IntUart1Handler(void) {
9d004bbc:	415de800 	rdpgpr	sp,sp
9d004bc0:	401a7000 	mfc0	k0,c0_epc
9d004bc4:	401b6000 	mfc0	k1,c0_status
9d004bc8:	27bdffe0 	addiu	sp,sp,-32
9d004bcc:	afba001c 	sw	k0,28(sp)
9d004bd0:	401a6002 	mfc0	k0,c0_srsctl
9d004bd4:	afbb0018 	sw	k1,24(sp)
9d004bd8:	afba0014 	sw	k0,20(sp)
9d004bdc:	7c1b7844 	ins	k1,zero,0x1,0xf
9d004be0:	377b1000 	ori	k1,k1,0x1000
9d004be4:	409b6000 	mtc0	k1,c0_status
9d004be8:	afa4000c 	sw	a0,12(sp)
9d004bec:	afa30008 	sw	v1,8(sp)
9d004bf0:	afa20004 	sw	v0,4(sp)
	if (IFS0bits.U1RXIF) {       // check if interrupt generated by a RX event
9d004bf4:	3c02bf88 	lui	v0,0xbf88
9d004bf8:	8c421030 	lw	v0,4144(v0)
9d004bfc:	7c4206c0 	ext	v0,v0,0x1b,0x1
9d004c00:	10400012 	beqz	v0,9d004c4c <IntUart1Handler+0x90>
9d004c04:	3c02bf80 	lui	v0,0xbf80
		//code for changing day/night here

		if (U1RXREG == 'N')
9d004c08:	8c436030 	lw	v1,24624(v0)
9d004c0c:	2402004e 	li	v0,78
9d004c10:	1462000b 	bne	v1,v0,9d004c40 <IntUart1Handler+0x84>
9d004c14:	3c02bf88 	lui	v0,0xbf88
		{
			day_night = !day_night;
9d004c18:	8f828010 	lw	v0,-32752(gp)
9d004c1c:	2c420001 	sltiu	v0,v0,1
9d004c20:	af828010 	sw	v0,-32752(gp)
			NU32_LED1 = !NU32_LED1;
9d004c24:	3c02bf88 	lui	v0,0xbf88
9d004c28:	8c446160 	lw	a0,24928(v0)
9d004c2c:	38840001 	xori	a0,a0,0x1
9d004c30:	90436160 	lbu	v1,24928(v0)
9d004c34:	7c830004 	ins	v1,a0,0x0,0x1
9d004c38:	a0436160 	sb	v1,24928(v0)
		}

		//end code for changing day/night here
		IFS0bits.U1RXIF = 0;       // clear the RX interrupt flag
9d004c3c:	3c02bf88 	lui	v0,0xbf88
9d004c40:	8c431030 	lw	v1,4144(v0)
9d004c44:	7c03dec4 	ins	v1,zero,0x1b,0x1
9d004c48:	ac431030 	sw	v1,4144(v0)
	else if (IFS1bits.U3TXIF) { // if it is a TX interrupt 
	}
	else if (IFS1bits.U3EIF) {  // if it is an error interrupt. check U3STA for reason
	}
	*/
}
9d004c4c:	8fa4000c 	lw	a0,12(sp)
9d004c50:	8fa30008 	lw	v1,8(sp)
9d004c54:	8fa20004 	lw	v0,4(sp)
9d004c58:	41606000 	di
9d004c5c:	000000c0 	ehb
9d004c60:	8fba001c 	lw	k0,28(sp)
9d004c64:	8fbb0018 	lw	k1,24(sp)
9d004c68:	409a7000 	mtc0	k0,c0_epc
9d004c6c:	8fba0014 	lw	k0,20(sp)
9d004c70:	27bd0020 	addiu	sp,sp,32
9d004c74:	409a6002 	mtc0	k0,c0_srsctl
9d004c78:	41dde800 	wrpgpr	sp,sp
9d004c7c:	409b6000 	mtc0	k1,c0_status
9d004c80:	42000018 	eret

9d004c84 <initBluetooth>:

void initBluetooth(void)
{
9d004c84:	27bdfff8 	addiu	sp,sp,-8
9d004c88:	afbf0004 	sw	ra,4(sp)
	NU32_LED1 = 0;
9d004c8c:	3c02bf88 	lui	v0,0xbf88
9d004c90:	90436160 	lbu	v1,24928(v0)
9d004c94:	7c030004 	ins	v1,zero,0x0,0x1
9d004c98:	a0436160 	sb	v1,24928(v0)
	NU32_LED2 = 0;
9d004c9c:	90436160 	lbu	v1,24928(v0)
9d004ca0:	7c030844 	ins	v1,zero,0x1,0x1
9d004ca4:	a0436160 	sb	v1,24928(v0)

	__builtin_disable_interrupts();
9d004ca8:	41626000 	di	v0
9d004cac:	000000c0 	ehb

	// set baud to 9600, to match terminal emulator; use default 8N1 of UART
	U1MODEbits.BRGH = 0;
9d004cb0:	3c02bf80 	lui	v0,0xbf80
9d004cb4:	94436000 	lhu	v1,24576(v0)
9d004cb8:	7c0318c4 	ins	v1,zero,0x3,0x1
9d004cbc:	a4436000 	sh	v1,24576(v0)
	U1BRG = ((NU32_SYS_FREQ / 9600) / 16) - 1;
9d004cc0:	24040207 	li	a0,519
9d004cc4:	3c03bf80 	lui	v1,0xbf80
9d004cc8:	ac646040 	sw	a0,24640(v1)

	// configure TX & RX pins 
	U1STAbits.UTXEN = 1;
9d004ccc:	3c03bf80 	lui	v1,0xbf80
9d004cd0:	8c656010 	lw	a1,24592(v1)
9d004cd4:	24040001 	li	a0,1
9d004cd8:	7c855284 	ins	a1,a0,0xa,0x1
9d004cdc:	ac656010 	sw	a1,24592(v1)
	U1STAbits.URXEN = 1;
9d004ce0:	8c656010 	lw	a1,24592(v1)
9d004ce4:	7c856304 	ins	a1,a0,0xc,0x1
9d004ce8:	ac656010 	sw	a1,24592(v1)

	// configure using RTS and CTS
	U1MODEbits.UEN = 2;
9d004cec:	94456000 	lhu	a1,24576(v0)
9d004cf0:	24060002 	li	a2,2
9d004cf4:	7cc54a04 	ins	a1,a2,0x8,0x2
9d004cf8:	a4456000 	sh	a1,24576(v0)

	// configure the UART interrupts
	U1STAbits.URXISEL = 0x0; // RX interrupt when receive buffer not empty
9d004cfc:	8c656010 	lw	a1,24592(v1)
9d004d00:	7c053984 	ins	a1,zero,0x6,0x2
9d004d04:	ac656010 	sw	a1,24592(v1)
	IFS0bits.U1RXIF = 0;     // clear the rx interrupt flag.  for 
9d004d08:	3c03bf88 	lui	v1,0xbf88
9d004d0c:	8c651030 	lw	a1,4144(v1)
9d004d10:	7c05dec4 	ins	a1,zero,0x1b,0x1
9d004d14:	ac651030 	sw	a1,4144(v1)
							 // tx or error interrupts you would also need to clear
							 // the respective flags
	IPC6bits.U1IP = 4;       // interrupt priority
9d004d18:	3c03bf88 	lui	v1,0xbf88
9d004d1c:	8c6510f0 	lw	a1,4336(v1)
9d004d20:	24060004 	li	a2,4
9d004d24:	7cc52084 	ins	a1,a2,0x2,0x3
9d004d28:	ac6510f0 	sw	a1,4336(v1)
	IEC0bits.U1RXIE = 1;     // enable the RX interrupt
9d004d2c:	3c03bf88 	lui	v1,0xbf88
9d004d30:	8c651060 	lw	a1,4192(v1)
9d004d34:	7c85dec4 	ins	a1,a0,0x1b,0x1
9d004d38:	ac651060 	sw	a1,4192(v1)

							 // turn on UART1
	U1MODEbits.ON = 1;
9d004d3c:	94436000 	lhu	v1,24576(v0)
9d004d40:	7c837bc4 	ins	v1,a0,0xf,0x1
9d004d44:	a4436000 	sh	v1,24576(v0)
	__builtin_enable_interrupts();
9d004d48:	41626020 	ei	v0
}
9d004d4c:	8fbf0004 	lw	ra,4(sp)
9d004d50:	03e00008 	jr	ra
9d004d54:	27bd0008 	addiu	sp,sp,8

Disassembly of section .dinit:

9d004d58 <.dinit>:
9d004d58:	a000000c 	sb	zero,12(zero)
9d004d5c:	00000018 	mult	zero,zero
9d004d60:	00000000 	nop
9d004d64:	a0000024 	sb	zero,36(zero)
9d004d68:	00000004 	sllv	zero,zero,zero
9d004d6c:	00000000 	nop
9d004d70:	a0000028 	sb	zero,40(zero)
9d004d74:	00000004 	sllv	zero,zero,zero
9d004d78:	00000000 	nop
9d004d7c:	a0000198 	sb	zero,408(zero)
9d004d80:	00000064 	0x64
9d004d84:	00000000 	nop
9d004d88:	a0000000 	sb	zero,0(zero)
9d004d8c:	00000004 	sllv	zero,zero,zero
9d004d90:	00000001 	movf	zero,zero,$fcc0
9d004d94:	00000001 	movf	zero,zero,$fcc0
9d004d98:	a000002c 	sb	zero,44(zero)
9d004d9c:	00000001 	movf	zero,zero,$fcc0
9d004da0:	00000000 	nop
9d004da4:	a0000030 	sb	zero,48(zero)
9d004da8:	00000004 	sllv	zero,zero,zero
9d004dac:	00000000 	nop
9d004db0:	a0000034 	sb	zero,52(zero)
9d004db4:	00000004 	sllv	zero,zero,zero
9d004db8:	00000000 	nop
9d004dbc:	a000003c 	sb	zero,60(zero)
9d004dc0:	000000d4 	0xd4
9d004dc4:	00000001 	movf	zero,zero,$fcc0
9d004dc8:	a00000a0 	sb	zero,160(zero)
9d004dcc:	a00000bc 	sb	zero,188(zero)
9d004dd0:	a00000d8 	sb	zero,216(zero)
9d004dd4:	a000009c 	sb	zero,156(zero)
9d004dd8:	a0000110 	sb	zero,272(zero)
9d004ddc:	00000001 	movf	zero,zero,$fcc0
	...
9d004e2c:	ffffffff 	sdc3	$31,-1(ra)
9d004e30:	ffffffff 	sdc3	$31,-1(ra)
9d004e34:	00000000 	nop
9d004e38:	00000040 	ssnop
9d004e3c:	00001009 	jalr	v0,zero
9d004e40:	00000000 	nop
9d004e44:	9d00622c 	0x9d00622c
9d004e48:	ffffffff 	sdc3	$31,-1(ra)
	...
9d004e58:	00011002 	srl	v0,at,0x0
9d004e5c:	00000000 	nop
9d004e60:	9d00622c 	0x9d00622c
9d004e64:	ffffffff 	sdc3	$31,-1(ra)
	...
9d004e74:	00020002 	srl	zero,v0,0x0
9d004e78:	00000000 	nop
9d004e7c:	9d00622c 	0x9d00622c
9d004e80:	fffffffd 	sdc3	$31,-3(ra)
	...
9d004e9c:	a0000110 	sb	zero,272(zero)
9d004ea0:	00000088 	0x88
9d004ea4:	00000000 	nop
9d004ea8:	a0000004 	sb	zero,4(zero)
9d004eac:	00000004 	sllv	zero,zero,zero
9d004eb0:	00000001 	movf	zero,zero,$fcc0
9d004eb4:	a000003c 	sb	zero,60(zero)
9d004eb8:	a0000038 	sb	zero,56(zero)
9d004ebc:	00000004 	sllv	zero,zero,zero
9d004ec0:	00000000 	nop
9d004ec4:	a0000008 	sb	zero,8(zero)
9d004ec8:	00000004 	sllv	zero,zero,zero
9d004ecc:	00000001 	movf	zero,zero,$fcc0
9d004ed0:	00000002 	srl	zero,zero,0x0
9d004ed4:	00000000 	nop

Disassembly of section .text:

9d004ed8 <BUTTon_manual_ISR>:
#include "useLCD.h"

extern volatile int manual_auto = 0; //manual = 1, auto = 0

//manual_auto control
void __ISR(11, IPL2SOFT) BUTTon_manual_ISR(void) {    //Step 1
9d004ed8:	415de800 	rdpgpr	sp,sp
9d004edc:	401a7000 	mfc0	k0,c0_epc
9d004ee0:	401b6000 	mfc0	k1,c0_status
9d004ee4:	27bdffe0 	addiu	sp,sp,-32
9d004ee8:	afba001c 	sw	k0,28(sp)
9d004eec:	401a6002 	mfc0	k0,c0_srsctl
9d004ef0:	afbb0018 	sw	k1,24(sp)
9d004ef4:	afba0014 	sw	k0,20(sp)
9d004ef8:	7c1b7844 	ins	k1,zero,0x1,0xf
9d004efc:	377b0800 	ori	k1,k1,0x800
9d004f00:	409b6000 	mtc0	k1,c0_status
9d004f04:	afbf000c 	sw	ra,12(sp)
9d004f08:	afa30008 	sw	v1,8(sp)
9d004f0c:	afa20004 	sw	v0,4(sp)
	
	_CP0_SET_COUNT(0);   //from example on moodle
9d004f10:	00001021 	move	v0,zero
9d004f14:	40824800 	mtc0	v0,c0_count
9d004f18:	000000c0 	ehb
	
	while( _CP0_GET_COUNT() < 100000 )  ;   // 1 Tick of Core Timer = 25ns -> 2.5ms = 100000 * 25ns
9d004f1c:	3c030001 	lui	v1,0x1
9d004f20:	346386a0 	ori	v1,v1,0x86a0
9d004f24:	40024800 	mfc0	v0,c0_count
9d004f28:	0043102b 	sltu	v0,v0,v1
9d004f2c:	1440fffd 	bnez	v0,9d004f24 <BUTTon_manual_ISR+0x4c>
9d004f30:	3c02bf88 	lui	v0,0xbf88
	
	if(!PORTDbits.RD9){
9d004f34:	8c4260d0 	lw	v0,24784(v0)
9d004f38:	30420200 	andi	v0,v0,0x200
9d004f3c:	14400005 	bnez	v0,9d004f54 <BUTTon_manual_ISR+0x7c>
9d004f40:	3c02bf88 	lui	v0,0xbf88
		manual_auto = !manual_auto;
9d004f44:	8f828038 	lw	v0,-32712(gp)
9d004f48:	2c420001 	sltiu	v0,v0,1
9d004f4c:	af828038 	sw	v0,-32712(gp)
	}

    IFS0bits.INT2IF = 0;            // clear interrupt flag IFS0<3>	
9d004f50:	3c02bf88 	lui	v0,0xbf88
9d004f54:	8c431030 	lw	v1,4144(v0)
9d004f58:	7c035ac4 	ins	v1,zero,0xb,0x1
9d004f5c:	ac431030 	sw	v1,4144(v0)
}
9d004f60:	8fbf000c 	lw	ra,12(sp)
9d004f64:	8fa30008 	lw	v1,8(sp)
9d004f68:	8fa20004 	lw	v0,4(sp)
9d004f6c:	41606000 	di
9d004f70:	000000c0 	ehb
9d004f74:	8fba001c 	lw	k0,28(sp)
9d004f78:	8fbb0018 	lw	k1,24(sp)
9d004f7c:	409a7000 	mtc0	k0,c0_epc
9d004f80:	8fba0014 	lw	k0,20(sp)
9d004f84:	27bd0020 	addiu	sp,sp,32
9d004f88:	409a6002 	mtc0	k0,c0_srsctl
9d004f8c:	41dde800 	wrpgpr	sp,sp
9d004f90:	409b6000 	mtc0	k1,c0_status
9d004f94:	42000018 	eret

9d004f98 <initDigital>:


void initDigital (void) {
9d004f98:	27bdfff8 	addiu	sp,sp,-8
9d004f9c:	afbf0004 	sw	ra,4(sp)
	
	__builtin_disable_interrupts(); // INT step 2: disable interrupts at CPU
9d004fa0:	41626000 	di	v0
9d004fa4:	000000c0 	ehb
	
  //sw_manual_auto
  INTCONbits.INT2EP = 0;			//INT 0 triggers on falling edge  //step 3
9d004fa8:	3c02bf88 	lui	v0,0xbf88
9d004fac:	8c431000 	lw	v1,4096(v0)
9d004fb0:	7c031084 	ins	v1,zero,0x2,0x1
9d004fb4:	ac431000 	sw	v1,4096(v0)
  IPC2bits.INT2IP = 2;				//step 4
9d004fb8:	3c02bf88 	lui	v0,0xbf88
9d004fbc:	8c4310b0 	lw	v1,4272(v0)
9d004fc0:	24040002 	li	a0,2
9d004fc4:	7c83e684 	ins	v1,a0,0x1a,0x3
9d004fc8:	ac4310b0 	sw	v1,4272(v0)
  IPC2bits.INT2IS = 1;				//step 4 cont.
9d004fcc:	8c4310b0 	lw	v1,4272(v0)
9d004fd0:	24040001 	li	a0,1
9d004fd4:	7c83ce04 	ins	v1,a0,0x18,0x2
9d004fd8:	ac4310b0 	sw	v1,4272(v0)
  IFS0bits.INT2IF = 0;  			//step 5
9d004fdc:	3c02bf88 	lui	v0,0xbf88
9d004fe0:	8c431030 	lw	v1,4144(v0)
9d004fe4:	7c035ac4 	ins	v1,zero,0xb,0x1
9d004fe8:	ac431030 	sw	v1,4144(v0)
  IEC0bits.INT2IE = 1;  			//step 6
9d004fec:	3c02bf88 	lui	v0,0xbf88
9d004ff0:	8c431060 	lw	v1,4192(v0)
9d004ff4:	7c835ac4 	ins	v1,a0,0xb,0x1
9d004ff8:	ac431060 	sw	v1,4192(v0)
  
  __builtin_enable_interrupts();  // INT step 7: enable interrupts at CPU
9d004ffc:	41626020 	ei	v0
	
}
9d005000:	8fbf0004 	lw	ra,4(sp)
9d005004:	03e00008 	jr	ra
9d005008:	27bd0008 	addiu	sp,sp,8

9d00500c <getManualAuto>:

int getManualAuto(void)
{
	return manual_auto;
9d00500c:	8f828038 	lw	v0,-32712(gp)
}
9d005010:	03e00008 	jr	ra
9d005014:	00000000 	nop

9d005018 <invManualAuto>:

void invManualAuto(void)
{
	manual_auto = !manual_auto;
9d005018:	8f828038 	lw	v0,-32712(gp)
9d00501c:	2c420001 	sltiu	v0,v0,1
9d005020:	af828038 	sw	v0,-32712(gp)
9d005024:	03e00008 	jr	ra
9d005028:	00000000 	nop

9d00502c <NU32_Startup>:

#define NU32_DESIRED_BAUD 115200    // Baudrate for RS232

//  Make NU32_LED1 and NU32_LED2 pins outputs (NU32_USER is by default an input)
void NU32_Startup() {
  TRISFCLR = 0x0003;  // Make F0 and F1 outputs (LED1 and LED2)
9d00502c:	24030003 	li	v1,3
9d005030:	3c02bf88 	lui	v0,0xbf88
9d005034:	ac436144 	sw	v1,24900(v0)
  NU32_LED1 = 1;      // LED1 is off
9d005038:	3c02bf88 	lui	v0,0xbf88
9d00503c:	90446160 	lbu	a0,24928(v0)
9d005040:	24030001 	li	v1,1
9d005044:	7c640004 	ins	a0,v1,0x0,0x1
9d005048:	a0446160 	sb	a0,24928(v0)
  NU32_LED2 = 0;      // LED2 is on
9d00504c:	90446160 	lbu	a0,24928(v0)
9d005050:	7c040844 	ins	a0,zero,0x1,0x1
9d005054:	a0446160 	sb	a0,24928(v0)

  // turn on UART3 without an interrupt
  U3MODEbits.BRGH = 0; // set baud to NU32_DESIRED_BAUD
9d005058:	3c02bf80 	lui	v0,0xbf80
9d00505c:	94446400 	lhu	a0,25600(v0)
9d005060:	7c0418c4 	ins	a0,zero,0x3,0x1
9d005064:	a4446400 	sh	a0,25600(v0)
  U3BRG = ((NU32_SYS_FREQ / NU32_DESIRED_BAUD) / 16) - 1;
9d005068:	2405002a 	li	a1,42
9d00506c:	3c04bf80 	lui	a0,0xbf80
9d005070:	ac856440 	sw	a1,25664(a0)

  // 8 bit, no parity bit, and 1 stop bit (8N1 setup)
  U3MODEbits.PDSEL = 0;
9d005074:	94446400 	lhu	a0,25600(v0)
9d005078:	7c041044 	ins	a0,zero,0x1,0x2
9d00507c:	a4446400 	sh	a0,25600(v0)
  U3MODEbits.STSEL = 0;
9d005080:	94446400 	lhu	a0,25600(v0)
9d005084:	7c040004 	ins	a0,zero,0x0,0x1
9d005088:	a4446400 	sh	a0,25600(v0)

  // configure TX & RX pins as output & input pins
  U3STAbits.UTXEN = 1;
9d00508c:	3c04bf80 	lui	a0,0xbf80
9d005090:	8c856410 	lw	a1,25616(a0)
9d005094:	7c655284 	ins	a1,v1,0xa,0x1
9d005098:	ac856410 	sw	a1,25616(a0)
  U3STAbits.URXEN = 1;
9d00509c:	8c856410 	lw	a1,25616(a0)
9d0050a0:	7c656304 	ins	a1,v1,0xc,0x1
9d0050a4:	ac856410 	sw	a1,25616(a0)
  // configure hardware flow control using RTS and CTS
  U3MODEbits.UEN = 2;
9d0050a8:	94446400 	lhu	a0,25600(v0)
9d0050ac:	24050002 	li	a1,2
9d0050b0:	7ca44a04 	ins	a0,a1,0x8,0x2
9d0050b4:	a4446400 	sh	a0,25600(v0)

  // enable the uart
  U3MODEbits.ON = 1;
9d0050b8:	94446400 	lhu	a0,25600(v0)
9d0050bc:	7c647bc4 	ins	a0,v1,0xf,0x1
9d0050c0:	a4446400 	sh	a0,25600(v0)
9d0050c4:	03e00008 	jr	ra
9d0050c8:	00000000 	nop

9d0050cc <NU32_ReadUART3>:
// Read from UART3
// block other functions until you get a '\r' or '\n'
// send the pointer to your char array and the number of elements in the array
void NU32_ReadUART3(char * message, int maxLength) {
  char data = 0;
  int complete = 0, num_bytes = 0;
9d0050cc:	00003021 	move	a2,zero
  // loop until you get a '\r' or '\n'
  while (!complete) {
    if (U3STAbits.URXDA) { // if data is available
9d0050d0:	3c03bf80 	lui	v1,0xbf80
      data = U3RXREG;      // read the data
9d0050d4:	3c08bf80 	lui	t0,0xbf80
      if ((data == '\n') || (data == '\r')) {
9d0050d8:	2407000a 	li	a3,10
9d0050dc:	0b401447 	j	9d00511c <NU32_ReadUART3+0x50>
9d0050e0:	2409000d 	li	t1,13
void NU32_ReadUART3(char * message, int maxLength) {
  char data = 0;
  int complete = 0, num_bytes = 0;
  // loop until you get a '\r' or '\n'
  while (!complete) {
    if (U3STAbits.URXDA) { // if data is available
9d0050e4:	8c626410 	lw	v0,25616(v1)
9d0050e8:	30420001 	andi	v0,v0,0x1
9d0050ec:	1040fffd 	beqz	v0,9d0050e4 <NU32_ReadUART3+0x18>
9d0050f0:	00000000 	nop
      data = U3RXREG;      // read the data
9d0050f4:	8d026430 	lw	v0,25648(t0)
9d0050f8:	7c021420 	seb	v0,v0
      if ((data == '\n') || (data == '\r')) {
9d0050fc:	5047000e 	beql	v0,a3,9d005138 <NU32_ReadUART3+0x6c>
9d005100:	00862021 	addu	a0,a0,a2
9d005104:	1049000b 	beq	v0,t1,9d005134 <NU32_ReadUART3+0x68>
9d005108:	00865021 	addu	t2,a0,a2
        complete = 1;
      } else {
        message[num_bytes] = data;
9d00510c:	a1420000 	sb	v0,0(t2)
        ++num_bytes;
9d005110:	24c60001 	addiu	a2,a2,1
        // roll over if the array is too small
        if (num_bytes >= maxLength) {
9d005114:	00c5102a 	slt	v0,a2,a1
          num_bytes = 0;
9d005118:	0002300a 	movz	a2,zero,v0
void NU32_ReadUART3(char * message, int maxLength) {
  char data = 0;
  int complete = 0, num_bytes = 0;
  // loop until you get a '\r' or '\n'
  while (!complete) {
    if (U3STAbits.URXDA) { // if data is available
9d00511c:	8c626410 	lw	v0,25616(v1)
9d005120:	30420001 	andi	v0,v0,0x1
9d005124:	1040ffef 	beqz	v0,9d0050e4 <NU32_ReadUART3+0x18>
9d005128:	00000000 	nop
9d00512c:	0b40143d 	j	9d0050f4 <NU32_ReadUART3+0x28>
9d005130:	00000000 	nop
        }
      }
    }
  }
  // end the string
  message[num_bytes] = '\0';
9d005134:	00862021 	addu	a0,a0,a2
9d005138:	03e00008 	jr	ra
9d00513c:	a0800000 	sb	zero,0(a0)

9d005140 <NU32_WriteUART3>:
}

// Write a character array using UART3
void NU32_WriteUART3(const char * string) {
  while (*string != '\0') {
9d005140:	80850000 	lb	a1,0(a0)
9d005144:	10a0000b 	beqz	a1,9d005174 <NU32_WriteUART3+0x34>
9d005148:	3c03bf80 	lui	v1,0xbf80
    while (U3STAbits.UTXBF) {
      ; // wait until tx buffer isn't full
    }
    U3TXREG = *string;
9d00514c:	3c06bf80 	lui	a2,0xbf80
}

// Write a character array using UART3
void NU32_WriteUART3(const char * string) {
  while (*string != '\0') {
    while (U3STAbits.UTXBF) {
9d005150:	8c626410 	lw	v0,25616(v1)
9d005154:	30420200 	andi	v0,v0,0x200
9d005158:	1440fffd 	bnez	v0,9d005150 <NU32_WriteUART3+0x10>
9d00515c:	00000000 	nop
      ; // wait until tx buffer isn't full
    }
    U3TXREG = *string;
9d005160:	acc56420 	sw	a1,25632(a2)
    ++string;
9d005164:	24840001 	addiu	a0,a0,1
  message[num_bytes] = '\0';
}

// Write a character array using UART3
void NU32_WriteUART3(const char * string) {
  while (*string != '\0') {
9d005168:	80850000 	lb	a1,0(a0)
9d00516c:	14a0fff8 	bnez	a1,9d005150 <NU32_WriteUART3+0x10>
9d005170:	00000000 	nop
9d005174:	03e00008 	jr	ra
9d005178:	00000000 	nop

Disassembly of section .text._outcnvrt:

9d00517c <_outcnvrt>:
9d00517c:	27bdffc8 	addiu	sp,sp,-56
9d005180:	afbf0034 	sw	ra,52(sp)
9d005184:	afb70030 	sw	s7,48(sp)
9d005188:	afb6002c 	sw	s6,44(sp)
9d00518c:	afb50028 	sw	s5,40(sp)
9d005190:	afb40024 	sw	s4,36(sp)
9d005194:	afb30020 	sw	s3,32(sp)
9d005198:	afb2001c 	sw	s2,28(sp)
9d00519c:	afb10018 	sw	s1,24(sp)
9d0051a0:	afb00014 	sw	s0,20(sp)
9d0051a4:	00808821 	move	s1,a0
9d0051a8:	00a08021 	move	s0,a1
9d0051ac:	97b70048 	lhu	s7,72(sp)
9d0051b0:	32f70008 	andi	s7,s7,0x8
9d0051b4:	32f7ffff 	andi	s7,s7,0xffff
9d0051b8:	00c0a021 	move	s4,a2
9d0051bc:	00e0a821 	move	s5,a3
9d0051c0:	16e00003 	bnez	s7,9d0051d0 <_outcnvrt+0x54>
9d0051c4:	00c7b02a 	slt	s6,a2,a3
9d0051c8:	16c0002a 	bnez	s6,9d005274 <_outcnvrt+0xf8>
9d0051cc:	00000000 	nop
9d0051d0:	02149021 	addu	s2,s0,s4
9d0051d4:	0b40147c 	j	9d0051f0 <_outcnvrt+0x74>
9d0051d8:	2413ffff 	li	s3,-1
9d0051dc:	26100001 	addiu	s0,s0,1
9d0051e0:	0f40163f 	jal	9d0058fc <fputc>
9d0051e4:	8204ffff 	lb	a0,-1(s0)
9d0051e8:	10530007 	beq	v0,s3,9d005208 <_outcnvrt+0x8c>
9d0051ec:	02a01021 	move	v0,s5
9d0051f0:	1612fffa 	bne	s0,s2,9d0051dc <_outcnvrt+0x60>
9d0051f4:	02202821 	move	a1,s1
9d0051f8:	12e00003 	beqz	s7,9d005208 <_outcnvrt+0x8c>
9d0051fc:	02a01021 	move	v0,s5
9d005200:	56c0000d 	bnezl	s6,9d005238 <_outcnvrt+0xbc>
9d005204:	02202021 	move	a0,s1
9d005208:	0296100a 	movz	v0,s4,s6
9d00520c:	8fbf0034 	lw	ra,52(sp)
9d005210:	8fb70030 	lw	s7,48(sp)
9d005214:	8fb6002c 	lw	s6,44(sp)
9d005218:	8fb50028 	lw	s5,40(sp)
9d00521c:	8fb40024 	lw	s4,36(sp)
9d005220:	8fb30020 	lw	s3,32(sp)
9d005224:	8fb2001c 	lw	s2,28(sp)
9d005228:	8fb10018 	lw	s1,24(sp)
9d00522c:	8fb00014 	lw	s0,20(sp)
9d005230:	03e00008 	jr	ra
9d005234:	27bd0038 	addiu	sp,sp,56
9d005238:	0f401614 	jal	9d005850 <.LFE0>
9d00523c:	02b42823 	subu	a1,s5,s4
9d005240:	02a01021 	move	v0,s5
9d005244:	0296100a 	movz	v0,s4,s6
9d005248:	8fbf0034 	lw	ra,52(sp)
9d00524c:	8fb70030 	lw	s7,48(sp)
9d005250:	8fb6002c 	lw	s6,44(sp)
9d005254:	8fb50028 	lw	s5,40(sp)
9d005258:	8fb40024 	lw	s4,36(sp)
9d00525c:	8fb30020 	lw	s3,32(sp)
9d005260:	8fb2001c 	lw	s2,28(sp)
9d005264:	8fb10018 	lw	s1,24(sp)
9d005268:	8fb00014 	lw	s0,20(sp)
9d00526c:	03e00008 	jr	ra
9d005270:	27bd0038 	addiu	sp,sp,56
9d005274:	0f401614 	jal	9d005850 <.LFE0>
9d005278:	00e62823 	subu	a1,a3,a2
9d00527c:	2403ffff 	li	v1,-1
9d005280:	1443ffd3 	bne	v0,v1,9d0051d0 <_outcnvrt+0x54>
9d005284:	02a01021 	move	v0,s5
9d005288:	0296100a 	movz	v0,s4,s6
9d00528c:	8fbf0034 	lw	ra,52(sp)
9d005290:	8fb70030 	lw	s7,48(sp)
9d005294:	8fb6002c 	lw	s6,44(sp)
9d005298:	8fb50028 	lw	s5,40(sp)
9d00529c:	8fb40024 	lw	s4,36(sp)
9d0052a0:	8fb30020 	lw	s3,32(sp)
9d0052a4:	8fb2001c 	lw	s2,28(sp)
9d0052a8:	8fb10018 	lw	s1,24(sp)
9d0052ac:	8fb00014 	lw	s0,20(sp)
9d0052b0:	03e00008 	jr	ra
9d0052b4:	27bd0038 	addiu	sp,sp,56

Disassembly of section .text.dptofp:

9d0052b8 <__truncdfsf2>:
9d0052b8:	00053ac0 00045d42 00eb3825 000432c0     .:..B]..%8...2..
9d0052c8:	3c018000 00e13825 3c018000 00a14824     ...<%8.....<$H..
9d0052d8:	00054040 00084542 2508fc80 250bffff     @@..BE.....%...%
9d0052e8:	2d6100fe 10200012 00000000              ..a-.. .....

9d0052f4 <Hlab1>:
9d0052f4:	10c00002 	beqz	a2,9d005300 <i45>
9d0052f8:	00000000 	nop
9d0052fc:	34e70001 	ori	a3,a3,0x1

9d005300 <i45>:
9d005300:	24e70080 	addiu	a3,a3,128
9d005304:	2ceb0080 	sltiu	t3,a3,128
9d005308:	010b4021 	addu	t0,t0,t3
9d00530c:	00075a02 	srl	t3,a3,0x8
9d005310:	316b0001 	andi	t3,t3,0x1
9d005314:	00eb3823 	subu	a3,a3,t3
9d005318:	00073840 	sll	a3,a3,0x1
9d00531c:	00073a42 	srl	a3,a3,0x9
9d005320:	00085dc0 	sll	t3,t0,0x17
9d005324:	00eb3825 	or	a3,a3,t3
9d005328:	00e91025 	or	v0,a3,t1

9d00532c <H999>:
9d00532c:	03e00008 	jr	ra
9d005330:	00000000 	nop
9d005334:	00000000 	nop

9d005338 <Hspec>:
9d005338:	2401047f 	li	at,1151
9d00533c:	15010007 	bne	t0,at,9d00535c <i46>
9d005340:	00000000 	nop
9d005344:	00075840 	sll	t3,a3,0x1
9d005348:	01665825 	or	t3,t3,a2
9d00534c:	11600003 	beqz	t3,9d00535c <i46>
9d005350:	00000000 	nop
9d005354:	1000fff5 	b	9d00532c <H999>
9d005358:	3c02ffc0 	lui	v0,0xffc0

9d00535c <i46>:
9d00535c:	290100ff 	slti	at,t0,255
9d005360:	14200004 	bnez	at,9d005374 <i48>
9d005364:	00000000 	nop
9d005368:	3c017f80 	lui	at,0x7f80
9d00536c:	1000ffef 	b	9d00532c <H999>
9d005370:	01211025 	or	v0,t1,at

9d005374 <i48>:
9d005374:	240a0001 	li	t2,1
9d005378:	01485023 	subu	t2,t2,t0
9d00537c:	2d410020 	sltiu	at,t2,32
9d005380:	14200003 	bnez	at,9d005390 <i49>
9d005384:	00000000 	nop
9d005388:	1000ffe8 	b	9d00532c <H999>
9d00538c:	00091025 	or	v0,zero,t1

9d005390 <i49>:
9d005390:	240c0020 	li	t4,32
9d005394:	018a6023 	subu	t4,t4,t2
9d005398:	01875804 	sllv	t3,a3,t4
9d00539c:	00cb3025 	or	a2,a2,t3
9d0053a0:	01473806 	srlv	a3,a3,t2
9d0053a4:	24080000 	li	t0,0
9d0053a8:	3c018000 	lui	at,0x8000
9d0053ac:	1000ffd1 	b	9d0052f4 <Hlab1>
9d0053b0:	00e13825 	or	a3,a3,at
9d0053b4:	00000000 	nop

Disassembly of section .text._flsbuf_simple:

9d0053b8 <_flsbuf_simple>:
9d0053b8:	27bdffd8 	addiu	sp,sp,-40
9d0053bc:	afbf0024 	sw	ra,36(sp)
9d0053c0:	afb10020 	sw	s1,32(sp)
9d0053c4:	afb0001c 	sw	s0,28(sp)
9d0053c8:	00a08021 	move	s0,a1
9d0053cc:	8ca2000c 	lw	v0,12(a1)
9d0053d0:	1040002d 	beqz	v0,9d005488 <_flsbuf_simple+0xd0>
9d0053d4:	00808821 	move	s1,a0
9d0053d8:	8ca20000 	lw	v0,0(a1)
9d0053dc:	24420001 	addiu	v0,v0,1
9d0053e0:	2403ffff 	li	v1,-1
9d0053e4:	1043001e 	beq	v0,v1,9d005460 <_flsbuf_simple+0xa8>
9d0053e8:	aca20000 	sw	v0,0(a1)
9d0053ec:	0f4016f9 	jal	9d005be4 <_fflush_simple>
9d0053f0:	02002021 	move	a0,s0
9d0053f4:	8e040000 	lw	a0,0(s0)
9d0053f8:	8e020004 	lw	v0,4(s0)
9d0053fc:	2484ffff 	addiu	a0,a0,-1
9d005400:	24430001 	addiu	v1,v0,1
9d005404:	ae040000 	sw	a0,0(s0)
9d005408:	ae030004 	sw	v1,4(s0)
9d00540c:	a0510000 	sb	s1,0(v0)
9d005410:	2402000a 	li	v0,10
9d005414:	52220007 	beql	s1,v0,9d005434 <_flsbuf_simple+0x7c>
9d005418:	96020010 	lhu	v0,16(s0)
9d00541c:	02201021 	move	v0,s1
9d005420:	8fbf0024 	lw	ra,36(sp)
9d005424:	8fb10020 	lw	s1,32(sp)
9d005428:	8fb0001c 	lw	s0,28(sp)
9d00542c:	03e00008 	jr	ra
9d005430:	27bd0028 	addiu	sp,sp,40
9d005434:	30420008 	andi	v0,v0,0x8
9d005438:	1040fff9 	beqz	v0,9d005420 <_flsbuf_simple+0x68>
9d00543c:	02201021 	move	v0,s1
9d005440:	0f4016f9 	jal	9d005be4 <_fflush_simple>
9d005444:	02002021 	move	a0,s0
9d005448:	02201021 	move	v0,s1
9d00544c:	8fbf0024 	lw	ra,36(sp)
9d005450:	8fb10020 	lw	s1,32(sp)
9d005454:	8fb0001c 	lw	s0,28(sp)
9d005458:	03e00008 	jr	ra
9d00545c:	27bd0028 	addiu	sp,sp,40
9d005460:	8ca20008 	lw	v0,8(a1)
9d005464:	1440ffe1 	bnez	v0,9d0053ec <_flsbuf_simple+0x34>
9d005468:	00000000 	nop
9d00546c:	94a20010 	lhu	v0,16(a1)
9d005470:	aca00004 	sw	zero,4(a1)
9d005474:	aca0000c 	sw	zero,12(a1)
9d005478:	34420010 	ori	v0,v0,0x10
9d00547c:	aca00000 	sw	zero,0(a1)
9d005480:	0b4014fb 	j	9d0053ec <_flsbuf_simple+0x34>
9d005484:	a4a20010 	sh	v0,16(a1)
9d005488:	27a40010 	addiu	a0,sp,16
9d00548c:	24050001 	li	a1,1
9d005490:	0f4017d5 	jal	9d005f54 <_mon_write>
9d005494:	a3b10010 	sb	s1,16(sp)
9d005498:	ae000000 	sw	zero,0(s0)
9d00549c:	02201021 	move	v0,s1
9d0054a0:	8fbf0024 	lw	ra,36(sp)
9d0054a4:	8fb10020 	lw	s1,32(sp)
9d0054a8:	8fb0001c 	lw	s0,28(sp)
9d0054ac:	03e00008 	jr	ra
9d0054b0:	27bd0028 	addiu	sp,sp,40

Disassembly of section .text:

9d0054b4 <initServo>:
/********************************/

int initServo(int pin)							//Initializes the servo IO & PWM
{

	T3CONbits.TCKPS = PWM_TIMER3_PRESCALER;		// Timer3 prescaler N=4 (1:4)
9d0054b4:	3c03bf80 	lui	v1,0xbf80
9d0054b8:	94620a00 	lhu	v0,2560(v1)
9d0054bc:	24050006 	li	a1,6
9d0054c0:	7ca23104 	ins	v0,a1,0x4,0x3
9d0054c4:	a4620a00 	sh	v0,2560(v1)
	PR3 = PWM_TIMER3_PERIOD_REGISTER;             // 20 ms
9d0054c8:	240461a7 	li	a0,24999
9d0054cc:	3c02bf80 	lui	v0,0xbf80
9d0054d0:	ac440a20 	sw	a0,2592(v0)
	TMR3 = 0;										// initial TMR2 count is 0
9d0054d4:	3c02bf80 	lui	v0,0xbf80
9d0054d8:	ac400a10 	sw	zero,2576(v0)
	OC1CONbits.OCM = 0b110;						// PWM mode without fault pin; other OC1CON bits are defaults
9d0054dc:	3c02bf80 	lui	v0,0xbf80
9d0054e0:	94443000 	lhu	a0,12288(v0)
9d0054e4:	7ca41004 	ins	a0,a1,0x0,0x3
9d0054e8:	a4443000 	sh	a0,12288(v0)
	OC1CONbits.OCTSEL = 1;						// optional (default)
9d0054ec:	94453000 	lhu	a1,12288(v0)
9d0054f0:	24040001 	li	a0,1
9d0054f4:	7c8518c4 	ins	a1,a0,0x3,0x1
9d0054f8:	a4453000 	sh	a1,12288(v0)
	OC1RS = (PWM_TIMER3_PERIOD_REGISTER + 1) * PWM_MIN_DC + SERVO_ZERO_OFFSET;									// duty cycle = OC1RS/(PR2+1)
9d0054fc:	2405029e 	li	a1,670
9d005500:	3c06bf80 	lui	a2,0xbf80
9d005504:	acc53020 	sw	a1,12320(a2)
	OC1R = (PWM_TIMER3_PERIOD_REGISTER + 1) * PWM_MIN_DC + SERVO_ZERO_OFFSET;									// initialize before turning OC1 on; afterward it is read-only
9d005508:	3c06bf80 	lui	a2,0xbf80
9d00550c:	acc53010 	sw	a1,12304(a2)
	T3CONbits.ON = 1;								// turn on Timer2
9d005510:	94650a00 	lhu	a1,2560(v1)
9d005514:	7c857bc4 	ins	a1,a0,0xf,0x1
9d005518:	a4650a00 	sh	a1,2560(v1)
	OC1CONbits.ON = 1;							// turn on OC1
9d00551c:	94433000 	lhu	v1,12288(v0)
9d005520:	7c837bc4 	ins	v1,a0,0xf,0x1
9d005524:	a4433000 	sh	v1,12288(v0)
		
	return 0;
}
9d005528:	03e00008 	jr	ra
9d00552c:	00001021 	move	v0,zero

9d005530 <setServo>:

//sets the PWM duty cycle of the servo
//accepts values from 0 to 180
void setServo(char angle)
{
9d005530:	27bdffe8 	addiu	sp,sp,-24
9d005534:	afbf0014 	sw	ra,20(sp)
	DC = (0.1 / SERVO_MAX_ANGLE) * angle + PWM_MIN_DC;
9d005538:	0f401758 	jal	9d005d60 <__floatsidf>
9d00553c:	00000000 	nop
9d005540:	00402021 	move	a0,v0
9d005544:	00602821 	move	a1,v1
9d005548:	3c029d00 	lui	v0,0x9d00
9d00554c:	8c4661e8 	lw	a2,25064(v0)
9d005550:	0f401083 	jal	9d00420c <.LFE15>
9d005554:	8c4761ec 	lw	a3,25068(v0)
9d005558:	00402021 	move	a0,v0
9d00555c:	00602821 	move	a1,v1
9d005560:	3c029d00 	lui	v0,0x9d00
9d005564:	8c4661f0 	lw	a2,25072(v0)
9d005568:	0f400e83 	jal	9d003a0c <__adddf3>
9d00556c:	8c4761f4 	lw	a3,25076(v0)
9d005570:	00402021 	move	a0,v0
9d005574:	0f4014ae 	jal	9d0052b8 <__truncdfsf2>
9d005578:	00602821 	move	a1,v1
9d00557c:	af828044 	sw	v0,-32700(gp)
	OC1RS = DC * (PWM_TIMER3_PERIOD_REGISTER + 1);						//modify this
9d005580:	00402021 	move	a0,v0
9d005584:	3c029d00 	lui	v0,0x9d00
9d005588:	0f401280 	jal	9d004a00 <.LFE8>
9d00558c:	8c4561f8 	lw	a1,25080(v0)
9d005590:	0f401739 	jal	9d005ce4 <__fixunssfsi>
9d005594:	00402021 	move	a0,v0
9d005598:	3c03bf80 	lui	v1,0xbf80
9d00559c:	ac623020 	sw	v0,12320(v1)
9d0055a0:	8fbf0014 	lw	ra,20(sp)
9d0055a4:	03e00008 	jr	ra
9d0055a8:	27bd0018 	addiu	sp,sp,24

Disassembly of section .text._mon_getc:

9d0055ac <_mon_getc>:
9d0055ac:	27bdffe8 	addiu	sp,sp,-24

9d0055b0 <.LCFI0>:
9d0055b0:	afbf0014 	sw	ra,20(sp)
9d0055b4:	3c02a000 	lui	v0,0xa000
9d0055b8:	8c430008 	lw	v1,8(v0)
9d0055bc:	5460000a 	bnezl	v1,9d0055e8 <.LCFI0+0x38>
9d0055c0:	3c04bf80 	lui	a0,0xbf80
9d0055c4:	3c020000 	lui	v0,0x0
9d0055c8:	24420000 	addiu	v0,v0,0
9d0055cc:	10400024 	beqz	v0,9d005660 <.LCFI0+0xb0>
9d0055d0:	3c020000 	lui	v0,0x0
9d0055d4:	0c000000 	jal	90000000 <_bmxdudba_address+0x8ffe0000>
9d0055d8:	00000000 	nop
9d0055dc:	8fbf0014 	lw	ra,20(sp)
9d0055e0:	03e00008 	jr	ra
9d0055e4:	27bd0018 	addiu	sp,sp,24
9d0055e8:	24846010 	addiu	a0,a0,24592
9d0055ec:	1080fffb 	beqz	a0,9d0055dc <.LCFI0+0x2c>
9d0055f0:	2402ffff 	li	v0,-1
9d0055f4:	24020002 	li	v0,2
9d0055f8:	10620020 	beq	v1,v0,9d00567c <.LCFI0+0xcc>
9d0055fc:	3c02bf80 	lui	v0,0xbf80
9d005600:	3c02bf80 	lui	v0,0xbf80
9d005604:	8c426000 	lw	v0,24576(v0)
9d005608:	3c05bf80 	lui	a1,0xbf80
9d00560c:	24a56030 	addiu	a1,a1,24624
9d005610:	30428000 	andi	v0,v0,0x8000
9d005614:	14400003 	bnez	v0,9d005624 <.LCFI0+0x74>
9d005618:	34038000 	li	v1,0x8000
9d00561c:	3c02bf80 	lui	v0,0xbf80
9d005620:	ac436008 	sw	v1,24584(v0)
9d005624:	8c820000 	lw	v0,0(a0)
9d005628:	30420001 	andi	v0,v0,0x1
9d00562c:	14400009 	bnez	v0,9d005654 <.LCFI0+0xa4>
9d005630:	00000000 	nop
9d005634:	0b401591 	j	9d005644 <.LCFI0+0x94>
9d005638:	240200a0 	li	v0,160
9d00563c:	10400005 	beqz	v0,9d005654 <.LCFI0+0xa4>
9d005640:	00000000 	nop
9d005644:	8c830000 	lw	v1,0(a0)
9d005648:	30630001 	andi	v1,v1,0x1
9d00564c:	1060fffb 	beqz	v1,9d00563c <.LCFI0+0x8c>
9d005650:	2442ffff 	addiu	v0,v0,-1
9d005654:	8ca20000 	lw	v0,0(a1)
9d005658:	0b401578 	j	9d0055e0 <.LCFI0+0x30>
9d00565c:	8fbf0014 	lw	ra,20(sp)
9d005660:	24420000 	addiu	v0,v0,0
9d005664:	5040000b 	beqzl	v0,9d005694 <.LCFI0+0xe4>
9d005668:	3c04bf80 	lui	a0,0xbf80
9d00566c:	0c000000 	jal	90000000 <_bmxdudba_address+0x8ffe0000>
9d005670:	00000000 	nop
9d005674:	0b401578 	j	9d0055e0 <.LCFI0+0x30>
9d005678:	8fbf0014 	lw	ra,20(sp)
9d00567c:	8c426800 	lw	v0,26624(v0)
9d005680:	3c05bf80 	lui	a1,0xbf80
9d005684:	24a56830 	addiu	a1,a1,26672
9d005688:	3c04bf80 	lui	a0,0xbf80
9d00568c:	0b401584 	j	9d005610 <.LCFI0+0x60>
9d005690:	24846810 	addiu	a0,a0,26640
9d005694:	0b401580 	j	9d005600 <.LCFI0+0x50>
9d005698:	24846010 	addiu	a0,a0,24592

Disassembly of section .text.general_exception:

9d00569c <_general_exception_context>:
9d00569c:	27bdffa8 	addiu	sp,sp,-88
9d0056a0:	afa10004 	sw	at,4(sp)
9d0056a4:	afa20008 	sw	v0,8(sp)
9d0056a8:	afa3000c 	sw	v1,12(sp)
9d0056ac:	afa40010 	sw	a0,16(sp)
9d0056b0:	afa50014 	sw	a1,20(sp)
9d0056b4:	afa60018 	sw	a2,24(sp)
9d0056b8:	afa7001c 	sw	a3,28(sp)
9d0056bc:	afa80020 	sw	t0,32(sp)
9d0056c0:	afa90024 	sw	t1,36(sp)
9d0056c4:	afaa0028 	sw	t2,40(sp)
9d0056c8:	afab002c 	sw	t3,44(sp)
9d0056cc:	afac0030 	sw	t4,48(sp)
9d0056d0:	afad0034 	sw	t5,52(sp)
9d0056d4:	afae0038 	sw	t6,56(sp)
9d0056d8:	afaf003c 	sw	t7,60(sp)
9d0056dc:	afb80040 	sw	t8,64(sp)
9d0056e0:	afb90044 	sw	t9,68(sp)
9d0056e4:	afbf0048 	sw	ra,72(sp)
9d0056e8:	00004012 	mflo	t0
9d0056ec:	afa8004c 	sw	t0,76(sp)
9d0056f0:	00004010 	mfhi	t0
9d0056f4:	afa80050 	sw	t0,80(sp)
9d0056f8:	3c1a9d00 	lui	k0,0x9d00
9d0056fc:	275a5fe8 	addiu	k0,k0,24552
9d005700:	00000000 	nop
9d005704:	40046800 	mfc0	a0,c0_cause
9d005708:	40056000 	mfc0	a1,c0_status
9d00570c:	0340f809 	jalr	k0
9d005710:	00000000 	nop
9d005714:	8fa80050 	lw	t0,80(sp)
9d005718:	01000011 	mthi	t0
9d00571c:	8fa8004c 	lw	t0,76(sp)
9d005720:	01000013 	mtlo	t0
9d005724:	8fa10004 	lw	at,4(sp)
9d005728:	8fa20008 	lw	v0,8(sp)
9d00572c:	8fa3000c 	lw	v1,12(sp)
9d005730:	8fa40010 	lw	a0,16(sp)
9d005734:	8fa50014 	lw	a1,20(sp)
9d005738:	8fa60018 	lw	a2,24(sp)
9d00573c:	8fa7001c 	lw	a3,28(sp)
9d005740:	8fa80020 	lw	t0,32(sp)
9d005744:	8fa90024 	lw	t1,36(sp)
9d005748:	8faa0028 	lw	t2,40(sp)
9d00574c:	8fab002c 	lw	t3,44(sp)
9d005750:	8fac0030 	lw	t4,48(sp)
9d005754:	8fad0034 	lw	t5,52(sp)
9d005758:	8fae0038 	lw	t6,56(sp)
9d00575c:	8faf003c 	lw	t7,60(sp)
9d005760:	8fb80040 	lw	t8,64(sp)
9d005764:	8fb90044 	lw	t9,68(sp)
9d005768:	8fbf0048 	lw	ra,72(sp)
9d00576c:	27bd0058 	addiu	sp,sp,88
9d005770:	000000c0 	ehb
9d005774:	42000018 	eret

Disassembly of section .text._mon_putc:

9d005778 <_mon_putc>:
9d005778:	27bdffe8 	addiu	sp,sp,-24

9d00577c <.LCFI0>:
9d00577c:	afbf0014 	sw	ra,20(sp)
9d005780:	3c02a000 	lui	v0,0xa000
9d005784:	8c420008 	lw	v0,8(v0)
9d005788:	1440000a 	bnez	v0,9d0057b4 <.LCFI0+0x38>
9d00578c:	00801821 	move	v1,a0
9d005790:	3c020000 	lui	v0,0x0
9d005794:	24420000 	addiu	v0,v0,0
9d005798:	10400020 	beqz	v0,9d00581c <.LCFI0+0xa0>
9d00579c:	3c020000 	lui	v0,0x0
9d0057a0:	0c000000 	jal	90000000 <_bmxdudba_address+0x8ffe0000>
9d0057a4:	00000000 	nop
9d0057a8:	8fbf0014 	lw	ra,20(sp)
9d0057ac:	03e00008 	jr	ra
9d0057b0:	27bd0018 	addiu	sp,sp,24
9d0057b4:	3c04bf80 	lui	a0,0xbf80
9d0057b8:	24846010 	addiu	a0,a0,24592
9d0057bc:	1080fffb 	beqz	a0,9d0057ac <.LCFI0+0x30>
9d0057c0:	8fbf0014 	lw	ra,20(sp)
9d0057c4:	24050001 	li	a1,1
9d0057c8:	1045001b 	beq	v0,a1,9d005838 <.LCFI0+0xbc>
9d0057cc:	3c02bf80 	lui	v0,0xbf80
9d0057d0:	3c02bf80 	lui	v0,0xbf80
9d0057d4:	24426820 	addiu	v0,v0,26656
9d0057d8:	3c05bf80 	lui	a1,0xbf80
9d0057dc:	24a56818 	addiu	a1,a1,26648
9d0057e0:	3c06bf80 	lui	a2,0xbf80
9d0057e4:	24c66808 	addiu	a2,a2,26632
9d0057e8:	3c04bf80 	lui	a0,0xbf80
9d0057ec:	24846810 	addiu	a0,a0,26640
9d0057f0:	34078000 	li	a3,0x8000
9d0057f4:	acc70000 	sw	a3,0(a2)
9d0057f8:	24060400 	li	a2,1024
9d0057fc:	aca60000 	sw	a2,0(a1)
9d005800:	8c850000 	lw	a1,0(a0)
9d005804:	30a50100 	andi	a1,a1,0x100
9d005808:	10a0fffd 	beqz	a1,9d005800 <.LCFI0+0x84>
9d00580c:	00000000 	nop
9d005810:	ac430000 	sw	v1,0(v0)
9d005814:	0b4015eb 	j	9d0057ac <.LCFI0+0x30>
9d005818:	8fbf0014 	lw	ra,20(sp)
9d00581c:	24420000 	addiu	v0,v0,0
9d005820:	1040ffec 	beqz	v0,9d0057d4 <.LCFI0+0x58>
9d005824:	3c02bf80 	lui	v0,0xbf80
9d005828:	0c000000 	jal	90000000 <_bmxdudba_address+0x8ffe0000>
9d00582c:	00000000 	nop
9d005830:	0b4015eb 	j	9d0057ac <.LCFI0+0x30>
9d005834:	8fbf0014 	lw	ra,20(sp)
9d005838:	24426020 	addiu	v0,v0,24608
9d00583c:	3c05bf80 	lui	a1,0xbf80
9d005840:	24a56018 	addiu	a1,a1,24600
9d005844:	3c06bf80 	lui	a2,0xbf80
9d005848:	0b4015fc 	j	9d0057f0 <.LCFI0+0x74>
9d00584c:	24c66008 	addiu	a2,a2,24584

Disassembly of section .text.repl.constprop.0:

9d005850 <repl.constprop.0>:
9d005850:	27bdffd0 	addiu	sp,sp,-48
9d005854:	afbf002c 	sw	ra,44(sp)
9d005858:	afb60028 	sw	s6,40(sp)
9d00585c:	afb50024 	sw	s5,36(sp)
9d005860:	afb40020 	sw	s4,32(sp)
9d005864:	afb3001c 	sw	s3,28(sp)
9d005868:	afb20018 	sw	s2,24(sp)
9d00586c:	afb10014 	sw	s1,20(sp)
9d005870:	afb00010 	sw	s0,16(sp)
9d005874:	10a00016 	beqz	a1,9d0058d0 <repl.constprop.0+0x80>
9d005878:	00a0a021 	move	s4,a1
9d00587c:	00809021 	move	s2,a0
9d005880:	3c159d00 	lui	s5,0x9d00
9d005884:	26b5616c 	addiu	s5,s5,24940
9d005888:	24160020 	li	s6,32
9d00588c:	2413ffff 	li	s3,-1
9d005890:	2e910021 	sltiu	s1,s4,33
9d005894:	02c01021 	move	v0,s6
9d005898:	0291100b 	movn	v0,s4,s1
9d00589c:	0282a023 	subu	s4,s4,v0
9d0058a0:	02a28821 	addu	s1,s5,v0
9d0058a4:	0b401630 	j	9d0058c0 <repl.constprop.0+0x70>
9d0058a8:	02a08021 	move	s0,s5
9d0058ac:	26100001 	addiu	s0,s0,1
9d0058b0:	0f40163f 	jal	9d0058fc <fputc>
9d0058b4:	8204ffff 	lb	a0,-1(s0)
9d0058b8:	10530007 	beq	v0,s3,9d0058d8 <repl.constprop.0+0x88>
9d0058bc:	8fbf002c 	lw	ra,44(sp)
9d0058c0:	1611fffa 	bne	s0,s1,9d0058ac <repl.constprop.0+0x5c>
9d0058c4:	02402821 	move	a1,s2
9d0058c8:	1680fff2 	bnez	s4,9d005894 <repl.constprop.0+0x44>
9d0058cc:	2e910021 	sltiu	s1,s4,33
9d0058d0:	00001021 	move	v0,zero
9d0058d4:	8fbf002c 	lw	ra,44(sp)
9d0058d8:	8fb60028 	lw	s6,40(sp)
9d0058dc:	8fb50024 	lw	s5,36(sp)
9d0058e0:	8fb40020 	lw	s4,32(sp)
9d0058e4:	8fb3001c 	lw	s3,28(sp)
9d0058e8:	8fb20018 	lw	s2,24(sp)
9d0058ec:	8fb10014 	lw	s1,20(sp)
9d0058f0:	8fb00010 	lw	s0,16(sp)
9d0058f4:	03e00008 	jr	ra
9d0058f8:	27bd0030 	addiu	sp,sp,48

Disassembly of section .text.fputc:

9d0058fc <fputc>:
9d0058fc:	27bdffe0 	addiu	sp,sp,-32
9d005900:	afbf001c 	sw	ra,28(sp)
9d005904:	afb10018 	sw	s1,24(sp)
9d005908:	afb00014 	sw	s0,20(sp)
9d00590c:	00a08021 	move	s0,a1
9d005910:	8ca20018 	lw	v0,24(a1)
9d005914:	00808821 	move	s1,a0
9d005918:	24050001 	li	a1,1
9d00591c:	8c420010 	lw	v0,16(v0)
9d005920:	0040f809 	jalr	v0
9d005924:	02002021 	move	a0,s0
9d005928:	1040000e 	beqz	v0,9d005964 <fputc+0x68>
9d00592c:	2402ffff 	li	v0,-1
9d005930:	8e020000 	lw	v0,0(s0)
9d005934:	2442ffff 	addiu	v0,v0,-1
9d005938:	04400011 	bltz	v0,9d005980 <fputc+0x84>
9d00593c:	ae020000 	sw	v0,0(s0)
9d005940:	96020010 	lhu	v0,16(s0)
9d005944:	30420008 	andi	v0,v0,0x8
9d005948:	1440000b 	bnez	v0,9d005978 <fputc+0x7c>
9d00594c:	2402000a 	li	v0,10
9d005950:	8e030004 	lw	v1,4(s0)
9d005954:	02201021 	move	v0,s1
9d005958:	24640001 	addiu	a0,v1,1
9d00595c:	ae040004 	sw	a0,4(s0)
9d005960:	a0710000 	sb	s1,0(v1)
9d005964:	8fbf001c 	lw	ra,28(sp)
9d005968:	8fb10018 	lw	s1,24(sp)
9d00596c:	8fb00014 	lw	s0,20(sp)
9d005970:	03e00008 	jr	ra
9d005974:	27bd0020 	addiu	sp,sp,32
9d005978:	5622fff6 	bnel	s1,v0,9d005954 <fputc+0x58>
9d00597c:	8e030004 	lw	v1,4(s0)
9d005980:	8e020018 	lw	v0,24(s0)
9d005984:	02202021 	move	a0,s1
9d005988:	8c420004 	lw	v0,4(v0)
9d00598c:	0040f809 	jalr	v0
9d005990:	02002821 	move	a1,s0
9d005994:	8fbf001c 	lw	ra,28(sp)
9d005998:	8fb10018 	lw	s1,24(sp)
9d00599c:	8fb00014 	lw	s0,20(sp)
9d0059a0:	03e00008 	jr	ra
9d0059a4:	27bd0020 	addiu	sp,sp,32

Disassembly of section .rodata:

9d0059a8 <.LC0>:
9d0059a8:	52525543 	beql	s2,s2,9d01aeb8 <_fsync_string+0x14c08>
9d0059ac:	20544e45 	addi	s4,v0,20037
9d0059b0:	54415453 	bnel	v0,at,9d01ab00 <_fsync_string+0x14850>
9d0059b4:	00003a45 	0x3a45

9d0059b8 <.LC1>:
9d0059b8:	54594144 	bnel	v0,t9,9d015ecc <_fsync_string+0xfc1c>
9d0059bc:	00454d49 	0x454d49

9d0059c0 <.LC2>:
9d0059c0:	4847494e 	0x4847494e
9d0059c4:	4d495454 	0x4d495454
9d0059c8:	00000045 	0x45

9d0059cc <.LC3>:
9d0059cc:	25256425 	addiu	a1,t1,25637
9d0059d0:	00000000 	nop

9d0059d4 <.LC4>:
9d0059d4:	4847494c 	0x4847494c
9d0059d8:	454c2054 	bc1any4f	$fcc3,9d00db2c <_fsync_string+0x787c>
9d0059dc:	3a4c4556 	xori	t4,s2,0x4556
9d0059e0:	00000000 	nop

9d0059e4 <.LC5>:
9d0059e4:	44206425 	0x44206425
9d0059e8:	45524745 	0x45524745
9d0059ec:	00005345 	0x5345

9d0059f0 <.LC6>:
9d0059f0:	56524553 	bnel	s2,s2,9d016f40 <_fsync_string+0x10c90>
9d0059f4:	4f50204f 	c3	0x150204f
9d0059f8:	49544953 	0x49544953
9d0059fc:	003a4e4f 	0x3a4e4f

9d005a00 <.LC7>:
9d005a00:	54544142 	bnel	v0,s4,9d015f0c <_fsync_string+0xfc5c>
9d005a04:	20595245 	addi	t9,v0,21061
9d005a08:	4556454c 	0x4556454c
9d005a0c:	00003a4c 	syscall	0xe9

9d005a10 <.LC8>:
9d005a10:	656d6954 	0x656d6954
9d005a14:	6425203a 	0x6425203a
9d005a18:	694c0909 	0x694c0909
9d005a1c:	3a746867 	xori	s4,s3,0x6867
9d005a20:	09642520 	j	95909480 <_bmxdudba_address+0x958e9480>
9d005a24:	72655309 	0x72655309
9d005a28:	203a6f76 	addi	k0,at,28534
9d005a2c:	09096425 	j	94259094 <_bmxdudba_address+0x94239094>
9d005a30:	74746142 	jalx	91d18508 <_bmxdudba_address+0x91cf8508>
9d005a34:	6425203a 	0x6425203a
9d005a38:	00000d0a 	0xd0a

Disassembly of section .text.strlen:

9d005a3c <strlen>:
9d005a3c:	30830003 	andi	v1,a0,0x3
9d005a40:	1460001e 	bnez	v1,9d005abc <strlen+0x80>
9d005a44:	00801021 	move	v0,a0
9d005a48:	8c820000 	lw	v0,0(a0)
9d005a4c:	3c07fefe 	lui	a3,0xfefe
9d005a50:	34e7feff 	ori	a3,a3,0xfeff
9d005a54:	00471821 	addu	v1,v0,a3
9d005a58:	00021027 	nor	v0,zero,v0
9d005a5c:	3c068080 	lui	a2,0x8080
9d005a60:	34c68080 	ori	a2,a2,0x8080
9d005a64:	00621824 	and	v1,v1,v0
9d005a68:	00661824 	and	v1,v1,a2
9d005a6c:	14600013 	bnez	v1,9d005abc <strlen+0x80>
9d005a70:	00801021 	move	v0,a0
9d005a74:	24420004 	addiu	v0,v0,4
9d005a78:	8c430000 	lw	v1,0(v0)
9d005a7c:	00672821 	addu	a1,v1,a3
9d005a80:	00031827 	nor	v1,zero,v1
9d005a84:	00a31824 	and	v1,a1,v1
9d005a88:	00661824 	and	v1,v1,a2
9d005a8c:	5460000c 	bnezl	v1,9d005ac0 <strlen+0x84>
9d005a90:	80430000 	lb	v1,0(v0)
9d005a94:	24420004 	addiu	v0,v0,4
9d005a98:	8c430000 	lw	v1,0(v0)
9d005a9c:	00672821 	addu	a1,v1,a3
9d005aa0:	00031827 	nor	v1,zero,v1
9d005aa4:	00a31824 	and	v1,a1,v1
9d005aa8:	00661824 	and	v1,v1,a2
9d005aac:	5060fff2 	beqzl	v1,9d005a78 <strlen+0x3c>
9d005ab0:	24420004 	addiu	v0,v0,4
9d005ab4:	0b4016b0 	j	9d005ac0 <strlen+0x84>
9d005ab8:	80430000 	lb	v1,0(v0)
9d005abc:	80430000 	lb	v1,0(v0)
9d005ac0:	5460fffe 	bnezl	v1,9d005abc <strlen+0x80>
9d005ac4:	24420001 	addiu	v0,v0,1
9d005ac8:	03e00008 	jr	ra
9d005acc:	00441023 	subu	v0,v0,a0

Disassembly of section .text.dptoli:

9d005ad0 <__fixdfsi>:
9d005ad0:	00053ac0 00045542 00ea3825 3c018000     .:..BU..%8.....<
9d005ae0:	00e13825 00055040 000a5542 2406041e     %8..@P..BU.....$
9d005af0:	00ca3023 18c0000c 00000000 2cc10020     #0.......... ..,
9d005b00:	14200002 00000000 34070000              .. ........4

9d005b0c <L42>:
9d005b0c:	04a10002 	bgez	a1,9d005b18 <i50>
9d005b10:	00c73806 	srlv	a3,a3,a2
9d005b14:	00073823 	negu	a3,a3

9d005b18 <i50>:
9d005b18:	00071025 	or	v0,zero,a3

9d005b1c <I999>:
9d005b1c:	03e00008 	jr	ra
9d005b20:	00000000 	nop
9d005b24:	00000000 	nop

9d005b28 <Inaninf>:
9d005b28:	10800002 	beqz	a0,9d005b34 <i51>
9d005b2c:	00000000 	nop
9d005b30:	34a50001 	ori	a1,a1,0x1

9d005b34 <i51>:
9d005b34:	3c017ff0 	lui	at,0x7ff0
9d005b38:	34210001 	ori	at,at,0x1
9d005b3c:	00a1082b 	sltu	at,a1,at
9d005b40:	14200003 	bnez	at,9d005b50 <i52>
9d005b44:	00000000 	nop
9d005b48:	1000fff4 	b	9d005b1c <I999>
9d005b4c:	3c028000 	lui	v0,0x8000

9d005b50 <i52>:
9d005b50:	3c027fff 	lui	v0,0x7fff
9d005b54:	1000fff1 	b	9d005b1c <I999>
9d005b58:	3442ffff 	ori	v0,v0,0xffff
9d005b5c:	00000000 	nop

Disassembly of section .text:

9d005b60 <__pic32_data_init>:
9d005b60:	03e01821 	move	v1,ra

9d005b64 <_dinit_init>:
9d005b64:	3c089d00 	lui	t0,0x9d00
9d005b68:	25084d58 	addiu	t0,t0,19800
9d005b6c:	8d090000 	lw	t1,0(t0)
9d005b70:	11200018 	beqz	t1,9d005bd4 <_dinit_end+0x18>
9d005b74:	25080004 	addiu	t0,t0,4
9d005b78:	8d0a0000 	lw	t2,0(t0)
9d005b7c:	25080004 	addiu	t0,t0,4
9d005b80:	8d0b0000 	lw	t3,0(t0)
9d005b84:	11600009 	beqz	t3,9d005bac <_dinit_clear>
9d005b88:	25080004 	addiu	t0,t0,4

9d005b8c <_dinit_copy>:
9d005b8c:	910c0000 	lbu	t4,0(t0)
9d005b90:	254affff 	addiu	t2,t2,-1
9d005b94:	25080001 	addiu	t0,t0,1
9d005b98:	a12c0000 	sb	t4,0(t1)
9d005b9c:	1540fffb 	bnez	t2,9d005b8c <_dinit_copy>
9d005ba0:	25290001 	addiu	t1,t1,1
9d005ba4:	10000005 	b	9d005bbc <_dinit_end>
9d005ba8:	00000000 	nop

9d005bac <_dinit_clear>:
9d005bac:	a1200000 	sb	zero,0(t1)
9d005bb0:	254affff 	addiu	t2,t2,-1
9d005bb4:	1540fffd 	bnez	t2,9d005bac <_dinit_clear>
9d005bb8:	25290001 	addiu	t1,t1,1

9d005bbc <_dinit_end>:
9d005bbc:	25080003 	addiu	t0,t0,3
9d005bc0:	240afffc 	li	t2,-4
9d005bc4:	01484024 	and	t0,t2,t0
9d005bc8:	8d090000 	lw	t1,0(t0)
9d005bcc:	1520ffe7 	bnez	t1,9d005b6c <_dinit_init+0x8>
9d005bd0:	00000000 	nop
9d005bd4:	0060f821 	move	ra,v1
9d005bd8:	03e00008 	jr	ra
9d005bdc:	00000000 	nop
9d005be0:	00000000 	nop

Disassembly of section .text._fflush_simple:

9d005be4 <_fflush_simple>:
9d005be4:	27bdffe8 	addiu	sp,sp,-24
9d005be8:	afbf0014 	sw	ra,20(sp)
9d005bec:	afb00010 	sw	s0,16(sp)
9d005bf0:	94820010 	lhu	v0,16(a0)
9d005bf4:	30420002 	andi	v0,v0,0x2
9d005bf8:	10400013 	beqz	v0,9d005c48 <_fflush_simple+0x64>
9d005bfc:	00808021 	move	s0,a0
9d005c00:	8c850000 	lw	a1,0(a0)
9d005c04:	04a0000c 	bltz	a1,9d005c38 <_fflush_simple+0x54>
9d005c08:	00001021 	move	v0,zero
9d005c0c:	8c82000c 	lw	v0,12(a0)
9d005c10:	50a20006 	beql	a1,v0,9d005c2c <_fflush_simple+0x48>
9d005c14:	8e030008 	lw	v1,8(s0)
9d005c18:	8c840008 	lw	a0,8(a0)
9d005c1c:	0f4017d5 	jal	9d005f54 <_mon_write>
9d005c20:	00452823 	subu	a1,v0,a1
9d005c24:	8e02000c 	lw	v0,12(s0)
9d005c28:	8e030008 	lw	v1,8(s0)
9d005c2c:	ae020000 	sw	v0,0(s0)
9d005c30:	ae030004 	sw	v1,4(s0)
9d005c34:	00001021 	move	v0,zero
9d005c38:	8fbf0014 	lw	ra,20(sp)
9d005c3c:	8fb00010 	lw	s0,16(sp)
9d005c40:	03e00008 	jr	ra
9d005c44:	27bd0018 	addiu	sp,sp,24
9d005c48:	2402ffff 	li	v0,-1
9d005c4c:	ac820004 	sw	v0,4(a0)
9d005c50:	00001021 	move	v0,zero
9d005c54:	8fbf0014 	lw	ra,20(sp)
9d005c58:	8fb00010 	lw	s0,16(sp)
9d005c5c:	03e00008 	jr	ra
9d005c60:	27bd0018 	addiu	sp,sp,24

Disassembly of section .text._fwrite_simple:

9d005c64 <_fwrite_simple>:
9d005c64:	27bdffd8 	addiu	sp,sp,-40
9d005c68:	afbf0024 	sw	ra,36(sp)
9d005c6c:	afb10020 	sw	s1,32(sp)
9d005c70:	afb0001c 	sw	s0,28(sp)
9d005c74:	70c58002 	mul	s0,a2,a1
9d005c78:	12000007 	beqz	s0,9d005c98 <_fwrite_simple+0x34>
9d005c7c:	00001021 	move	v0,zero
9d005c80:	94e30010 	lhu	v1,16(a3)
9d005c84:	30630001 	andi	v1,v1,0x1
9d005c88:	10600008 	beqz	v1,9d005cac <_fwrite_simple+0x48>
9d005c8c:	3c03a000 	lui	v1,0xa000
9d005c90:	24040009 	li	a0,9
9d005c94:	ac640038 	sw	a0,56(v1)
9d005c98:	8fbf0024 	lw	ra,36(sp)
9d005c9c:	8fb10020 	lw	s1,32(sp)
9d005ca0:	8fb0001c 	lw	s0,28(sp)
9d005ca4:	03e00008 	jr	ra
9d005ca8:	27bd0028 	addiu	sp,sp,40
9d005cac:	00808821 	move	s1,a0
9d005cb0:	00e02021 	move	a0,a3
9d005cb4:	0f4016f9 	jal	9d005be4 <_fflush_simple>
9d005cb8:	afa60010 	sw	a2,16(sp)
9d005cbc:	02202021 	move	a0,s1
9d005cc0:	0f4017d5 	jal	9d005f54 <_mon_write>
9d005cc4:	02002821 	move	a1,s0
9d005cc8:	8fa60010 	lw	a2,16(sp)
9d005ccc:	00c01021 	move	v0,a2
9d005cd0:	8fbf0024 	lw	ra,36(sp)
9d005cd4:	8fb10020 	lw	s1,32(sp)
9d005cd8:	8fb0001c 	lw	s0,28(sp)
9d005cdc:	03e00008 	jr	ra
9d005ce0:	27bd0028 	addiu	sp,sp,40

Disassembly of section .text.fptoul:

9d005ce4 <__fixunssfsi>:
9d005ce4:	00042a00 3c018000 00a12825 00043dc2     .*.....<%(...=..
9d005cf4:	30e700ff 2406009e 00c73023 04c0000d     ...0...$#0......
9d005d04:	00000000 28c10020 14200003 00000000     .... ..(.. .....
9d005d14:	10000005 24020000                       .......$

9d005d1c <i45>:
9d005d1c:	04810002 	bgez	a0,9d005d28 <i46>
9d005d20:	00c52806 	srlv	a1,a1,a2
9d005d24:	00052823 	negu	a1,a1

9d005d28 <i46>:
9d005d28:	00051025 	or	v0,zero,a1

9d005d2c <I999>:
9d005d2c:	03e00008 	jr	ra
9d005d30:	00000000 	nop
9d005d34:	00000000 	nop

9d005d38 <Ispec>:
9d005d38:	3c017f80 	lui	at,0x7f80
9d005d3c:	34210001 	ori	at,at,0x1
9d005d40:	0081082b 	sltu	at,a0,at
9d005d44:	14200003 	bnez	at,9d005d54 <i47>
9d005d48:	00000000 	nop
9d005d4c:	1000fff7 	b	9d005d2c <I999>
9d005d50:	3c028000 	lui	v0,0x8000

9d005d54 <i47>:
9d005d54:	1000fff5 	b	9d005d2c <I999>
9d005d58:	2402ffff 	li	v0,-1
9d005d5c:	00000000 	nop

Disassembly of section .text.litodp:

9d005d60 <__floatsidf>:
9d005d60:	24050000 00054825 00053825 00043025     ...$%H..%8..%0..
9d005d70:	10c0000c 00000000 04c10006 00000000     ................
9d005d80:	3c098000 0005502b 00052823 00063023     ...<+P..#(..#0..
9d005d90:	00ca3023                                #0..

9d005d94 <i40>:
9d005d94:	2407041e 	li	a3,1054
9d005d98:	70c84020 	clz	t0,a2
9d005d9c:	00e83823 	subu	a3,a3,t0
9d005da0:	01063004 	sllv	a2,a2,t0

9d005da4 <i39>:
9d005da4:	000542c2 	srl	t0,a1,0xb
9d005da8:	00065540 	sll	t2,a2,0x15
9d005dac:	010a4025 	or	t0,t0,t2
9d005db0:	00065040 	sll	t2,a2,0x1
9d005db4:	000a5302 	srl	t2,t2,0xc
9d005db8:	012a4825 	or	t1,t1,t2
9d005dbc:	00075500 	sll	t2,a3,0x14
9d005dc0:	012a4825 	or	t1,t1,t2
9d005dc4:	00081025 	or	v0,zero,t0
9d005dc8:	00091825 	or	v1,zero,t1

9d005dcc <E999>:
9d005dcc:	03e00008 	jr	ra
9d005dd0:	00000000 	nop
9d005dd4:	00000000 	nop

Disassembly of section .text._sprintf_cdnopuxX:

9d005dd8 <_sprintf_cdnopuxX>:
9d005dd8:	27bdffc8 	addiu	sp,sp,-56
9d005ddc:	afbf0034 	sw	ra,52(sp)
9d005de0:	27a20040 	addiu	v0,sp,64
9d005de4:	00801821 	move	v1,a0
9d005de8:	afa60040 	sw	a2,64(sp)
9d005dec:	27a40010 	addiu	a0,sp,16
9d005df0:	00403021 	move	a2,v0
9d005df4:	afa70044 	sw	a3,68(sp)
9d005df8:	2407ffff 	li	a3,-1
9d005dfc:	a7a70022 	sh	a3,34(sp)
9d005e00:	24070082 	li	a3,130
9d005e04:	a7a70020 	sh	a3,32(sp)
9d005e08:	3c077fff 	lui	a3,0x7fff
9d005e0c:	34e7fffe 	ori	a3,a3,0xfffe
9d005e10:	afa70010 	sw	a3,16(sp)
9d005e14:	afa30018 	sw	v1,24(sp)
9d005e18:	afa30014 	sw	v1,20(sp)
9d005e1c:	3c039d00 	lui	v1,0x9d00
9d005e20:	24636254 	addiu	v1,v1,25172
9d005e24:	afa30028 	sw	v1,40(sp)
9d005e28:	0f400780 	jal	9d001e00 <_do_print_cdnopuxX>
9d005e2c:	afa2002c 	sw	v0,44(sp)
9d005e30:	8fa30014 	lw	v1,20(sp)
9d005e34:	a0600000 	sb	zero,0(v1)
9d005e38:	8fbf0034 	lw	ra,52(sp)
9d005e3c:	03e00008 	jr	ra
9d005e40:	27bd0038 	addiu	sp,sp,56

Disassembly of section .text:

9d005e44 <init>:

//INTERRUPTS

//FUNCTIONS
int init(void)
{	
9d005e44:	27bdffe8 	addiu	sp,sp,-24
9d005e48:	afbf0014 	sw	ra,20(sp)
	NU32_Startup();
9d005e4c:	0f40140b 	jal	9d00502c <NU32_Startup>
9d005e50:	00000000 	nop

9d005e54 <.LVL0>:
	initServo();
9d005e54:	0f40152d 	jal	9d0054b4 <initServo>
9d005e58:	00000000 	nop

9d005e5c <.LVL1>:
	initLCD();
9d005e5c:	0f400a1c 	jal	9d002870 <initLCD>
9d005e60:	00000000 	nop

9d005e64 <.LVL2>:
	initADC();
9d005e64:	0f400faa 	jal	9d003ea8 <initADC>
9d005e68:	00000000 	nop

9d005e6c <.LVL3>:
	initBluetooth();
9d005e6c:	0f401321 	jal	9d004c84 <initBluetooth>
9d005e70:	00000000 	nop

9d005e74 <.LVL4>:
	initDigital();
9d005e74:	0f4013e6 	jal	9d004f98 <initDigital>
9d005e78:	00000000 	nop

9d005e7c <.LVL5>:
	initRTCTimer();
9d005e7c:	0f40125b 	jal	9d00496c <initRTCTimer>
9d005e80:	00000000 	nop

9d005e84 <.LVL6>:

	return 1;
}
9d005e84:	24020001 	li	v0,1
9d005e88:	8fbf0014 	lw	ra,20(sp)
9d005e8c:	03e00008 	jr	ra
9d005e90:	27bd0018 	addiu	sp,sp,24

9d005e94 <main>:

int main(void)
{
9d005e94:	27bdffe8 	addiu	sp,sp,-24
9d005e98:	afbf0014 	sw	ra,20(sp)
	init();
9d005e9c:	0f401791 	jal	9d005e44 <init>
9d005ea0:	00000000 	nop

9d005ea4 <.LVL7>:
9d005ea4:	0b4017a9 	j	9d005ea4 <.LVL7>
9d005ea8:	00000000 	nop

Disassembly of section .rodata:

9d005eac <.LC0>:
9d005eac:	65740a0d 	0x65740a0d
9d005eb0:	69207473 	0x69207473
9d005eb4:	7265746e 	0x7265746e
9d005eb8:	74707572 	jalx	91c1d5c8 <_bmxdudba_address+0x91bfd5c8>
9d005ebc:	00000000 	nop

9d005ec0 <.LC1>:
9d005ec0:	65740a0d 	0x65740a0d
9d005ec4:	6d207473 	0x6d207473
9d005ec8:	206e6961 	addi	t6,v1,26977
9d005ecc:	00000030 	tge	zero,zero

9d005ed0 <.LC2>:
9d005ed0:	65740a0d 	0x65740a0d
9d005ed4:	6d207473 	0x6d207473
9d005ed8:	206e6961 	addi	t6,v1,26977
9d005edc:	00000031 	tgeu	zero,zero

9d005ee0 <.LC3>:
9d005ee0:	65740a0d 	0x65740a0d
9d005ee4:	6d207473 	0x6d207473
9d005ee8:	206e6961 	addi	t6,v1,26977
9d005eec:	00000032 	tlt	zero,zero

9d005ef0 <.LC4>:
9d005ef0:	65740a0d 	0x65740a0d
9d005ef4:	6d207473 	0x6d207473
9d005ef8:	206e6961 	addi	t6,v1,26977
9d005efc:	00000033 	tltu	zero,zero

Disassembly of section .text.main_entry:

9d005f00 <_main_entry>:
9d005f00:	3c040000 	lui	a0,0x0
9d005f04:	27bdffe8 	addiu	sp,sp,-24
9d005f08:	24840000 	addiu	a0,a0,0
9d005f0c:	10800003 	beqz	a0,9d005f1c <_main_entry+0x1c>
9d005f10:	afbf0014 	sw	ra,20(sp)
9d005f14:	0080f809 	jalr	a0
9d005f18:	00000000 	nop
9d005f1c:	30840000 	andi	a0,a0,0x0
9d005f20:	30a50000 	andi	a1,a1,0x0
9d005f24:	3c089d00 	lui	t0,0x9d00
9d005f28:	25085e94 	addiu	t0,t0,24212
9d005f2c:	0100f809 	jalr	t0
9d005f30:	00000000 	nop

9d005f34 <__crt0_exit>:
9d005f34:	3c020000 24420000 10400003 00000000     ...<..B$..@.....
9d005f44:	0040f809 00000000 1000fff9 00000000     ..@.............

Disassembly of section .text._mon_write:

9d005f54 <_mon_write>:
9d005f54:	27bdffe0 	addiu	sp,sp,-32

9d005f58 <.LCFI0>:
9d005f58:	afbf001c 	sw	ra,28(sp)
9d005f5c:	afb10018 	sw	s1,24(sp)
9d005f60:	afb00014 	sw	s0,20(sp)
9d005f64:	10800009 	beqz	a0,9d005f8c <.LCFI0+0x34>
9d005f68:	00808021 	move	s0,a0
9d005f6c:	10a00007 	beqz	a1,9d005f8c <.LCFI0+0x34>
9d005f70:	00a08821 	move	s1,a1
9d005f74:	82040000 	lb	a0,0(s0)
9d005f78:	2631ffff 	addiu	s1,s1,-1
9d005f7c:	0f4015de 	jal	9d005778 <_mon_putc>
9d005f80:	26100001 	addiu	s0,s0,1
9d005f84:	5620fffc 	bnezl	s1,9d005f78 <.LCFI0+0x20>
9d005f88:	82040000 	lb	a0,0(s0)
9d005f8c:	8fbf001c 	lw	ra,28(sp)
9d005f90:	8fb10018 	lw	s1,24(sp)
9d005f94:	8fb00014 	lw	s0,20(sp)
9d005f98:	03e00008 	jr	ra
9d005f9c:	27bd0020 	addiu	sp,sp,32

Disassembly of section .text._bootstrap_exception_handler:

9d005fa0 <_bootstrap_exception_handler>:
9d005fa0:	3c020000 	lui	v0,0x0
9d005fa4:	24420000 	addiu	v0,v0,0
9d005fa8:	10400005 	beqz	v0,9d005fc0 <_bootstrap_exception_handler+0x20>
9d005fac:	3c020000 	lui	v0,0x0
9d005fb0:	24420000 	addiu	v0,v0,0
9d005fb4:	10400003 	beqz	v0,9d005fc4 <_bootstrap_exception_handler+0x24>
9d005fb8:	3c029d00 	lui	v0,0x9d00
9d005fbc:	7000003f 	sdbbp
9d005fc0:	3c029d00 	lui	v0,0x9d00
9d005fc4:	24426078 	addiu	v0,v0,24696
9d005fc8:	10400005 	beqz	v0,9d005fe0 <.LCFI2>
9d005fcc:	00000000 	nop
9d005fd0:	27bdffe8 	addiu	sp,sp,-24

9d005fd4 <.LCFI0>:
9d005fd4:	afbf0014 	sw	ra,20(sp)
9d005fd8:	0040f809 	jalr	v0
9d005fdc:	00000000 	nop

9d005fe0 <.LCFI2>:
9d005fe0:	0b4017f8 	j	9d005fe0 <.LCFI2>
9d005fe4:	00000000 	nop

Disassembly of section .text._general_exception_handler:

9d005fe8 <_general_exception_handler>:
9d005fe8:	3c020000 	lui	v0,0x0
9d005fec:	24420000 	addiu	v0,v0,0
9d005ff0:	10400005 	beqz	v0,9d006008 <_general_exception_handler+0x20>
9d005ff4:	3c020000 	lui	v0,0x0
9d005ff8:	24420000 	addiu	v0,v0,0
9d005ffc:	10400003 	beqz	v0,9d00600c <_general_exception_handler+0x24>
9d006000:	3c029d00 	lui	v0,0x9d00
9d006004:	7000003f 	sdbbp
9d006008:	3c029d00 	lui	v0,0x9d00
9d00600c:	24426078 	addiu	v0,v0,24696
9d006010:	10400005 	beqz	v0,9d006028 <.LCFI2>
9d006014:	00000000 	nop
9d006018:	27bdffe8 	addiu	sp,sp,-24

9d00601c <.LCFI0>:
9d00601c:	afbf0014 	sw	ra,20(sp)
9d006020:	0040f809 	jalr	v0
9d006024:	00000000 	nop

9d006028 <.LCFI2>:
9d006028:	0b40180a 	j	9d006028 <.LCFI2>
9d00602c:	00000000 	nop

Disassembly of section .vector_default:

9d006030 <_DefaultInterrupt>:
9d006030:	3c020000 	lui	v0,0x0
9d006034:	24420000 	addiu	v0,v0,0
9d006038:	10400007 	beqz	v0,9d006058 <_DefaultInterrupt+0x28>
9d00603c:	3c020000 	lui	v0,0x0
9d006040:	24420000 	addiu	v0,v0,0
9d006044:	50400005 	beqzl	v0,9d00605c <_DefaultInterrupt+0x2c>
9d006048:	3c029d00 	lui	v0,0x9d00
9d00604c:	7000003f 	sdbbp
9d006050:	03e00008 	jr	ra
9d006054:	00000000 	nop
9d006058:	3c029d00 	lui	v0,0x9d00
9d00605c:	24426078 	addiu	v0,v0,24696
9d006060:	10400003 	beqz	v0,9d006070 <_DefaultInterrupt+0x40>
9d006064:	00000000 	nop
9d006068:	0040f809 	jalr	v0
9d00606c:	00000000 	nop
9d006070:	03e00008 	jr	ra
9d006074:	00000000 	nop

Disassembly of section .text:

9d006078 <__pic32_software_reset>:
9d006078:	41606000 	di
9d00607c:	000000c0 	ehb
9d006080:	3c03aa99 	lui	v1,0xaa99
9d006084:	3c02bf81 	lui	v0,0xbf81
9d006088:	24636655 	addiu	v1,v1,26197
9d00608c:	ac40f230 	sw	zero,-3536(v0)
9d006090:	ac43f230 	sw	v1,-3536(v0)
9d006094:	3c035566 	lui	v1,0x5566
9d006098:	346399aa 	ori	v1,v1,0x99aa
9d00609c:	ac43f230 	sw	v1,-3536(v0)
9d0060a0:	3c02bf81 	lui	v0,0xbf81
9d0060a4:	24030001 	li	v1,1
9d0060a8:	ac43f618 	sw	v1,-2536(v0)
9d0060ac:	3c02bf81 	lui	v0,0xbf81
9d0060b0:	8c42f610 	lw	v0,-2544(v0)
9d0060b4:	0b401820 	j	9d006080 <__pic32_software_reset+0x8>
9d0060b8:	00000000 	nop

9d0060bc <__floatunsidf>:
9d0060bc:	27bdffe8 	addiu	sp,sp,-24
9d0060c0:	afbf0014 	sw	ra,20(sp)
9d0060c4:	afb00010 	sw	s0,16(sp)
9d0060c8:	0f401758 	jal	9d005d60 <__floatsidf>
9d0060cc:	00808021 	move	s0,a0
9d0060d0:	06010008 	bgez	s0,9d0060f4 <__floatunsidf+0x38>
9d0060d4:	8fbf0014 	lw	ra,20(sp)
9d0060d8:	3c049d00 	lui	a0,0x9d00
9d0060dc:	8c866278 	lw	a2,25208(a0)
9d0060e0:	8c87627c 	lw	a3,25212(a0)
9d0060e4:	00402021 	move	a0,v0
9d0060e8:	0f400e83 	jal	9d003a0c <__adddf3>
9d0060ec:	00602821 	move	a1,v1
9d0060f0:	8fbf0014 	lw	ra,20(sp)
9d0060f4:	8fb00010 	lw	s0,16(sp)
9d0060f8:	03e00008 	jr	ra
9d0060fc:	27bd0018 	addiu	sp,sp,24

Disassembly of section .text._filbuf_simple:

9d006100 <_filbuf_simple>:
9d006100:	8c820004 	lw	v0,4(a0)
9d006104:	2403ffff 	li	v1,-1
9d006108:	10430003 	beq	v0,v1,9d006118 <_filbuf_simple+0x18>
9d00610c:	ac800000 	sw	zero,0(a0)
9d006110:	03e00008 	jr	ra
9d006114:	ac830004 	sw	v1,4(a0)
9d006118:	27bdffe8 	addiu	sp,sp,-24
9d00611c:	afbf0014 	sw	ra,20(sp)
9d006120:	0f40156b 	jal	9d0055ac <.LFE8>
9d006124:	24040001 	li	a0,1
9d006128:	8fbf0014 	lw	ra,20(sp)
9d00612c:	03e00008 	jr	ra
9d006130:	27bd0018 	addiu	sp,sp,24

Disassembly of section .text._fsync_simple:

9d006134 <_fsync_simple>:
9d006134:	94830010 	lhu	v1,16(a0)
9d006138:	00a32824 	and	a1,a1,v1
9d00613c:	10a00007 	beqz	a1,9d00615c <_fsync_simple+0x28>
9d006140:	24020001 	li	v0,1
9d006144:	34630040 	ori	v1,v1,0x40
9d006148:	a4830010 	sh	v1,16(a0)
9d00614c:	24030009 	li	v1,9
9d006150:	3c02a000 	lui	v0,0xa000
9d006154:	ac430038 	sw	v1,56(v0)
9d006158:	00001021 	move	v0,zero
9d00615c:	03e00008 	jr	ra
9d006160:	00000000 	nop

Disassembly of section .rodata:

9d006164 <spaceData-0x8>:
9d006164:	6c756e28 	0x6c756e28
9d006168:	0000296c 	0x296c

9d00616c <spaceData>:
9d00616c:	20202020 20202020 20202020 20202020                     
9d00617c:	20202020 20202020 20202020 20202020                     

Disassembly of section .text.putchar:

9d00618c <putchar>:
9d00618c:	27bdffe8 	addiu	sp,sp,-24
9d006190:	afbf0014 	sw	ra,20(sp)
9d006194:	3c02a000 	lui	v0,0xa000
9d006198:	8c420004 	lw	v0,4(v0)
9d00619c:	0f40163f 	jal	9d0058fc <fputc>
9d0061a0:	8c450004 	lw	a1,4(v0)
9d0061a4:	8fbf0014 	lw	ra,20(sp)
9d0061a8:	03e00008 	jr	ra
9d0061ac:	27bd0018 	addiu	sp,sp,24

Disassembly of section .text._vfprintf_cdnopuxX:

9d0061b0 <_vfprintf_cdnopuxX>:
9d0061b0:	27bdffe8 	addiu	sp,sp,-24
9d0061b4:	afbf0014 	sw	ra,20(sp)
9d0061b8:	0f400780 	jal	9d001e00 <_do_print_cdnopuxX>
9d0061bc:	00000000 	nop
9d0061c0:	8fbf0014 	lw	ra,20(sp)
9d0061c4:	03e00008 	jr	ra
9d0061c8:	27bd0018 	addiu	sp,sp,24

Disassembly of section .text.putc:

9d0061cc <putc>:
9d0061cc:	27bdffe8 	addiu	sp,sp,-24
9d0061d0:	afbf0014 	sw	ra,20(sp)
9d0061d4:	0f40163f 	jal	9d0058fc <fputc>
9d0061d8:	00000000 	nop
9d0061dc:	8fbf0014 	lw	ra,20(sp)
9d0061e0:	03e00008 	jr	ra
9d0061e4:	27bd0018 	addiu	sp,sp,24

Disassembly of section .rodata:

9d0061e8 <.rodata>:
9d0061e8:	789abcdf 	0x789abcdf
9d0061ec:	3f423456 	0x3f423456
9d0061f0:	9999999a 	lwr	t9,-26214(t4)
9d0061f4:	3f999999 	0x3f999999
9d0061f8:	46c35000 	add.ps	$f0,$f10,$f3
9d0061fc:	00000000 	nop

Disassembly of section .text:

9d006200 <_nmi_handler>:
9d006200:	401a6000 	mfc0	k0,c0_status
9d006204:	3c1bffbf 	lui	k1,0xffbf
9d006208:	377bffff 	ori	k1,k1,0xffff
9d00620c:	035bd024 	and	k0,k0,k1
9d006210:	409a6000 	mtc0	k0,c0_status
9d006214:	42000018 	eret

Disassembly of section .text._io_exit:

9d006218 <_io_exit>:
9d006218:	3c02a000 	lui	v0,0xa000
9d00621c:	8c420004 	lw	v0,4(v0)
9d006220:	24030001 	li	v1,1
9d006224:	03e00008 	jr	ra
9d006228:	ac430038 	sw	v1,56(v0)

Disassembly of section .rodata:

9d00622c <_io_funcs>:
9d00622c:	9d006100 9d0053b8 9d005be4 9d005c64     .a...S...[..d\..
9d00623c:	9d006134                                4a..

Disassembly of section .text._io_exit:

9d006240 <.text._io_exit>:
9d006240:	3c02a000 	lui	v0,0xa000
9d006244:	8c420004 	lw	v0,4(v0)
9d006248:	24030001 	li	v1,1
9d00624c:	03e00008 	jr	ra
9d006250:	ac430038 	sw	v1,56(v0)

Disassembly of section .rodata:

9d006254 <_io_strfuncs>:
9d006254:	9d006290 9d006298 9d0062a0 9d0062a8     .b...b...b...b..
9d006264:	9d0062b0 90641906 3fb90641 685a1686     .b....d.A..?..Zh
9d006274:	3fb685a1                                ...?

Disassembly of section .rodata:

9d006278 <.rodata>:
9d006278:	00000000 	nop
9d00627c:	41f00000 	0x41f00000

Disassembly of section .text._on_reset:

9d006280 <_on_reset>:
9d006280:	03e00008 	jr	ra
9d006284:	00000000 	nop

Disassembly of section .text._on_bootstrap:

9d006288 <_on_bootstrap>:
9d006288:	03e00008 	jr	ra
9d00628c:	00000000 	nop

Disassembly of section .text._filbuf_string:

9d006290 <_filbuf_string>:
9d006290:	03e00008 	jr	ra
9d006294:	2402ffff 	li	v0,-1

Disassembly of section .text._flsbuf_string:

9d006298 <_flsbuf_string>:
9d006298:	03e00008 	jr	ra
9d00629c:	00801021 	move	v0,a0

Disassembly of section .text._fflush_string:

9d0062a0 <_fflush_string>:
9d0062a0:	03e00008 	jr	ra
9d0062a4:	00001021 	move	v0,zero

Disassembly of section .text._fwrite_string:

9d0062a8 <_fwrite_string>:
9d0062a8:	03e00008 	jr	ra
9d0062ac:	00001021 	move	v0,zero

Disassembly of section .text._fsync_string:

9d0062b0 <_fsync_string>:
9d0062b0:	03e00008 	jr	ra
9d0062b4:	24020001 	li	v0,1
